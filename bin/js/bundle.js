var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var ButtonAnim_1 = require("./script/views/ButtonAnim");
var ColletView_1 = require("./script/views/ColletView");
var ConvergeAd_1 = require("./script/views/ConvergeAd");
var GameFighting_1 = require("./script/views/GameFighting");
var AdListLoop_1 = require("./script/views/AdListLoop");
var GameOverEndless_1 = require("./script/views/GameOverEndless");
var GameOverLevel_1 = require("./script/views/GameOverLevel");
var GoldenEggView_1 = require("./script/views/GoldenEggView");
var WXLaunch_1 = require("./script/platform/wx/WXLaunch");
var MainViewLandscape_1 = require("./script/views/MainViewLandscape");
var MainViewVertical_1 = require("./script/views/MainViewVertical");
var RankItem_1 = require("./script/views/rank/RankItem");
var WXRankView_1 = require("./script/views/rank/WXRankView");
var Resurgence_1 = require("./script/views/Resurgence");
var TipView_1 = require("./script/views/TipView");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/views/ButtonAnim.ts", ButtonAnim_1.default);
        reg("script/views/ColletView.ts", ColletView_1.default);
        reg("script/views/ConvergeAd.ts", ConvergeAd_1.default);
        reg("script/views/GameFighting.ts", GameFighting_1.default);
        reg("script/views/AdListLoop.ts", AdListLoop_1.default);
        reg("script/views/GameOverEndless.ts", GameOverEndless_1.default);
        reg("script/views/GameOverLevel.ts", GameOverLevel_1.default);
        reg("script/views/GoldenEggView.ts", GoldenEggView_1.default);
        reg("script/platform/wx/WXLaunch.ts", WXLaunch_1.default);
        reg("script/views/MainViewLandscape.ts", MainViewLandscape_1.default);
        reg("script/views/MainViewVertical.ts", MainViewVertical_1.default);
        reg("script/views/rank/RankItem.ts", RankItem_1.default);
        reg("script/views/rank/WXRankView.ts", WXRankView_1.default);
        reg("script/views/Resurgence.ts", Resurgence_1.default);
        reg("script/views/TipView.ts", TipView_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "Launch.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/platform/wx/WXLaunch":19,"./script/views/AdListLoop":24,"./script/views/ButtonAnim":26,"./script/views/ColletView":27,"./script/views/ConvergeAd":28,"./script/views/GameFighting":29,"./script/views/GameOverEndless":30,"./script/views/GameOverLevel":31,"./script/views/GoldenEggView":32,"./script/views/MainViewLandscape":33,"./script/views/MainViewVertical":34,"./script/views/Resurgence":35,"./script/views/TipView":36,"./script/views/rank/RankItem":37,"./script/views/rank/WXRankView":38}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var MyInit_1 = require("./script/MyInit");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎
        Laya.isWXPosMsg = true;
        Laya.isWXOpenDataContext = false;
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        // window["des"]();
        MyInit_1.default.init();
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        // Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
        this.onVersionLoaded();
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        var res = [
            { url: "loading/loading.atlas", type: Laya.Loader.ATLAS },
        ];
        //startScene 应该设置为launch页面
        Laya.loader.load(res, Laya.Handler.create(this, function () {
            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
        }));
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./script/MyInit":4}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("./models/ConfigData");
var HttpMgr_1 = require("./mgrCommon/HttpMgr");
var StorageMgr_1 = require("./mgrCommon/StorageMgr");
var StatisticsMgr_1 = require("./mgrCommon/StatisticsMgr");
var PlatformMgr_1 = require("./mgrCommon/PlatformMgr");
var UserData_1 = require("./models/UserData");
var Login = /** @class */ (function (_super) {
    __extends(Login, _super);
    function Login() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Login.prototype.login = function () {
        HttpMgr_1.default.instance.getRemoteJson(function (res) {
            ConfigData_1.default.initConfigData(res, true);
        });
        this.loginFun();
    };
    Login.prototype.loginFun = function () {
        var self = this;
        if (ConfigData_1.default.releasePlatform) {
            PlatformMgr_1.default.ptAPI.doLogin({
                success: function (_d) {
                    self.loginSuccess(_d);
                },
                fail: function (_d) {
                    self.loginFun();
                }
            });
        }
        else {
            var _d = {};
            _d.code = "123";
            _d.inviteId = '';
            _d.channelId = "";
            _d.success = self.loginSuccess;
            HttpMgr_1.default.instance.login(_d);
        }
    };
    Login.prototype.loginSuccess = function (data) {
        if (data) {
            UserData_1.default.isLogin = true;
            UserData_1.default.userId = data.userId;
            UserData_1.default.nickName = data.nikename;
            UserData_1.default.avatarUrl = data.headImage;
            UserData_1.default.diamond = data.userMoney || 0;
            UserData_1.default.channelId = data.channelId;
            UserData_1.default.level = data.level || 0;
            UserData_1.default.score = data.score || 0;
            UserData_1.default.openId = data.openid;
            UserData_1.default.isNew = data.isNewUser;
            UserData_1.default.exp = data.nowExp || 0;
            HttpMgr_1.default.instance.getSystemConfig();
            //缓存用户信息到本地
            StorageMgr_1.default.saveUserData();
            if (PlatformMgr_1.default.ptAPI) {
                //上传排行数据
                PlatformMgr_1.default.ptAPI.uploadRankDate({
                    level: data.level || 0,
                    score: data.score || 0,
                });
            }
            //上传统计
            StatisticsMgr_1.default.instance.loginStatisticsPost();
        }
        // EventMgr.instance.emit("loginSuccess");
    };
    return Login;
}(Laya.Script));
exports.default = Login;
},{"./mgrCommon/HttpMgr":8,"./mgrCommon/PlatformMgr":9,"./mgrCommon/StatisticsMgr":11,"./mgrCommon/StorageMgr":12,"./models/ConfigData":14,"./models/UserData":16}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PlatformMgr_1 = require("./mgrCommon/PlatformMgr");
var ConfigData_1 = require("./models/ConfigData");
var StorageMgr_1 = require("./mgrCommon/StorageMgr");
var Login_1 = require("./Login");
var ViewMgr_1 = require("./mgrCommon/ViewMgr");
var MyInit = /** @class */ (function () {
    function MyInit() {
    }
    MyInit.init = function () {
        ConfigData_1.default.initLocal();
        StorageMgr_1.default.getLocalUserData();
        PlatformMgr_1.default.initPlatform();
        ViewMgr_1.default.instance.init();
        new Login_1.default().login();
    };
    return MyInit;
}());
exports.default = MyInit;
},{"./Login":3,"./mgrCommon/PlatformMgr":9,"./mgrCommon/StorageMgr":12,"./mgrCommon/ViewMgr":13,"./models/ConfigData":14}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CurrGameData_1 = require("../models/CurrGameData");
var MyGameEvent_1 = require("./MyGameEvent");
var GameMgr = /** @class */ (function (_super) {
    __extends(GameMgr, _super);
    function GameMgr() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._fogColors = [];
        return _this;
    }
    GameMgr.prototype.onAwake = function () {
        this._gameEvent = new MyGameEvent_1.default();
        this._currGameData = new CurrGameData_1.default();
        this._scene3d = this.owner;
        this._camera = this.owner.getChildByName("Main Camera");
        // this._camera.farPlane = 33; //可以考虑这样提高性能
        //是否需要开启雾
        // this._scene3d.enableFog = true;
        // //设置雾化的颜色
        // this._scene3d.fogColor = this._fogColors[0];
        // //设置雾化的起始位置，相对于相机的距离
        // this._scene3d.fogStart = 10;
        // //设置雾化最浓处的距离。
        // this._scene3d.fogRange = 20;
    };
    GameMgr.prototype.getGameData = function () {
        return this._currGameData;
    };
    GameMgr.prototype.onEnable = function () {
    };
    GameMgr.prototype.initGameByData = function (_d) {
        this._currGameData.reset();
    };
    GameMgr.prototype.onUpdate = function () {
    };
    GameMgr.prototype.onDisable = function () {
    };
    GameMgr.instance = new GameMgr();
    return GameMgr;
}(Laya.Script));
exports.default = GameMgr;
},{"../models/CurrGameData":15,"./MyGameEvent":6}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../mgrCommon/EventMgr");
var StatisticsMgr_1 = require("../mgrCommon/StatisticsMgr");
var MyGameEvent = /** @class */ (function () {
    function MyGameEvent() {
        this.events = ["gameStart"];
        for (var index = 0; index < this.events.length; index++) {
            EventMgr_1.default.instance.on(this.events[index], this, this[this.events[index]]);
        }
    }
    MyGameEvent.prototype.gameStart = function (res) {
        StatisticsMgr_1.default.instance.startGameStatistics();
        console.log(res);
    };
    return MyGameEvent;
}());
exports.default = MyGameEvent;
},{"../mgrCommon/EventMgr":7,"../mgrCommon/StatisticsMgr":11}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//全局事件
var EventDispatcher = laya.events.EventDispatcher;
var EventMgr = /** @class */ (function (_super) {
    __extends(EventMgr, _super);
    function EventMgr() {
        return _super.call(this) || this;
    }
    ;
    //派发事件
    EventMgr.prototype.emit = function (InName, agv) {
        // console.log("派发事件" + InName,agv);
        EventMgr.eventDispatcher.event(InName, agv);
    };
    //侦听事件
    EventMgr.prototype.onEvent = function (InName, caller, listener, arg) {
        // console.log("侦听事件",InName);
        EventMgr.eventDispatcher.on(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //侦听事件
    EventMgr.prototype.onOnceEvent = function (InName, caller, listener, arg) {
        // console.log("侦听事件",InName);
        EventMgr.eventDispatcher.once(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //移除事件
    EventMgr.prototype.onOffEvent = function (InName, caller, listener, arg) {
        // console.log("关闭事件",InName);
        EventMgr.eventDispatcher.off(InName, caller, listener);
    };
    EventMgr.eventDispatcher = new EventDispatcher();
    EventMgr.instance = new EventMgr();
    return EventMgr;
}(EventDispatcher));
exports.default = EventMgr;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../models/ConfigData");
var HttpUtils_1 = require("../tools/HttpUtils");
var UserData_1 = require("../models/UserData");
var EventMgr_1 = require("./EventMgr");
var HttpMgr = /** @class */ (function () {
    function HttpMgr() {
        this._http = new HttpUtils_1.default();
    }
    //登陆
    HttpMgr.prototype.login = function (_d) {
        this._http.request({
            url: 'userLogin.action', data: _d, callback: function (res) {
                if (res.code == 0) {
                    if (res.sessionId) {
                        UserData_1.default.sessionId = res.sessionId;
                    }
                    if (_d.success) {
                        _d.success(res);
                    }
                }
                else {
                    // sessionId 过期
                    UserData_1.default.sessionId = "";
                    if (_d.fail) {
                        _d.fail(res);
                    }
                }
            }
        });
    };
    //拿线上游戏的json配制
    HttpMgr.prototype.getRemoteJson = function (_callback) {
        this._http.getRemoteJson(_callback);
    };
    //开关配制
    HttpMgr.prototype.getSystemConfig = function () {
        this._http.request({
            url: 'getSystemParamList.action', data: { nowVersion: ConfigData_1.default.version }, callback: function (res) {
                if (res.code == 0) {
                    ConfigData_1.default.ctrlInfo = {
                        isConverge: res.isConverge,
                        isShare: res.isShare,
                        isVideo: res.isVideo,
                        isWudian: res.isWudian,
                        shareInfo: res.shareInfo,
                        isBanner: res.is_banner,
                        adInfo: res.adInfo,
                        lateDelay: res.lateDelay,
                    };
                    if (res.bannerAdIds)
                        ConfigData_1.default.bannerAdIds = res.bannerAdIds.split(",");
                    if (res.rewardedAdIds)
                        ConfigData_1.default.rewardedAdIds = res.rewardedAdIds.split(",");
                    if (res.is_banner) {
                        ConfigData_1.default.mainAdMy = null;
                    }
                }
                EventMgr_1.default.instance.emit("getSystemParamListBack");
            }, fail: function (res) {
                EventMgr_1.default.instance.emit("getSystemParamListBack");
            }
        });
    };
    HttpMgr.prototype.updateUserInfo = function () {
        this._http.request({
            url: 'updateUserInfo.action', data: {
                nickname: UserData_1.default.nickName,
                headimgurl: UserData_1.default.avatarUrl,
                sex: UserData_1.default.gender,
            }
        });
    };
    HttpMgr.prototype.statisticsPost = function (_d) {
        this._http.requestStatistics(_d);
    };
    HttpMgr.prototype.videoErrorCallback = function () {
        this._http.request({
            url: 'videoCallback.action', callback: function (res) {
                if (res.code == 0) {
                    UserData_1.default.adCount = res.adCount;
                }
            }
        });
    };
    HttpMgr.prototype.getWorldRank = function (_d) {
        this._http.request({
            url: 'getWorldRank.action', data: { page: 1, type: 1 }, callback: function (res) {
                if (res.code == 0) {
                    if (_d.success) {
                        _d.success(res);
                    }
                }
            }
        });
    };
    HttpMgr.instance = new HttpMgr();
    return HttpMgr;
}());
exports.default = HttpMgr;
},{"../models/ConfigData":14,"../models/UserData":16,"../tools/HttpUtils":21,"./EventMgr":7}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../models/ConfigData");
var WXAPI_1 = require("../platform/wx/WXAPI");
var WXADMgr_1 = require("../platform/wx/WXADMgr");
var WXSubDomain_1 = require("../platform/wx/WXSubDomain");
var PlatformMgr = /** @class */ (function (_super) {
    __extends(PlatformMgr, _super);
    function PlatformMgr() {
        return _super.call(this) || this;
    }
    PlatformMgr.initPlatform = function () {
        switch (ConfigData_1.default.releasePlatform) {
            case "wx":
                PlatformMgr.ptAPI = new WXAPI_1.default();
                PlatformMgr.ptAdMgr = new WXADMgr_1.default;
                PlatformMgr.subDomain = new WXSubDomain_1.default();
                break;
            case "fb":
                //new fb的管理类
                // this.ptAPI = new FBAPI();
                // this.ptAdMgr = new FBAdMgr;
                break;
        }
    };
    PlatformMgr.instance = new PlatformMgr();
    return PlatformMgr;
}(Laya.Script));
exports.default = PlatformMgr;
},{"../models/ConfigData":14,"../platform/wx/WXADMgr":17,"../platform/wx/WXAPI":18,"../platform/wx/WXSubDomain":20}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../models/ConfigData");
var SoundMgr = /** @class */ (function () {
    function SoundMgr() {
    }
    SoundMgr.prototype.playSound = function (name) {
        if (!ConfigData_1.default.isSound) {
            return;
        }
        var url = "res/sound/" + name + ".mp3";
        if (Laya.Browser.onMiniGame) {
            var sound = laya.utils.Pool.getItem(name);
            if (sound == null) {
                sound = wx.createInnerAudioContext();
                sound.src = "res/sound/" + name + ".mp3";
                sound.onEnded(function () {
                    laya.utils.Pool.recover(name, sound);
                    sound.offEnded();
                });
            }
            sound.play();
        }
        else {
            Laya.SoundManager.playSound(url, 1);
        }
    };
    SoundMgr.prototype.playBGM = function () {
        if (!ConfigData_1.default.isSound) {
            return;
        }
        var url = "res/sound/bgm.mp3";
        if (Laya.Browser.onMiniGame) {
            this.bgm = wx.createInnerAudioContext();
            this.bgm.src = url;
            this.bgm.loop = true;
            this.bgm.play();
        }
        else {
            Laya.SoundManager.playMusic(url, 0);
        }
    };
    SoundMgr.prototype.stopBGM = function () {
        var url = "res/sound/bgm.mp3";
        if (Laya.Browser.onMiniGame) {
            if (this.bgm) {
                this.bgm.stop();
            }
        }
        else {
            Laya.SoundManager.stopMusic();
        }
    };
    SoundMgr.instance = new SoundMgr();
    return SoundMgr;
}());
exports.default = SoundMgr;
},{"../models/ConfigData":14}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpMgr_1 = require("./HttpMgr");
var UserData_1 = require("../models/UserData");
var ConfigData_1 = require("../models/ConfigData");
var StatisticsMgr = /** @class */ (function () {
    function StatisticsMgr() {
    }
    //登陆统计
    StatisticsMgr.prototype.loginStatisticsPost = function () {
        var _d = {
            action: "1005",
            from_appid: UserData_1.default.fromAppid,
            from_imgid: UserData_1.default.fromImgid,
            code: UserData_1.default.code,
            isnew: UserData_1.default.isNew ? 1 : 0,
        };
        this.statisticsPost(_d);
    };
    //点击授权统计接口
    StatisticsMgr.prototype.authorStatistics = function () {
        var _d = {
            action: "1006",
            from_appid: UserData_1.default.fromAppid,
            from_imgid: UserData_1.default.fromImgid,
            code: UserData_1.default.code,
            isnew: UserData_1.default.isNew ? 1 : 0,
        };
        this.statisticsPost(_d);
    };
    //开始游戏统计接口
    StatisticsMgr.prototype.startGameStatistics = function () {
        var _d = {
            action: "1008",
        };
        this.statisticsPost(_d);
    };
    //分享统计接口  类型: 0普通分享, 1分享复活, 2分享获取道具, 3分享获取抽奖次数
    StatisticsMgr.prototype.shareStatistics = function (type) {
        var _d = {
            action: "1009",
            type: type,
        };
        this.statisticsPost(_d);
    };
    //点击视频统计接口
    StatisticsMgr.prototype.clickVideoStatistics = function (type) {
        var _d = {
            action: "1010",
            type: type,
        };
        this.statisticsPost(_d);
    };
    //看完视频统计接口
    StatisticsMgr.prototype.videoPlayOverAdStatistics = function (type) {
        var _d = {
            action: "1011",
            type: type,
        };
        this.statisticsPost(_d);
    };
    //点击跳转统计接口
    StatisticsMgr.prototype.navigateToMiniProgramStatistics = function (_d) {
        _d.action = "1007";
        this.statisticsPost(_d);
    };
    //点击跳转成功后统计接口
    StatisticsMgr.prototype.navigateToMiniProgramBackStatistics = function (_d) {
        _d.action = "1017";
        this.statisticsPost(_d);
    };
    //统计
    StatisticsMgr.prototype.statisticsPost = function (_data) {
        var _d = {
            channel: UserData_1.default.channelId,
            my_appid: ConfigData_1.default.myAppid,
            openid: UserData_1.default.openId,
        };
        for (var key in _data) {
            if (_data.hasOwnProperty(key)) {
                _d[key] = _data[key];
            }
        }
        HttpMgr_1.default.instance.statisticsPost(_d);
    };
    StatisticsMgr.instance = new StatisticsMgr();
    return StatisticsMgr;
}());
exports.default = StatisticsMgr;
},{"../models/ConfigData":14,"../models/UserData":16,"./HttpMgr":8}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyUtils_1 = require("../tools/MyUtils");
var UserData_1 = require("../models/UserData");
var StorageMgr = /** @class */ (function () {
    function StorageMgr() {
    }
    StorageMgr.setStorage = function (_d) {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        wx.setStorage({
            key: _d.key,
            data: JSON.stringify(_d.val),
            success: _d.success,
            fail: _d.fail,
            complete: _d.complete
        });
    };
    StorageMgr.getStorage = function (_key) {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        try {
            var value = wx.getStorageSync(_key);
            if (value) {
                return value;
            }
        }
        catch (e) {
        }
    };
    StorageMgr.getLocalVirbort = function () {
        return MyUtils_1.default.isNull(StorageMgr.getStorage("virbort"));
    };
    StorageMgr.setLocalVirbort = function (str) {
        StorageMgr.setStorage({
            ket: "virbort",
            val: str
        });
    };
    StorageMgr.getLocalSound = function () {
        return MyUtils_1.default.isNull(StorageMgr.getStorage("sound"));
    };
    StorageMgr.setLocalSound = function (str) {
        StorageMgr.setStorage({
            ket: "sound",
            val: str
        });
    };
    StorageMgr.saveUserData = function () {
        var _d = {
            sessionId: UserData_1.default.sessionId,
            openId: UserData_1.default.openId,
            score: UserData_1.default.score,
            exp: UserData_1.default.exp,
            level: UserData_1.default.level,
        };
        StorageMgr.setStorage({ key: "userData", val: _d });
    };
    StorageMgr.getLocalUserData = function () {
        if (UserData_1.default.isLogin) {
            return;
        }
        var _d = StorageMgr.getStorage("userData");
        if (!MyUtils_1.default.isNull(_d)) {
            _d = JSON.parse(_d);
            UserData_1.default.sessionId = _d.sessionId;
            UserData_1.default.openId = _d.openId;
            UserData_1.default.score = _d.score || 0;
            UserData_1.default.exp = _d.exp;
            UserData_1.default.level = _d.level || 0;
        }
    };
    return StorageMgr;
}());
exports.default = StorageMgr;
},{"../models/UserData":16,"../tools/MyUtils":23}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyUtils_1 = require("../tools/MyUtils");
var EventMgr_1 = require("./EventMgr");
var ConfigData_1 = require("../models/ConfigData");
var ViewMgr = /** @class */ (function () {
    function ViewMgr() {
        this.viewDic = {};
        this.events = ["goHome", "openTip", "openResurgence", "openGameOver", "openFighting", "openRank"];
    }
    ViewMgr.prototype.init = function () {
        for (var index = 0; index < this.events.length; index++) {
            EventMgr_1.default.instance.onEvent(this.events[index], this, this[this.events[index]]);
        }
    };
    ViewMgr.prototype.goHome = function (res) {
        var viewName = ConfigData_1.default.mainBtnsType == ConfigData_1.MAINBTNSTYPE.LANDSCAPE ? "MainLandscape.scene" : "MainVertical.scene";
        this.openView({
            viewName: viewName,
            closeAll: true,
        });
    };
    ViewMgr.prototype.openRank = function (res) {
        ViewMgr.instance.openView({
            viewName: "Rank.scene",
            closeAll: res.closeAll,
            data: res
        });
    };
    ViewMgr.prototype.openFighting = function (res) {
        this.openView({
            viewName: "GameFighting.scene",
            closeAll: true,
            data: res
        });
    };
    //打开复活
    ViewMgr.prototype.openResurgence = function (res) {
        this.openView({
            viewName: "Resurgence.scene",
            closeAll: true,
            data: res
        });
    };
    //打开结算
    ViewMgr.prototype.openGameOver = function (res) {
        // let isEndLess = GameMgr.instance.getGameData().sortType == SORTTYPE.ENDLESS;
        var isEndLess = true;
        var viewName = isEndLess ? "GameOverEndless.scene" : "GameOverLevel.scene";
        this.openView({
            viewName: viewName,
            closeAll: true,
            data: res
        });
    };
    ViewMgr.prototype.openTip = function (res) {
        this.openView({
            viewName: "Tip.scene",
            closeAll: false,
            data: res
        });
    };
    ViewMgr.prototype.openView = function (_d) {
        var self = this;
        var url = _d.viewName;
        var cls = _d.cls;
        var closeAll = _d.closeAll || false;
        if (closeAll) {
            this.viewDic = {};
        }
        if (MyUtils_1.default.isNull(this.viewDic[url])) {
            Laya.Scene.open(url, closeAll, Laya.Handler.create(this, function (owner) {
                self.viewDic[url] = owner;
                var coms = owner._components;
                if (coms) {
                    for (var index = 0; index < coms.length; index++) {
                        var element = coms[index];
                        if (element.isMyBaseView) {
                            element.openView(_d.data);
                            break;
                        }
                    }
                }
            }));
        }
        else {
            var owner = this.viewDic[url];
            var coms = owner._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element.isMyBaseView) {
                        element.openView(_d.data);
                        break;
                    }
                }
            }
        }
    };
    ViewMgr.prototype.closeView = function (viewName) {
        if (MyUtils_1.default.isNull(this.viewDic[viewName])) {
            return;
        }
        this.viewDic[viewName].destroy();
        this.viewDic[viewName] = null;
    };
    ViewMgr.prototype.hideView = function (viewName) {
        if (MyUtils_1.default.isNull(this.viewDic[viewName])) {
            return;
        }
        this.viewDic[viewName].visible = false;
    };
    ViewMgr.prototype.getView = function (viewName) {
        var view = this.viewDic[viewName];
        if (!MyUtils_1.default.isNull(view)) {
            return view;
        }
    };
    ViewMgr.instance = new ViewMgr();
    return ViewMgr;
}());
exports.default = ViewMgr;
},{"../models/ConfigData":14,"../tools/MyUtils":23,"./EventMgr":7}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyUtils_1 = require("../tools/MyUtils");
var StorageMgr_1 = require("../mgrCommon/StorageMgr");
var MAINBTNSTYPE;
(function (MAINBTNSTYPE) {
    MAINBTNSTYPE[MAINBTNSTYPE["LANDSCAPE"] = 0] = "LANDSCAPE";
    MAINBTNSTYPE[MAINBTNSTYPE["VERTICAL"] = 1] = "VERTICAL";
})(MAINBTNSTYPE = exports.MAINBTNSTYPE || (exports.MAINBTNSTYPE = {}));
var SORTTYPE;
(function (SORTTYPE) {
    SORTTYPE[SORTTYPE["LEVEL"] = 0] = "LEVEL";
    SORTTYPE[SORTTYPE["ENDLESS"] = 1] = "ENDLESS"; //无尽模式
})(SORTTYPE = exports.SORTTYPE || (exports.SORTTYPE = {}));
var OPERATINGTYPE;
(function (OPERATINGTYPE) {
    OPERATINGTYPE[OPERATINGTYPE["DRAGE"] = 0] = "DRAGE";
    OPERATINGTYPE[OPERATINGTYPE["TOUCH"] = 1] = "TOUCH"; //点击屏幕
})(OPERATINGTYPE = exports.OPERATINGTYPE || (exports.OPERATINGTYPE = {}));
var ConfigData = /** @class */ (function () {
    function ConfigData() {
    }
    ConfigData.initLocal = function () {
        ConfigData.isSound = StorageMgr_1.default.getLocalSound();
        ConfigData.isVirbort = StorageMgr_1.default.getLocalVirbort();
        if (Laya.Browser.onMiniGame) {
            this.releasePlatform = "wx";
            this.systemInfo = wx.getSystemInfoSync();
        }
    };
    ConfigData.initConfigData = function (_d, remote) {
        if (remote === void 0) { remote = false; }
        if (remote) {
            ConfigData.configs = _d;
        }
        else if (!ConfigData.configs) {
            ConfigData.configs = _d;
        }
    };
    ConfigData.getConfigData = function (configName) {
        return this.ctrlInfo[configName];
    };
    /**设置声音 */
    ConfigData.setSound = function (str) {
        if (!str || str.length <= 0) {
            ConfigData.isSound = true;
            StorageMgr_1.default.setLocalSound("");
        }
        else {
            StorageMgr_1.default.setLocalSound("1");
            ConfigData.isSound = false;
        }
    };
    /**
     * 振动设置
     * @param str
     */
    ConfigData.setVirbort = function (str) {
        if (!str || str.length <= 0) {
            ConfigData.isVirbort = true;
            StorageMgr_1.default.setLocalVirbort("");
        }
        else {
            StorageMgr_1.default.setLocalVirbort("1");
            ConfigData.isVirbort = false;
        }
    };
    ConfigData.getAdData = function (adId) {
        var srt = this.getConfigData("adInfo");
        if (MyUtils_1.default.isNull(srt)) {
            return;
        }
        var adInfos = JSON.parse(srt);
        var array = [];
        for (var i = 0; i < adInfos.length; i++) {
            var adInfo = adInfos[i];
            if (adInfo.position == adId) {
                array.push(adInfo);
            }
        }
        return array;
    };
    ConfigData.mainBtnsType = 0; //主页按钮排列方式使用哪种
    ConfigData.beginnerGuide = 0; //新手引导类型
    ConfigData.releasePlatform = ""; //发布平台 wx fb
    ConfigData.myAppid = "wxbe9fe00281505169";
    ConfigData.configs = null;
    ConfigData.language = "cn";
    ConfigData.languageData = null;
    ConfigData.version = "100";
    ConfigData.jsonVersion = "100";
    // public static serverUrl: string = "https://xcx.biaocr.com/funny_frog/";
    ConfigData.serverUrl = "http://192.168.1.164:8080/funny_frog/";
    ConfigData.jsonVersionUrl = "https://p.doguane.cn/20190404/m_04171926352321.json";
    ConfigData.statisticsUrl = "https://log.zuancr.com/";
    ConfigData.isCreateAuthorization = false; //是否创建了授权按钮
    ConfigData.repeatAuthorization = false; //是否创建了授权按钮
    ConfigData.isLog = true; //是否开启日志
    ConfigData.ctrlInfo = {}; //游戏控制信息
    ConfigData.systemInfo = {}; //设备系统信息
    ConfigData.bannerAdIds = ["adunit-7c4449f9f6fcafbb"];
    ConfigData.rewardedAdIds = ["adunit-df0311118e2452c6"];
    return ConfigData;
}());
exports.default = ConfigData;
},{"../mgrCommon/StorageMgr":12,"../tools/MyUtils":23}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("./ConfigData");
//当前游戏的数据
var CurrGameData = /** @class */ (function () {
    function CurrGameData() {
        this.score = 0; //分数
        this.sortType = ConfigData_1.SORTTYPE.ENDLESS; //游戏类型
    }
    CurrGameData.prototype.reset = function () {
        this.score = 0;
    };
    return CurrGameData;
}());
exports.default = CurrGameData;
},{"./ConfigData":14}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UserData = /** @class */ (function () {
    function UserData() {
    }
    UserData.code = ""; //微信code
    UserData.openId = ""; //微信openid
    UserData.sessionId = "";
    UserData.nickName = "";
    UserData.gender = 0;
    UserData.avatarUrl = "";
    UserData.score = 0; //分数
    UserData.exp = 0; //经验
    UserData.level = 1; //等级
    UserData.index = 0; //排行
    UserData.diamond = 0;
    UserData.gold = 0;
    UserData.isNew = false;
    UserData.isLogin = false;
    return UserData;
}());
exports.default = UserData;
},{}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyUtils_1 = require("../../tools/MyUtils");
var ConfigData_1 = require("../../models/ConfigData");
var HttpMgr_1 = require("../../mgrCommon/HttpMgr");
var WXAdMgr = /** @class */ (function () {
    /**
     *
     */
    function WXAdMgr() {
        this.bannerHomeIsHide = true;
        this.bannerOtherIsHide = true;
        this.bannerClassicEndIsHide = true;
        this.isInited = false;
        this.hasAd = false;
        this.init();
    }
    WXAdMgr.prototype.init = function () {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        if (ConfigData_1.default.systemInfo.SDKVersion && MyUtils_1.default.compareVersion(ConfigData_1.default.systemInfo.SDKVersion, "2.0.4") >= 0) {
            this.isInited = true;
            this.initVedioCom();
        }
        this.preBannerTime_Home = Laya.timer.currTimer;
        this.preBannerTime_Other = Laya.timer.currTimer;
        this.preBannerTime_ClassicEnd = Laya.timer.currTimer;
    };
    WXAdMgr.prototype.initVedioCom = function () {
        var _this = this;
        var self = this;
        if (this.isInited) {
            this.rewardedVideoAd = window["wx"].createRewardedVideoAd({
                adUnitId: ConfigData_1.default.rewardedAdIds[MyUtils_1.default.random(0, ConfigData_1.default.rewardedAdIds.length - 1)]
            });
            if (this.rewardedVideoAd == undefined) {
                return;
            }
            this.rewardedVideoAd.onLoad(function () {
                console.log("rewardedVideo onload");
                self.hasAd = true;
            });
            this.rewardedVideoAd.onError(function (err) {
                self.hasAd = false;
                HttpMgr_1.default.instance.videoErrorCallback();
                if (_this.callBackErro) {
                    _this.callBackErro();
                    return;
                }
                if (self.callBackSuc != null) {
                    self.callBackSuc(self.caller);
                }
            });
            this.rewardedVideoAd.onClose(function (res) {
                // 用户点击了【关闭广告】按钮
                // 小于 2.1.0 的基础库版本，res 是一个 undefined
                if (res && res.isEnded || res === undefined) {
                    // 正常播放结束，可以下发游戏奖励
                    self.videoPlayedTimes += 1;
                    if (self.callBackSuc != null) {
                        self.callBackSuc(self.caller);
                    }
                }
                else {
                    // 播放中途退出，不下发游戏奖励
                    if (self.callBackFail != null) {
                        self.callBackFail(self.caller);
                    }
                }
            });
        }
    };
    WXAdMgr.prototype.showVideo = function (caller, callBackSuc, callBackFail, callBackErro) {
        if (!this.isInited) {
            return;
        }
        var self = this;
        this.caller = caller;
        this.callBackSuc = callBackSuc;
        this.callBackFail = callBackFail;
        this.callBackErro = callBackErro;
        if (this.hasAd) {
            this.hasAd = false;
            this.rewardedVideoAd.show();
        }
        else {
            this.rewardedVideoAd.load()
                .then(function () {
                self.rewardedVideoAd.show();
                self.hasAd = false;
            });
        }
    };
    WXAdMgr.prototype.loadBannerAdHome = function () {
        if (!Laya.Browser.onMiniGame || !this.isInited) {
            return;
        }
        this.showBannerAdHome(true);
    };
    WXAdMgr.prototype.showBannerAdHome = function (onlyLoad) {
        var _this = this;
        if (!Laya.Browser.onMiniGame || !this.isInited) {
            return;
        }
        this.destoryAllBannerAd();
        var screenW = ConfigData_1.default.systemInfo.windowWidth;
        var _width = Laya.stage.width / 2 - 140;
        var screenH = ConfigData_1.default.systemInfo.windowHeight;
        this.bannerHomeIsHide = false;
        if (Laya.timer.currTimer - this.preBannerTime_Home > 30000) {
            if (this.bannerHome) {
                this.bannerHome.destroy();
                this.bannerHome = null;
            }
        }
        if (!this.bannerHome) {
            this.destroyBannerAdHome();
            this.bannerHome = window["wx"].createBannerAd({
                adUnitId: ConfigData_1.default.bannerAdIds[MyUtils_1.default.random(0, ConfigData_1.default.bannerAdIds.length - 1)],
                style: {
                    left: 0,
                    top: screenH - 100,
                    width: _width,
                }
            });
            this.bannerHome.onResize(function (r) {
                _this.bannerHome.style.left = (screenW - _this.bannerHome.style.realWidth) / 2;
                _this.bannerHome.style.top = screenH - _this.bannerHome.style.realHeight;
                if (screenH / screenW > 2) {
                    _this.bannerHome.style.top = _this.bannerHome.style.top - 10;
                }
            });
            this.bannerHome.onError(function (res) {
                console.log("广告加载错误:", res);
            });
            // this.bannerHome.onLoad(()=>{
            //     if(this.bannerHomeIsHide){
            //         this.bannerHome.destroy();
            //         return;
            //     }
            //     this.bannerHome.show();
            // })
            this.preBannerTime_Home = Laya.timer.currTimer;
        }
        if (onlyLoad) {
            return;
        }
        if (this.bannerHome != undefined) {
            this.bannerHome.show();
        }
    };
    WXAdMgr.prototype.showBannerAdOther = function () {
        var _this = this;
        if (!Laya.Browser.onMiniGame || !this.isInited) {
            return;
        }
        this.destoryAllBannerAd();
        var screenW = ConfigData_1.default.systemInfo.windowWidth;
        var _width = screenW;
        var screenH = ConfigData_1.default.systemInfo.windowHeight;
        this.bannerOtherIsHide = false;
        if (Laya.timer.currTimer - this.preBannerTime_Other > 30000) {
            if (this.bannerOther) {
                this.bannerOther.destroy();
                this.bannerOther = null;
            }
        }
        if (!this.bannerOther) {
            this.destroyBannerAdOther();
            this.bannerOther = window["wx"].createBannerAd({
                adUnitId: ConfigData_1.default.bannerAdIds[MyUtils_1.default.random(0, ConfigData_1.default.bannerAdIds.length - 1)],
                style: {
                    left: 0,
                    top: screenH - 100,
                    width: _width,
                }
            });
            this.bannerOther.onResize(function (r) {
                _this.bannerOther.style.left = (screenW - _this.bannerOther.style.realWidth) / 2;
                _this.bannerOther.style.top = screenH - _this.bannerOther.style.realHeight - 10;
                if (screenH / screenW > 2) {
                    _this.bannerOther.style.top = _this.bannerOther.style.top - 25;
                }
            });
            this.bannerOther.onError(function (res) {
                console.log("广告加载错误:", res);
            });
            this.preBannerTime_Other = Laya.timer.currTimer;
        }
        if (this.bannerOther != undefined) {
            this.bannerOther.show();
        }
    };
    WXAdMgr.prototype.showBannerAdClassicEnd = function () {
        var _this = this;
        if (!Laya.Browser.onMiniGame || !this.isInited) {
            return;
        }
        this.destoryAllBannerAd();
        var screenW = ConfigData_1.default.systemInfo.windowWidth;
        var _width = screenW;
        var screenH = ConfigData_1.default.systemInfo.windowHeight;
        this.bannerClassicEndIsHide = false;
        if (Laya.timer.currTimer - this.preBannerTime_Other > 30000) {
            if (this.bannerClassicEnd) {
                this.bannerClassicEnd.destroy();
                this.bannerClassicEnd = null;
            }
        }
        if (!this.bannerClassicEnd) {
            this.destroyBannerAdClassicEnd();
            this.bannerClassicEnd = window["wx"].createBannerAd({
                adUnitId: 'adunit-dcacf7fd6e654b4d',
                style: {
                    left: 0,
                    top: screenH - 100,
                    width: _width,
                }
            });
            this.bannerClassicEnd.onError(function (res) {
                console.log("广告加载错误:", res);
            });
            this.bannerClassicEnd.onResize(function (r) {
                _this.bannerClassicEnd.style.left = (screenW - _this.bannerClassicEnd.style.realWidth) / 2;
                _this.bannerClassicEnd.style.top = screenH - _this.bannerClassicEnd.style.realHeight - 10;
                if (screenH / screenW > 2) {
                    _this.bannerClassicEnd.style.top = _this.bannerClassicEnd.style.top - 25;
                }
            });
            this.preBannerTime_Other = Laya.timer.currTimer;
        }
        if (this.bannerClassicEnd != undefined) {
            this.bannerClassicEnd.show();
        }
    };
    WXAdMgr.prototype.destroyBannerAdHome = function () {
        this.bannerHomeIsHide = true;
        if (this.bannerHome) {
            this.preBannerTime_Home = 0;
            if (ConfigData_1.default.ctrlInfo.is_banner == 1) {
                this.bannerHome.destroy();
                this.bannerHome = null;
            }
            else {
                this.bannerHome.hide();
            }
        }
    };
    WXAdMgr.prototype.destroyBannerAdOther = function () {
        this.bannerOtherIsHide = true;
        if (this.bannerOther) {
            this.preBannerTime_Other = 0;
            if (ConfigData_1.default.ctrlInfo.is_banner == 1) {
                this.bannerOther.destroy();
                this.bannerOther = null;
            }
            else {
                this.bannerOther.hide();
            }
        }
    };
    WXAdMgr.prototype.destroyBannerAdClassicEnd = function () {
        this.bannerClassicEndIsHide = true;
        if (this.bannerClassicEnd) {
            this.preBannerTime_ClassicEnd = 0;
            if (ConfigData_1.default.ctrlInfo.is_banner == 1) {
                this.bannerClassicEnd.destroy();
                this.bannerClassicEnd = null;
            }
            else {
                this.bannerClassicEnd.hide();
            }
        }
    };
    WXAdMgr.prototype.destoryAllBannerAd = function () {
        this.destroyBannerAdHome();
        this.destroyBannerAdOther();
        this.destroyBannerAdClassicEnd();
    };
    return WXAdMgr;
}());
exports.default = WXAdMgr;
},{"../../mgrCommon/HttpMgr":8,"../../models/ConfigData":14,"../../tools/MyUtils":23}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UserData_1 = require("../../models/UserData");
var HttpMgr_1 = require("../../mgrCommon/HttpMgr");
var MyUtils_1 = require("../../tools/MyUtils");
var ConfigData_1 = require("../../models/ConfigData");
var EventMgr_1 = require("../../mgrCommon/EventMgr");
var StatisticsMgr_1 = require("../../mgrCommon/StatisticsMgr");
var MyLog_1 = require("../../tools/MyLog");
var SoundMgr_1 = require("../../mgrCommon/SoundMgr");
var ViewMgr_1 = require("../../mgrCommon/ViewMgr");
var WXAPI = /** @class */ (function () {
    function WXAPI() {
        var _this = this;
        this._launch = {};
        this.btns = [];
        this.stime = 0;
        this.shareBackArgs = {};
        this.caller = null;
        this._launch = window["wx"].getLaunchOptionsSync();
        EventMgr_1.default.instance.once("getSystemParamListBack", this, function () {
            _this.showShareMenu();
        });
        this.setOpenDomainOffset();
        window["wx"].onShow(function (res) {
            var shareTicket = res.shareTicket;
            var query = res.query || {};
            if (shareTicket != undefined && query.avatarUrlGroup
                && query.nickNameGroup) {
                //在这做群排行的弹框
            }
            else {
                //分享回调
                var _d = _this.shareBackArgs || {};
                var self_1 = _this;
                var time = Laya.Browser.now() - _this.stime;
                if (Laya.Browser.now() - _this.stime > 2000) {
                    _d.success = true;
                    if (_this.shareBack && _this.caller) {
                        _this.shareBack.call(_this.caller, _d);
                    }
                    _this.shareBack = null;
                }
                else {
                    _d.success = false;
                    if (_this.shareBack && _this.caller) {
                        _this.shareBack.call(_this.caller, _d);
                    }
                    _this.shareBack = null;
                }
            }
            //播放音乐 切到后台背景音乐消失需要重新播放
            SoundMgr_1.default.instance.playBGM();
            //聚合广告页面
            //控制结束页面的分享，不显示聚合广告页面
            var notShowAd = false;
            if (_this.shareBackArgs) {
                notShowAd = _this.shareBackArgs["notShowAd"];
            }
            Laya.timer.frameOnce(1, _this, function () {
                //只在结束界面显示聚合广告页面
                var gameOverView = ViewMgr_1.default.instance.getView("GameOver.scene");
                var convergeAd = ViewMgr_1.default.instance.getView("ConvergeAd.scene");
                if (!notShowAd && ConfigData_1.default.ctrlInfo.isConverge == 1 && gameOverView && !convergeAd) {
                    ViewMgr_1.default.instance.openView({
                        viewName: "ConvergeAd.scene",
                        closeAll: false,
                    });
                }
            });
            _this.shareBackArgs = {};
        });
        window["wx"].onHide(function () {
            _this.stime = Laya.Browser.now();
        });
    }
    WXAPI.prototype.onGoShare = function (res) {
        this.caller = res.caller;
        this.shareBack = res.callback;
        this.shareBackArgs = res.args || {};
    };
    /*
       success 成功回调
       fail 失败回调
   */
    WXAPI.prototype.doLogin = function (_data) {
        var _this = this;
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        window["wx"].login({
            success: function (res) {
                UserData_1.default.code = res.code;
                //登录接口
                var launch = _this.getLaunchData();
                var _d = {};
                _d.code = res.code;
                if (launch.query) {
                    _d.inviteId = launch.query.invite_uid || '';
                    _d.channelId = launch.query.channel || "";
                    UserData_1.default.fromAppid = launch.query.cur_share_id || "";
                }
                if (launch.referrerInfo) {
                    UserData_1.default.fromImgid = launch.referrerInfo.appId;
                }
                _d.success = _data.success;
                _d.fail = _data.fail;
                HttpMgr_1.default.instance.login(_d);
            },
        });
    };
    WXAPI.prototype.getOffsetOpenDomain = function () {
        return this.offsetOpenDomain;
    };
    WXAPI.prototype.getLaunchData = function () {
        return this._launch;
    };
    WXAPI.prototype.getQuery = function () {
        return this._launch.query;
    };
    WXAPI.prototype.getReferrerInfo = function () {
        return this._launch.referrerInfo;
    };
    WXAPI.prototype.uploadRankDate = function (_data) {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        var d = [];
        if (!MyUtils_1.default.isNull(_data.level)) {
            d.push({ key: "level", value: _data.level + "" });
        }
        if (!MyUtils_1.default.isNull(_data.score)) {
            d.push({ key: "score", value: _data.score + "" });
        }
        window["wx"].setUserCloudStorage({
            KVDataList: d,
            success: function (res) {
                // console.log("上传数据到微信服务器:" + JSON.stringify(res));
            }
        });
    };
    WXAPI.prototype.showShareMenu = function () {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        window["wx"].showShareMenu({ withShareTicket: true });
        var shareInfo = this.createShareInfo();
        window["wx"].onShareAppMessage(function () {
            return shareInfo;
        });
    };
    WXAPI.prototype.createShareInfo = function (_d) {
        var sd = JSON.parse(ConfigData_1.default.getConfigData("shareInfo"));
        if (!sd) {
            return null;
        }
        var rand_t = MyUtils_1.default.random(0, sd.length - 1);
        var title = sd[rand_t].title;
        var imageUrl = sd[rand_t].img;
        var query = "invite_uid=" + (UserData_1.default.userId ? UserData_1.default.userId : "");
        query += "&cur_share_id=" + sd[rand_t].id;
        query += "&avatarUrlGroup=" + (UserData_1.default.avatarUrl ? UserData_1.default.avatarUrl : "");
        query += "&nickNameGroup=" + (UserData_1.default.nickName ? UserData_1.default.nickName : "");
        query += "&channel=" + (UserData_1.default.channelId ? UserData_1.default.channelId : "");
        if (_d) {
            if (_d.id) {
                query += "&scene=" + _d.id;
            }
            if (_d.itemId) {
                query += "&itemId=" + _d.itemId;
            }
            if (_d.type) {
                query += "&type=" + _d.type;
            }
            if (_d.share_title) {
                title = _d.share_title;
            }
            if (_d.share_img) {
                imageUrl = _d.share_img;
            }
        }
        return {
            title: title,
            imageUrl: imageUrl,
            query: query,
        };
    };
    WXAPI.prototype.shareAppMessage = function (_d, type) {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        if (_d.callback) {
            this.onGoShare(_d);
        }
        if (!ConfigData_1.default.getConfigData("shareInfo")) {
            return;
        }
        StatisticsMgr_1.default.instance.shareStatistics(type);
        var shareInfo = this.createShareInfo(_d);
        window["wx"].shareAppMessage(shareInfo);
    };
    WXAPI.prototype.navigateToMiniProgram = function (_d) {
        if (!_d || !_d.appId || !Laya.Browser.onMiniGame) {
            return;
        }
        StatisticsMgr_1.default.instance.navigateToMiniProgramStatistics(_d);
        window["wx"].navigateToMiniProgram({
            appId: _d.appid,
            path: _d.path,
            extraData: {
                foo: 'bar',
            },
            // envVersion: 'develop',
            complete: function (res) {
                if (_d.complete) {
                    _d.complete();
                }
                _d.complete = null;
            },
            fail: function (res) {
                window["wx"].showToast({ title: "跳转失败" });
                if (_d.fail) {
                    _d.fail();
                }
                _d.fail = null;
            },
            success: function (res) {
                StatisticsMgr_1.default.instance.navigateToMiniProgramBackStatistics(_d);
                if (_d.callback) {
                    _d.callback("success");
                }
                _d.callback = null;
            }
        });
    };
    /**
    * 设置子域界面偏移，适配不同的屏幕界面
    */
    WXAPI.prototype.setOpenDomainOffset = function () {
        var offsetX = Laya.stage.width - 750;
        if (offsetX < 0) {
            offsetX = 0;
        }
        var offsetY = Laya.stage.height - 1334;
        if (offsetY < 0) {
            offsetY = 0;
        }
        this.offsetOpenDomain = new Laya.Vector2(offsetX, offsetY);
    };
    WXAPI.prototype.createAuthorizationButton = function (_data) {
        if (Laya.Browser.onMiniGame) {
            var self_2 = this;
            wx.getSetting({
                success: function (res) {
                    if (res.authSetting && res.authSetting["scope.userInfo"]) {
                        MyLog_1.default.log("已经授权");
                    }
                    else {
                        var sWidth = Laya.stage.width;
                        var sHeight = Laya.stage.height;
                        var xb = (Laya.Browser.width / Laya.Browser.pixelRatio) / sWidth;
                        var yb = (Laya.Browser.height / Laya.Browser.pixelRatio) / sHeight;
                        var left = (_data.x - _data.width / 2) * xb;
                        var top_1 = (_data.y + self_2.offsetOpenDomain.y - _data.height / 2) * yb;
                        var width = _data.width * xb;
                        var height = (_data.height) * yb;
                        var backgroundColor = "#ffffff";
                        if (_data.isFull) {
                            left = 0;
                            top_1 = (_data.y + self_2.offsetOpenDomain.y / 2) * yb;
                            width = width;
                            height = height;
                            backgroundColor = "#ff0703";
                        }
                        var button_1 = window["wx"].createUserInfoButton({
                            type: 'text',
                            text: '',
                            style: {
                                left: left,
                                top: top_1,
                                width: width,
                                height: height,
                            },
                        });
                        if (self_2.btns) {
                            self_2.btns.push({ "button": button_1, "isFull": _data.isFull });
                        }
                        button_1.onTap(function (res) {
                            if (res && res.userInfo) {
                                UserData_1.default.nickName = res.userInfo.nickName;
                                UserData_1.default.gender = res.userInfo.gender;
                                UserData_1.default.avatarUrl = res.userInfo.avatarUrl;
                                StatisticsMgr_1.default.instance.authorStatistics();
                                HttpMgr_1.default.instance.updateUserInfo();
                                if (self_2.btns) {
                                    self_2.btns.forEach(function (element) {
                                        if (element) {
                                            element.button.destroy();
                                        }
                                    });
                                }
                                self_2.btns = null;
                                button_1.destroy();
                                if (_data.successBack) {
                                    _data.successBack();
                                }
                            }
                            else {
                                self_2.destoryAuthorization();
                                if (_data.failBack) {
                                    _data.failBack();
                                }
                            }
                        });
                    }
                },
                fail: function () { },
                complete: function () { }
            });
        }
    };
    WXAPI.prototype.destoryAuthorization = function () {
        if (!ConfigData_1.default.repeatAuthorization) { //如果不需要重复弹授权
            ConfigData_1.default.isCreateAuthorization = true;
            if (this.btns) {
                this.btns.forEach(function (element) {
                    if (element) {
                        element.button.destroy();
                    }
                });
            }
        }
        else {
            this.setAuthorizationCheck(false);
        }
    };
    WXAPI.prototype.setAuthorizationCheck = function (flag) {
        if (this.btns) {
            this.btns.forEach(function (element) {
                if (element) {
                    if (flag) {
                        element.button.show();
                    }
                    else {
                        element.button.hide();
                    }
                }
            });
        }
    };
    WXAPI.prototype.vibrateShort = function () {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        if (ConfigData_1.default.isVirbort) {
            window["wx"].vibrateShort();
        }
    };
    WXAPI.prototype.vibrateLong = function () {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        if (ConfigData_1.default.isVirbort) {
            window["wx"].vibrateLong();
        }
    };
    WXAPI.prototype.openCustomerServiceConversation = function () {
        window["wx"].openCustomerServiceConversation();
    };
    return WXAPI;
}());
exports.default = WXAPI;
},{"../../mgrCommon/EventMgr":7,"../../mgrCommon/HttpMgr":8,"../../mgrCommon/SoundMgr":10,"../../mgrCommon/StatisticsMgr":11,"../../mgrCommon/ViewMgr":13,"../../models/ConfigData":14,"../../models/UserData":16,"../../tools/MyLog":22,"../../tools/MyUtils":23}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../../models/ConfigData");
var SoundMgr_1 = require("../../mgrCommon/SoundMgr");
var EventMgr_1 = require("../../mgrCommon/EventMgr");
var WXLaunch = /** @class */ (function (_super) {
    __extends(WXLaunch, _super);
    function WXLaunch() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.toProcess = 1;
        _this.progress = 0;
        _this.scene3dUrl = "res3d/Conventional/Eatitup.ls";
        return _this;
    }
    WXLaunch.prototype.onEnable = function () {
        var group = this.owner.getChildByName("progressGroup");
        this.pro = group.getChildByName("progress");
        this.proLabel = group.getChildByName("proLab");
        this.loadRes();
    };
    WXLaunch.prototype.loadRes = function () {
        var _this = this;
        var resource = [
            { url: "res/atlas/beyond.atlas", type: Laya.Loader.ATLAS },
            // { url: "res/atlas/collet.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/common.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/convergeAd.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/game.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/goldenEgg.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/guide.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/Hesucceeds.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/mainview.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/numberFonts.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/rank.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/Resurgence.atlas", type: Laya.Loader.ATLAS },
            { url: "res/json/config.json", type: Laya.Loader.JSON },
            { url: "res/language/" + ConfigData_1.default.language + ".json", type: Laya.Loader.JSON },
        ];
        var self = this;
        if (Laya.Browser.onMiniGame) {
            var loadTask = window["wx"].loadSubpackage({
                name: 'res3d',
                success: function (res) {
                    // 分包加载成功后通过 success 回调
                    var loadTask1 = window["wx"].loadSubpackage({
                        name: 'res',
                        success: function (res) {
                            // 分包加载成功后通过 success 回调
                            Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                                self.updateProgress(0.99);
                                _this.loadResComplete();
                            }), Laya.Handler.create(_this, function (res) {
                                self.updateProgress(0.6 + res * 0.4);
                            }));
                        },
                        fail: function (res) {
                            // 分包加载失败通过 fail 回调时强行重新加载资源，这样才能进游戏
                            _this.loadRes();
                        }
                    });
                    loadTask1.onProgressUpdate(function (res) {
                        self.updateProgress(0.3 + res.progress * 0.003);
                    });
                },
                fail: function (res) {
                    // 分包加载失败通过 fail 回调
                    _this.loadRes();
                }
            });
            loadTask.onProgressUpdate(function (res) {
                self.updateProgress(res.progress * 0.003);
            });
        }
        else {
            Laya.loader.load(resource, Laya.Handler.create(this, function () {
                self.updateProgress(0.99);
                _this.loadResComplete();
            }), Laya.Handler.create(this, function (res) {
                self.updateProgress(res);
            }));
        }
    };
    WXLaunch.prototype.loadResComplete = function () {
        //本地游戏数据配置
        ConfigData_1.default.initConfigData(Laya.Loader.getRes("res/json/config.json"));
        //语言文件
        ConfigData_1.default.languageData = Laya.Loader.getRes("res/json/" + ConfigData_1.default.language + ".json");
        // Laya.Scene3D.load(this.scene3dUrl, Laya.Handler.create(this, this.On3DResLoadComplete));
        this.On3DResLoadComplete();
    };
    WXLaunch.prototype.On3DResLoadComplete = function (scene) {
        this.updateProgress(1);
        if (Laya.Browser.onMiniGame) {
            console.log("透传到子域");
            Laya.MiniAdpter.sendAtlasToOpenDataContext("res/atlas/rank.atlas"); //使用接口将图集透传到子域
        }
        SoundMgr_1.default.instance.playBGM();
        // scene.addComponent(GameMgr);
        // Laya.stage.addChildAt(scene,0);
        EventMgr_1.default.instance.emit("goHome");
    };
    /**
         * 更新资源加载进度
         */
    WXLaunch.prototype.updateProgress = function (progress) {
        var _this = this;
        this.progress = progress;
        this.progress > this.toProcess ? this.toProcess : this.progress;
        //最高100%进度
        if (this.progress >= 1) {
            // Laya.Tween.clearAll(this.pro);
            this.proLabel.text = "游戏加载完毕，即将进入游戏...";
            this.pro.width = 500;
            Laya.timer.frameOnce(2, this, function () {
                _this.owner.destroy();
                Laya.loader.clearRes("loading/loading.atlas");
                _this.destroy();
            });
        }
        else {
            this.pro.width = 500 * this.progress;
            // Laya.Tween.clearAll(this.pro);
            // Laya.Tween.to(this.pro,{width:500 * this.progress},100,Laya.Ease.linearNone)
            //进度增加
            this.proLabel.text = "资源加载中..." + Math.floor(this.progress * 100) + "%";
        }
    };
    return WXLaunch;
}(Laya.Script));
exports.default = WXLaunch;
},{"../../mgrCommon/EventMgr":7,"../../mgrCommon/SoundMgr":10,"../../models/ConfigData":14}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXSubDomain = /** @class */ (function () {
    function WXSubDomain() {
    }
    WXSubDomain.prototype.setOpenView = function (_v) {
        this.wxOpenDataView = _v;
    };
    WXSubDomain.prototype.closeFriendRank = function () {
        if (!Laya.Browser.onMiniGame || !this.wxOpenDataView) {
            return;
        }
        this.wxOpenDataView.postMsg({ type: "closeFriendRank" });
    };
    WXSubDomain.prototype.openFriendRank = function (_d) {
        if (!Laya.Browser.onMiniGame || !this.wxOpenDataView) {
            return;
        }
        // Laya.timer.frameOnce(1, this, ()=> {
        this.wxOpenDataView.postMsg({ type: "openFriendRank", data: _d });
        // })
    };
    WXSubDomain.prototype.openGameOver = function (_d) {
        if (!Laya.Browser.onMiniGame || !this.wxOpenDataView) {
            return;
        }
        this.wxOpenDataView.postMsg({ type: "openGameOver", data: _d });
    };
    WXSubDomain.prototype.closeGameOver = function () {
        if (!Laya.Browser.onMiniGame || !this.wxOpenDataView) {
            return;
        }
        this.wxOpenDataView.postMsg({ type: "closeGameOver" });
    };
    WXSubDomain.prototype.openSurpassOther = function (_d) {
        if (!Laya.Browser.onMiniGame || !this.wxOpenDataView) {
            return;
        }
        this.wxOpenDataView.postMsg({ type: "openSurpassOther", data: _d });
    };
    WXSubDomain.prototype.closeSurpassOther = function () {
        if (!Laya.Browser.onMiniGame || !this.wxOpenDataView) {
            return;
        }
        this.wxOpenDataView.postMsg({ type: "closeSurpassOther" });
    };
    WXSubDomain.prototype.openGoingSurpassOther = function (_d) {
        if (!Laya.Browser.onMiniGame || !this.wxOpenDataView) {
            return;
        }
        this.wxOpenDataView.postMsg({ type: "openGoingSurpassOther", data: _d });
    };
    WXSubDomain.prototype.closeGoingSurpassOther = function () {
        if (!Laya.Browser.onMiniGame || !this.wxOpenDataView) {
            return;
        }
        this.wxOpenDataView.postMsg({ type: "closeGoingSurpassOther" });
    };
    WXSubDomain.prototype.openProvocationOther = function (_d) {
        if (!Laya.Browser.onMiniGame || !this.wxOpenDataView) {
            return;
        }
        this.wxOpenDataView.postMsg({ type: "openProvocationOther", data: _d });
    };
    WXSubDomain.prototype.closeProvocationOther = function () {
        if (!Laya.Browser.onMiniGame || !this.wxOpenDataView) {
            return;
        }
        this.wxOpenDataView.postMsg({ type: "closeProvocationOther" });
    };
    return WXSubDomain;
}());
exports.default = WXSubDomain;
},{}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../models/ConfigData");
var UserData_1 = require("../models/UserData");
var HttpUtils = /** @class */ (function () {
    function HttpUtils() {
    }
    HttpUtils.prototype.request = function (_d) {
        var meth = _d.meth || "post";
        var data = _d.data || {};
        var url = "";
        if (_d.url.indexOf("https://") > -1 ||
            _d.url.indexOf("http://") > -1) {
            url = _d.url;
        }
        else {
            url = ConfigData_1.default.serverUrl + _d.url;
        }
        var completeFunc = function (res) {
            if (_d.callback) {
                // console.log("url:" + url +" res:" + JSON.stringify(res));
                _d.callback(res);
            }
            _d.callback = null;
            _d = null;
        };
        var errorFunc = function (res) {
            if (_d.fail) {
                _d.fail(res);
            }
            _d.fail = null;
            _d = null;
        };
        if (UserData_1.default.sessionId) {
            data.sessionId = UserData_1.default.sessionId;
            // console.log("sessionId：" + UserData.sessionId);
        }
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, this, completeFunc);
        xhr.once(Laya.Event.ERROR, this, errorFunc);
        xhr.send(url, JSON.stringify(data), meth, "json", ["Content-Type", "application/x-www-form-urlencoded"]);
    };
    HttpUtils.prototype.requestStatistics = function (_d) {
        var meth = _d.meth || "post";
        var data = _d.data || {};
        _d.url = _d.url || "";
        var url = ConfigData_1.default.statisticsUrl + _d.url;
        // var completeDel = (res) => {
        //     if (_d.callback) {
        //         // console.log("url:" + url +" res:" + JSON.stringify(res));
        //         _d.callback(res);
        //     }
        // };
        // var errorDel = (res) => {
        //     if (_d.fail)  {
        //         _d.fail(res);
        //     }
        // };
        if (UserData_1.default.sessionId) {
            data.sessionId = UserData_1.default.sessionId;
            // console.log("sessionId：" + UserData.sessionId);
        }
        var xhr = new Laya.HttpRequest();
        // xhr.once(Laya.Event.COMPLETE, this, completeDel);
        // xhr.once(Laya.Event.ERROR, this, errorDel);
        xhr.send(url, "param=" + JSON.stringify(data), meth, "json", ["Content-Type", "application/x-www-form-urlencoded"]);
    };
    //拿线上游戏的json配制
    HttpUtils.prototype.getRemoteJson = function (_callback) {
        var _this = this;
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, this, function (data) {
            if (data && typeof data != "string" && typeof data == "object") {
                if (ConfigData_1.default.jsonVersion != data.vision) {
                    xhr = new Laya.HttpRequest();
                    xhr.once(Laya.Event.COMPLETE, _this, function (res) {
                        if (res && typeof res != "string" && typeof res == "object") {
                            if (_callback) {
                                _callback(res);
                            }
                        }
                    });
                    xhr.send(data.path, null, "get", "json", ["Content-Type", "application/json"]);
                }
            }
        });
        xhr.send(ConfigData_1.default.jsonVersionUrl, null, "get", "json", ["Content-Type", "application/json"]);
    };
    return HttpUtils;
}());
exports.default = HttpUtils;
},{"../models/ConfigData":14,"../models/UserData":16}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../models/ConfigData");
var MyLog = /** @class */ (function () {
    function MyLog() {
    }
    MyLog.log = function (arg1, arg2) {
        if (ConfigData_1.default.isLog) {
            console.log(arg1, arg2);
        }
    };
    return MyLog;
}());
exports.default = MyLog;
},{"../models/ConfigData":14}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../models/ConfigData");
var MyUtils = /** @class */ (function () {
    function MyUtils() {
    }
    MyUtils.isNull = function (obj) {
        if (obj != 0 && (obj == null || obj == "" || obj == undefined)) {
            return true;
        }
        return false;
    };
    MyUtils.random = function (min, max) {
        var range = max - min;
        var rand = Math.random();
        var num = min + Math.round(rand * range); //四舍五入
        return num;
    };
    /**
 * 比较版本号，格式xx.xx.xx
 * @param v1 当前版本号
 * @param v2 目标版本号
*/
    MyUtils.compareVersion = function (v1, v2) {
        v1 = v1.split('.');
        v2 = v2.split('.');
        var len = Math.max(v1.length, v2.length);
        while (v1.length < len) {
            v1.push('0');
        }
        while (v2.length < len) {
            v2.push('0');
        }
        for (var i = 0; i < len; i++) {
            var num1 = parseInt(v1[i]);
            var num2 = parseInt(v2[i]);
            if (num1 > num2) {
                return 1;
            }
            else if (num1 < num2) {
                return -1;
            }
        }
        return 0;
    };
    //顶部按钮对齐，大体适配是ok的
    MyUtils.autoScreenSize = function (node) {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        var info = ConfigData_1.default.systemInfo;
        var Y = 60;
        if (info.statusBarHeight < 20) { //18
            Y += 10;
        }
        else if (info.statusBarHeight >= 30) { //44
            Y += 60;
        }
        else if (info.statusBarHeight > 20 && info.statusBarHeight < 30) { //27
            Y += 74;
        }
        node.forEach(function (e) {
            e.y = Y;
        });
    };
    return MyUtils;
}());
exports.default = MyUtils;
},{"../models/ConfigData":14}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyUtils_1 = require("../tools/MyUtils");
var PlatformMgr_1 = require("../mgrCommon/PlatformMgr");
/**
* name
*/
var Direction;
(function (Direction) {
    Direction[Direction["LEFT"] = 0] = "LEFT";
    Direction[Direction["RIGHT"] = 1] = "RIGHT";
})(Direction || (Direction = {}));
var AdListLoop = /** @class */ (function (_super) {
    __extends(AdListLoop, _super);
    function AdListLoop() {
        var _this = _super.call(this) || this;
        _this._cellWidth = 101;
        _this._cellHeight = 128;
        _this._spaceX = 20;
        _this.speedTime = 500;
        _this.itemWidth = 101;
        return _this;
    }
    AdListLoop.prototype.init = function (_d) {
        this._cellWidth = _d._cellWidth || 101;
        this._spaceX = _d._spaceX || 20;
        this.speedTime = _d.speedTime || 500;
        this._cellHeight = _d._cellHeight || 128;
    };
    AdListLoop.prototype.start = function (adInfos) {
        if (MyUtils_1.default.isNull(adInfos)) {
            return;
        }
        var self = this;
        this.owner.removeChildren();
        this._cells = [];
        var isOffset = adInfos.length > 4 ? true : false;
        var _loop_1 = function () {
            adinfo = adInfos[i];
            var image = new Laya.Image();
            this_1.owner.addChild(image);
            if (isOffset) {
                image.pos((i - 1) * (this_1._cellWidth + this_1._spaceX), 0);
            }
            else {
                image.pos((i) * (this_1._cellWidth + this_1._spaceX), 0);
            }
            image.skin = adinfo.param;
            image.width = this_1._cellWidth;
            image.height = this_1._cellHeight;
            var index = i;
            image.on(Laya.Event.MOUSE_DOWN, this_1, function () {
                self.startTime = Laya.timer.currTimer;
            });
            image.on(Laya.Event.MOUSE_UP, this_1, function () {
                if (Laya.timer.currTimer - self.startTime <= 200) {
                    self.tiaozhuang(adInfos[index], 3);
                }
                self.startTime = Laya.timer.currTimer;
            });
            this_1._cells.push(image);
        };
        var this_1 = this, adinfo;
        for (var i = 0; i < adInfos.length; i++) {
            _loop_1();
        }
        this.fristPosX = this._cells[0].x;
        this.endPosX = this._cells[this._cells.length - 1].x;
        this.moveDirection = Direction.RIGHT;
        this._mouseDown = false;
        this.autoMove();
        this.owner.on(Laya.Event.MOUSE_DOWN, this, this.mouseDown);
        this.owner.on(Laya.Event.MOUSE_UP, this, this.mouseUp);
        this.owner.on(Laya.Event.MOUSE_MOVE, this, this.mouseMove);
        this.owner.on(Laya.Event.MOUSE_OUT, this, this.mouseUp);
    };
    AdListLoop.prototype.tiaozhuang = function (adInfo, positionIdx) {
        var _d = {
            my_uuid: positionIdx,
            to_appid: adInfo.appid,
            appid: adInfo.appid,
            toLinks: adInfo.toLinks,
        };
        if (PlatformMgr_1.default.ptAPI)
            PlatformMgr_1.default.ptAPI.navigateToMiniProgram(_d);
    };
    AdListLoop.prototype.autoMove = function () {
        if (this._cells.length <= 4) {
            return;
        }
        Laya.timer.clearAll(this);
        Laya.timer.loop(10, this, function () {
            this.move();
        });
    };
    AdListLoop.prototype.move = function () {
        var index = 0;
        var self = this;
        var distance = -(this._cells[0].x - this.fristPosX);
        var timer = Math.abs(this.speedTime / (this._cellWidth + this._spaceX) * distance);
        for (var i = 0; i < this._cells.length; i++) {
            var cell = this._cells[i];
            cell.pos(cell.x - 0.5, 0);
        }
        if (this._cells[this._cells.length - 1].x > this.endPosX) {
            this.endMoveToFrist();
        }
        if (this._cells[0].x < this.fristPosX) {
            this.firstMoveToEnd();
        }
    };
    AdListLoop.prototype.firstMoveToEnd = function () {
        var currEndCell = this._cells[this._cells.length - 1];
        var cell = this._cells.shift();
        cell.pos(currEndCell.x + this._cellWidth + this._spaceX, currEndCell.y);
        this._cells.push(cell);
    };
    AdListLoop.prototype.endMoveToFrist = function () {
        var currFristCell = this._cells[0];
        var cell = this._cells.pop();
        var x = currFristCell.x - this._cellWidth - this._spaceX;
        cell.pos(x, currFristCell.y);
        this._cells.unshift(cell);
    };
    AdListLoop.prototype.mouseDown = function () {
        this._mouseDown = true;
        Laya.timer.clearAll(this);
        this._mouseX = this._mouseX = Laya.MouseManager.instance.mouseX;
        Laya.timer.clearAll(this);
        for (var i = 0; i < this._cells.length; i++) {
            var cell = this._cells[i];
            Laya.Tween.clearAll(cell);
        }
    };
    AdListLoop.prototype.mouseMove = function () {
        if (this._mouseDown) {
            var dis = Laya.MouseManager.instance.mouseX - this._mouseX;
            this._mouseX = Laya.MouseManager.instance.mouseX;
            //先移动
            for (var j = 0; j < this._cells.length; j++) {
                var cell = this._cells[j];
                cell.pos(cell.x + dis, cell.y);
            }
            if (this._cells[this._cells.length - 1].x > this.endPosX) {
                this.endMoveToFrist();
            }
            if (this._cells[0].x < this.fristPosX) {
                this.firstMoveToEnd();
            }
        }
    };
    AdListLoop.prototype.mouseUp = function (event) {
        this._mouseDown = false;
        this.autoMove();
    };
    return AdListLoop;
}(Laya.Script));
exports.default = AdListLoop;
},{"../mgrCommon/PlatformMgr":9,"../tools/MyUtils":23}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyUtils_1 = require("../tools/MyUtils");
var ViewMgr_1 = require("../mgrCommon/ViewMgr");
var PlatformMgr_1 = require("../mgrCommon/PlatformMgr");
var BaseView = /** @class */ (function (_super) {
    __extends(BaseView, _super);
    function BaseView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isMyBaseView = true;
        _this.offset = { y: 0 };
        _this._speed = 1;
        return _this;
    }
    BaseView.prototype.onAwake = function () {
        //删除时自动释放
        this.owner.autoDestroyAtClosed = true;
        this.addMinProgram = this.owner.getChildByName("addMinProgram");
        this.okBtn = this.owner.getChildByName("okBtn");
        this.closeBtn = this.owner.getChildByName("closeBtn");
        this.homeBtn = this.owner.getChildByName("homeBtn");
        this.shareBtn = this.owner.getChildByName("shareBtn");
        if (this.addMinProgram) {
            MyUtils_1.default.autoScreenSize([this.addMinProgram]);
            this._minX = Laya.stage.width / 2 - 20;
            this._maxX = Laya.stage.width / 2 + 20;
        }
        if (PlatformMgr_1.default.ptAPI)
            this.offset = PlatformMgr_1.default.ptAPI.getOffsetOpenDomain();
    };
    BaseView.prototype.onEnable = function () {
        this.addEvent();
    };
    BaseView.prototype.onDisable = function () {
        this.removeEvent();
    };
    BaseView.prototype.openView = function (data) {
        this.owner.visible = true;
        this.owner.height = Laya.stage.height;
        this._data = data || {};
    };
    BaseView.prototype.addEvent = function () {
        var _this = this;
        if (this.addMinProgram) {
            this._speed = -1;
            Laya.timer.frameLoop(1, this, function () {
                _this.addMinProgram.x += _this._speed;
                if (_this.addMinProgram.x <= _this._minX) {
                    _this._speed = 1;
                    _this.addMinProgram.x = _this._minX;
                }
                else if (_this.addMinProgram.x >= _this._maxX) {
                    _this._speed = -1;
                    _this.addMinProgram.x = _this._maxX;
                }
            });
        }
    };
    BaseView.prototype.removeEvent = function () {
        this._isClick = null;
        if (this.addMinProgram)
            Laya.timer.clearAll(this.addMinProgram);
        Laya.timer.clearAll(this);
    };
    BaseView.prototype.closeView = function (_d) {
        var _viewName = this.owner.url;
        if (_d && _d.notDestroy) {
            ViewMgr_1.default.instance.hideView(_viewName);
        }
        else {
            ViewMgr_1.default.instance.closeView(_viewName);
        }
        if (_viewName == "Rank.scene") {
            if (PlatformMgr_1.default.ptAPI)
                PlatformMgr_1.default.ptAPI.setAuthorizationCheck(true);
        }
        if (this._data && this._data.callback) {
            this._data.callback(_d);
        }
        this._data = null;
    };
    return BaseView;
}(Laya.Script));
exports.default = BaseView;
},{"../mgrCommon/PlatformMgr":9,"../mgrCommon/ViewMgr":13,"../tools/MyUtils":23}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonAnim = /** @class */ (function (_super) {
    __extends(ButtonAnim, _super);
    function ButtonAnim() {
        return _super.call(this) || this;
    }
    ButtonAnim.prototype.onAwake = function () {
        this.owner.on(Laya.Event.MOUSE_DOWN, this, this.onDown);
        this.owner.on(Laya.Event.MOUSE_UP, this, this.onUp);
        this.owner.on(Laya.Event.MOUSE_OUT, this, this.onUp);
    };
    ButtonAnim.prototype.onDisable = function () {
        this.owner.offAll();
        Laya.Tween.clearAll(this);
    };
    ButtonAnim.prototype.onDown = function () {
        Laya.Tween.to(this.owner, { scaleX: 0.8, scaleY: 0.8 }, 100);
    };
    ButtonAnim.prototype.onUp = function () {
        Laya.Tween.to(this.owner, { scaleX: 1, scaleY: 1 }, 100);
    };
    return ButtonAnim;
}(Laya.Script));
exports.default = ButtonAnim;
},{}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("./BaseView");
var EventMgr_1 = require("../mgrCommon/EventMgr");
var ColletView = /** @class */ (function (_super) {
    __extends(ColletView, _super);
    function ColletView() {
        return _super.call(this) || this;
    }
    ColletView.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.addEvent();
    };
    ColletView.prototype.addEvent = function () {
        this.okBtn.on(Laya.Event.CLICK, this, this.closeView);
        _super.prototype.addEvent.call(this);
    };
    ColletView.prototype.closeView = function () {
        _super.prototype.closeView.call(this);
        Laya.loader.clearRes("res/atlas/collet.atlas");
        EventMgr_1.default.instance.emit("goHome");
    };
    ColletView.prototype.removeEvent = function () {
        this.okBtn.off(Laya.Event.CLICK, this, this.closeView);
        _super.prototype.removeEvent.call(this);
    };
    return ColletView;
}(BaseView_1.default));
exports.default = ColletView;
},{"../mgrCommon/EventMgr":7,"./BaseView":25}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("./BaseView");
var MyUtils_1 = require("../tools/MyUtils");
var PlatformMgr_1 = require("../mgrCommon/PlatformMgr");
var ConfigData_1 = require("../models/ConfigData");
var EventMgr_1 = require("../mgrCommon/EventMgr");
var ConvergeAd = /** @class */ (function (_super) {
    __extends(ConvergeAd, _super);
    function ConvergeAd() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.appid = ""; //需要调转的APPID
        return _this;
    }
    ConvergeAd.prototype.onAwake = function () {
        MyUtils_1.default.autoScreenSize([this.homeBtn]);
        this.adList = this.owner.getChildByName("list");
        this.adList.vScrollBarSkin = '';
        this.adList.selectEnable = true;
        this.adList.y = 20;
        this.adList.renderHandler = new Laya.Handler(this, this.onRender);
        this.adList.mouseHandler = new Laya.Handler(this, this.onClickItem);
        if (Laya.stage.height > 1334) {
            this.adList.y = 20 + (Laya.stage.height - 1334) / 2;
        }
        if (PlatformMgr_1.default.ptAdMgr)
            PlatformMgr_1.default.ptAdMgr.showBannerAdOther();
    };
    ConvergeAd.prototype.onDisable = function () {
        if (PlatformMgr_1.default.ptAdMgr)
            PlatformMgr_1.default.ptAdMgr.destoryAllBannerAd();
    };
    ConvergeAd.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this.okBtn.on(Laya.Event.CLICK, this, this.onClickHome);
        this.homeBtn.on(Laya.Event.CLICK, this, this.onClickHome);
    };
    ConvergeAd.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this.okBtn.off(Laya.Event.CLICK, this, this.onClickHome);
        this.homeBtn.off(Laya.Event.CLICK, this, this.onClickHome);
    };
    ConvergeAd.prototype.openView = function (data) {
        var _this = this;
        _super.prototype.openView.call(this, data);
        this.homeBtn.visible = false;
        var allll = [];
        if (this.adList.array == null) {
            allll = ConfigData_1.default.getAdData(1004);
            this.adList.array = allll;
        }
        this.adList.refresh(); //刷新数据源
        this.adList.scrollTo(0); //第一个显示的 位置
        Laya.timer.once(1000, this, function () {
            if (_this && _this.homeBtn) {
                _this.homeBtn.visible = true;
            }
        });
    };
    ConvergeAd.prototype.onClickHome = function () {
        this.closeView();
        EventMgr_1.default.instance.emit("goHome");
    };
    ConvergeAd.prototype.okClick = function () {
        this.closeView();
        EventMgr_1.default.instance.emit("gameStart");
    };
    /**
    * 单个 box 点击事件
    */
    ConvergeAd.prototype.onClickItem = function (e, index) {
        if (e.type == Laya.Event.CLICK) {
            if ((e.target) instanceof Laya.Box) {
                var obj = {
                    path: this.adList.array[index].toLinks,
                    appid: this.adList.array[index].appid,
                };
                if (PlatformMgr_1.default.ptAPI)
                    PlatformMgr_1.default.ptAPI.navigateToMiniProgram(obj);
            }
        }
    };
    ConvergeAd.prototype.onRender = function (cell, index) {
        if (index > this.adList.array.length && this.adList.array.length == 0)
            return;
        if (this.adList.array[index] != null) {
            var img = cell.getChildByName("img");
            img.skin = this.adList.array[index].param;
        }
    };
    return ConvergeAd;
}(BaseView_1.default));
exports.default = ConvergeAd;
},{"../mgrCommon/EventMgr":7,"../mgrCommon/PlatformMgr":9,"../models/ConfigData":14,"../tools/MyUtils":23,"./BaseView":25}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PlatformMgr_1 = require("../mgrCommon/PlatformMgr");
var BaseView_1 = require("./BaseView");
var ConfigData_1 = require("../models/ConfigData");
var GameMgr_1 = require("../mgr3d/GameMgr");
var EventMgr_1 = require("../mgrCommon/EventMgr");
var GameFighting = /** @class */ (function (_super) {
    __extends(GameFighting, _super);
    function GameFighting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GameFighting.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.dragBeginnerGuide = this.owner.getChildByName("dragBeginnerGuide");
        this.touchBeginnerGuide = this.owner.getChildByName("touchBeginnerGuide");
        this.mouseTouch = this.owner.getChildByName("mouseTouch");
        this.finger = this.dragBeginnerGuide.getChildByName("finger");
        this.score = this.owner.getChildByName("score_num");
        this.progressNode = this.owner.getChildByName("progress");
        this.progress = this.progressNode.getChildByName("progress");
        this.nextLevelLab = this.progressNode.getChildByName("nextLevelLab");
        this.currLevelLab = this.progressNode.getChildByName("currLevelLab");
        this.score.visible = false;
        this.progressNode.visible = false;
        this.dragBeginnerGuide.visible = false;
        this.touchBeginnerGuide.visible = false;
        //测试
        this.btnResurgence = this.owner.getChildByName("Test").getChildByName("resurgence");
        this.btnGameOver = this.owner.getChildByName("Test").getChildByName("gameOver");
        this.btnBeyond = this.owner.getChildByName("Test").getChildByName("beyond");
        this.btnFight = this.owner.getChildByName("Test").getChildByName("fight");
    };
    GameFighting.prototype.FigerAnim = function () {
        this.finger.x = 90 + 500 * Math.abs((Laya.timer.currTimer - this.fingerStartTime + 500) % 2000 - 1000) / 1000;
    };
    GameFighting.prototype.openView = function (data) {
        _super.prototype.openView.call(this, data);
        if (ConfigData_1.default.beginnerGuide == ConfigData_1.OPERATINGTYPE.TOUCH) {
            this.touchBeginnerGuide.visible = true;
        }
        else {
            this.dragBeginnerGuide.visible = true;
            this.fingerStartTime = Laya.timer.currTimer;
            Laya.timer.frameLoop(1, this, this.FigerAnim);
        }
        // console.log("getGameData:",GameMgr.instance.getGameData());
        // let isEndLess = GameMgr.instance.getGameData().sortType == SORTTYPE.ENDLESS;
        var isEndLess = false;
        this.score.visible = isEndLess;
        this.progressNode.visible = !isEndLess;
    };
    GameFighting.prototype.mouseTouchFun = function () {
        this.dragBeginnerGuide.visible = false;
    };
    GameFighting.prototype.openResurgence = function () {
        EventMgr_1.default.instance.emit("openResurgence");
    };
    GameFighting.prototype.openGameOver = function () {
        EventMgr_1.default.instance.emit("openGameOver");
    };
    GameFighting.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this.mouseTouch.on(Laya.Event.CLICK, this, this.mouseTouchFun);
        this.btnResurgence.on(Laya.Event.CLICK, this, this.openResurgence);
        this.btnGameOver.on(Laya.Event.CLICK, this, this.openGameOver);
        this.btnBeyond.on(Laya.Event.CLICK, this, this.openSurpassOther);
        this.btnFight.on(Laya.Event.CLICK, this, this.openProvocationOther);
        EventMgr_1.default.instance.onEvent("updateScore", this, this.updataScore);
        EventMgr_1.default.instance.onEvent("updataProgress", this, this.updataProgress);
        EventMgr_1.default.instance.onEvent("updateLevel", this, this.updateLevel);
    };
    GameFighting.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this.mouseTouch.off(Laya.Event.CLICK, this, this.mouseTouchFun);
        this.btnResurgence.off(Laya.Event.CLICK, this, this.openResurgence);
        this.btnGameOver.off(Laya.Event.CLICK, this, this.openGameOver);
        this.btnBeyond.off(Laya.Event.CLICK, this, this.openSurpassOther);
        this.btnFight.off(Laya.Event.CLICK, this, this.openProvocationOther);
        EventMgr_1.default.instance.onOffEvent("updateScore", this, this.updataScore);
        EventMgr_1.default.instance.onOffEvent("updataProgress", this, this.updataProgress);
        EventMgr_1.default.instance.onOffEvent("updateLevel", this, this.updateLevel);
    };
    GameFighting.prototype.updataScore = function () {
        this.score.value = GameMgr_1.default.instance.getGameData().score.toString();
    };
    GameFighting.prototype.updataProgress = function (num) {
        num = num > 1 ? 1 : num;
        this.progress.width = num * 361;
    };
    GameFighting.prototype.updateLevel = function (num) {
        this.currLevelLab.text = num.toString();
        this.nextLevelLab.text = (num + 1).toString();
    };
    //打开挑衅
    GameFighting.prototype.openProvocationOther = function (_type) {
        this.closeSurpassOther();
        if (!this.provocationOther) {
            this.provocationOther = new Laya.WXOpenDataViewer();
            this.owner.addChild(this.provocationOther);
            this.provocationOther.width = 750;
            this.provocationOther.height = 62;
            this.provocationOther.pos(0, 252);
        }
        PlatformMgr_1.default.subDomain.setOpenView(this.provocationOther);
        PlatformMgr_1.default.subDomain.openProvocationOther(_type);
    };
    GameFighting.prototype.closeProvocationOther = function () {
        if (this.provocationOther) {
            this.provocationOther.destroy();
            this.provocationOther = null;
        }
        if (PlatformMgr_1.default.subDomain) {
            PlatformMgr_1.default.subDomain.closeProvocationOther();
        }
    };
    //打开超越
    GameFighting.prototype.openSurpassOther = function (_type) {
        this.closeProvocationOther();
        if (!this.surpassOther) {
            this.surpassOther = new Laya.WXOpenDataViewer();
            this.owner.addChild(this.surpassOther);
            this.surpassOther.width = 60;
            this.surpassOther.height = 60;
            this.surpassOther.pos(570, 304);
        }
        PlatformMgr_1.default.subDomain.setOpenView(this.surpassOther);
        PlatformMgr_1.default.subDomain.openSurpassOther({
            _type: _type,
            val: -1
        });
    };
    GameFighting.prototype.closeSurpassOther = function () {
        if (this.surpassOther) {
            this.surpassOther.destroy();
            this.surpassOther = null;
        }
        if (PlatformMgr_1.default.subDomain) {
            PlatformMgr_1.default.subDomain.closeSurpassOther();
        }
    };
    return GameFighting;
}(BaseView_1.default));
exports.default = GameFighting;
},{"../mgr3d/GameMgr":5,"../mgrCommon/EventMgr":7,"../mgrCommon/PlatformMgr":9,"../models/ConfigData":14,"./BaseView":25}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("./BaseView");
var PlatformMgr_1 = require("../mgrCommon/PlatformMgr");
var ConfigData_1 = require("../models/ConfigData");
var AdListLoop_1 = require("./AdListLoop");
var EventMgr_1 = require("../mgrCommon/EventMgr");
var GameOverEndless = /** @class */ (function (_super) {
    __extends(GameOverEndless, _super);
    function GameOverEndless() {
        return _super.call(this) || this;
    }
    GameOverEndless.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.center = this.owner.getChildByName("center");
        // this.wxOpenData = center.getChildByName("wxOpenData") as Laya.WXOpenDataViewer;
        this.ADPlane = this.center.getChildByName("ADPlaneBG").getChildByName("ADPlane").getComponent(AdListLoop_1.default);
        var btnAnchor = this.center.getChildByName("btnAnchor");
        this.btnAgain = btnAnchor.getChildByName("btn_again");
        this.btnHome = btnAnchor.getChildByName("btn_home");
        this.btnFight = btnAnchor.getChildByName("btn_fight");
        this.btnRank = this.center.getChildByName("lbl_rank");
        this.score = this.center.getChildByName("clipScore");
        this.ADPlane.start(ConfigData_1.default.getAdData(1003));
    };
    GameOverEndless.prototype.goHome = function () {
        EventMgr_1.default.instance.emit("goHome");
    };
    GameOverEndless.prototype.goFighting = function () {
        //再次挑战 TODO       
        EventMgr_1.default.instance.emit("openFighting");
    };
    GameOverEndless.prototype.goShare = function () {
        var _d = {
            caller: this,
            callback: function (res) {
                if (!res.success) {
                    EventMgr_1.default.instance.emit("openTip", "分享失败");
                }
            },
        };
        if (PlatformMgr_1.default.ptAPI)
            PlatformMgr_1.default.ptAPI.shareAppMessage(_d, 0);
    };
    GameOverEndless.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this.btnHome.on(Laya.Event.CLICK, this, this.goHome);
        this.btnAgain.on(Laya.Event.CLICK, this, this.goFighting);
        this.btnFight.on(Laya.Event.CLICK, this, this.goShare);
        this.btnRank.on(Laya.Event.CLICK, this, this.openRank);
    };
    GameOverEndless.prototype.removeEvent = function () {
        this.btnHome.off(Laya.Event.CLICK, this, this.goHome);
        this.btnAgain.off(Laya.Event.CLICK, this, this.goFighting);
        this.btnFight.off(Laya.Event.CLICK, this, this.goShare);
        this.btnRank.off(Laya.Event.CLICK, this, this.openRank);
        _super.prototype.removeEvent.call(this);
    };
    GameOverEndless.prototype.openRank = function () {
        var _this = this;
        //打开排行榜
        this.closeGameOver();
        EventMgr_1.default.instance.emit("openRank", {
            _type: ConfigData_1.SORTTYPE.ENDLESS,
            callback: function () {
                _this.openGameOver();
            }
        });
    };
    GameOverEndless.prototype.openView = function (data) {
        _super.prototype.openView.call(this, data);
        this.openGameOver();
        // this.score.value = GameMgr.instance.getGameData().score.toString();
        this.score.value = "0";
    };
    GameOverEndless.prototype.openGameOver = function () {
        if (PlatformMgr_1.default.subDomain) {
            this.wxOpenData = new Laya.WXOpenDataViewer();
            this.wxOpenData.width = 630;
            this.wxOpenData.height = 286;
            this.center.addChild(this.wxOpenData);
            this.wxOpenData.pos(-315, -233);
            PlatformMgr_1.default.subDomain.setOpenView(this.wxOpenData);
            PlatformMgr_1.default.subDomain.openGameOver(ConfigData_1.SORTTYPE.ENDLESS);
        }
    };
    GameOverEndless.prototype.closeGameOver = function () {
        if (PlatformMgr_1.default.subDomain) {
            if (this.wxOpenData) {
                this.wxOpenData.destroy();
                this.wxOpenData = null;
            }
            PlatformMgr_1.default.subDomain.closeGameOver(ConfigData_1.SORTTYPE.ENDLESS);
        }
    };
    return GameOverEndless;
}(BaseView_1.default));
exports.default = GameOverEndless;
},{"../mgrCommon/EventMgr":7,"../mgrCommon/PlatformMgr":9,"../models/ConfigData":14,"./AdListLoop":24,"./BaseView":25}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("./BaseView");
var EventMgr_1 = require("../mgrCommon/EventMgr");
var PlatformMgr_1 = require("../mgrCommon/PlatformMgr");
var ConfigData_1 = require("../models/ConfigData");
var GameOverLevel = /** @class */ (function (_super) {
    __extends(GameOverLevel, _super);
    function GameOverLevel() {
        return _super.call(this) || this;
    }
    GameOverLevel.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        var anchorDown = this.owner.getChildByName("anchorDown");
        anchorDown.y = this.offset.y / 2;
        this.btnNext = anchorDown.getChildByName("btnNext");
        this.btnHome = anchorDown.getChildByName("btnHome");
        this.btnAgain = anchorDown.getChildByName("btnAgain");
        this.btnFight = anchorDown.getChildByName("btnFight");
        var anchorUp = this.owner.getChildByName("anchorUp");
        this.passNum = anchorUp.getChildByName("passNum");
        this.imgFail = anchorUp.getChildByName("imgFail");
        this.imgPass = anchorUp.getChildByName("imgPass");
        this.imgFail.visible = false;
        this.imgPass.visible = false;
        this.adList = this.owner.getChildByName("listAd");
        this.adList.array = [];
        this.adList.renderHandler = new Laya.Handler(this, this.onRender);
        this.adList.vScrollBarSkin = "";
        this.adData = ConfigData_1.default.getAdData(1005);
    };
    GameOverLevel.prototype.goFighting = function () {
        //再次挑战 TODO       
        EventMgr_1.default.instance.emit("openFighting");
        this.closeView();
    };
    GameOverLevel.prototype.goHome = function () {
        EventMgr_1.default.instance.emit("goHome");
        this.closeView();
    };
    GameOverLevel.prototype.goShare = function () {
        var _d = {
            caller: this,
            callback: function (res) {
                if (!res.success) {
                    EventMgr_1.default.instance.emit("openTip", "分享失败");
                }
            },
        };
        if (PlatformMgr_1.default.ptAPI)
            PlatformMgr_1.default.ptAPI.shareAppMessage(_d, 0);
    };
    GameOverLevel.prototype.addEvent = function () {
        this.btnNext.on(Laya.Event.CLICK, this, this.goFighting);
        this.btnHome.on(Laya.Event.CLICK, this, this.goHome);
        this.btnAgain.on(Laya.Event.CLICK, this, this.goFighting);
        this.btnFight.on(Laya.Event.CLICK, this, this.goShare);
        _super.prototype.addEvent.call(this);
    };
    GameOverLevel.prototype.removeEvent = function () {
        this.btnNext.off(Laya.Event.CLICK, this, this.goFighting);
        this.btnHome.off(Laya.Event.CLICK, this, this.goHome);
        this.btnAgain.off(Laya.Event.CLICK, this, this.goFighting);
        this.btnFight.off(Laya.Event.CLICK, this, this.goShare);
        _super.prototype.removeEvent.call(this);
    };
    GameOverLevel.prototype.openView = function (data) {
        _super.prototype.openView.call(this, data);
        data = data || {
            passNum: 10,
            isPass: (Math.random() > 0.5),
        };
        //需要获取广告
        this.adList.array = this.adData;
        this.adList.refresh();
        this.imgFail.visible = !data.isPass;
        this.imgPass.visible = data.isPass;
        this.passNum.value = data.passNum.toString();
        //适配 是数字和“关”字居中
        var length = data.passNum.toString().length - 1;
        this.passNum.x = 246 + 26 * length;
    };
    GameOverLevel.prototype.onRender = function (cell, index) {
        var img = cell.getChildAt(0);
        img.skin = this.adData[index].param;
    };
    GameOverLevel.prototype.onSelect = function (e, index) {
        //跳转到其他小游戏 
        if (PlatformMgr_1.default.ptAPI) {
            PlatformMgr_1.default.ptAPI.navigateToMiniProgram(this.adData[index]);
        }
    };
    return GameOverLevel;
}(BaseView_1.default));
exports.default = GameOverLevel;
},{"../mgrCommon/EventMgr":7,"../mgrCommon/PlatformMgr":9,"../models/ConfigData":14,"./BaseView":25}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("./BaseView");
var PlatformMgr_1 = require("../mgrCommon/PlatformMgr");
var GoldenEggView = /** @class */ (function (_super) {
    __extends(GoldenEggView, _super);
    function GoldenEggView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.clickCount = 0;
        return _this;
    }
    GoldenEggView.prototype.onAwake = function () {
        var _this = this;
        this.clickCount = 0;
        this.progressNum = 0;
        Laya.timer.frameLoop(25, this, function () {
            if (_this != null && _this != undefined) {
                _this.progressNum -= 0.06;
                _this.updataProgress();
            }
        });
        var anchorS = this.owner.getChildByName("anchorS");
        var offsetY = 0;
        if (PlatformMgr_1.default.ptAPI)
            offsetY = PlatformMgr_1.default.ptAPI.getOffsetOpenDomain();
        anchorS.y = anchorS.y + offsetY;
        this.okBtn = anchorS.getChildByName("okBtn");
        this.closeBtn = this.owner.getChildByName("closeBtn");
        this.bar = this.owner.getChildByName("bar");
        this.hammerAnim = this.owner.getChildByName("img_hammer");
    };
    GoldenEggView.prototype.addEvent = function () {
        this.okBtn.on(Laya.Event.CLICK, this, this.btnClick);
        this.closeBtn.on(Laya.Event.CLICK, this, this.closeView);
        _super.prototype.addEvent.call(this);
    };
    GoldenEggView.prototype.removeEvent = function () {
        this.okBtn.off(Laya.Event.CLICK, this, this.btnClick);
        this.closeBtn.off(Laya.Event.CLICK, this, this.closeView);
        _super.prototype.removeEvent.call(this);
    };
    GoldenEggView.prototype.openView = function (_d) {
        _super.prototype.openView.call(this, _d);
        if (PlatformMgr_1.default.ptAdMgr)
            PlatformMgr_1.default.ptAdMgr.loadBannerAdHome();
    };
    GoldenEggView.prototype.btnClick = function () {
        this.clickCount++;
        if (this.clickCount > 14) {
            //弹出框
            this.close();
            return;
        }
        this.progressNum += 0.1;
        if (this.progressNum >= 1) {
            this.close();
            return;
        }
        this.hammerAnim.play(0, false);
        this.updataProgress();
    };
    GoldenEggView.prototype.updataProgress = function () {
        if (this.progressNum >= 1) {
            this.progressNum = 1;
        }
        else if (this.progressNum <= 0.07) {
            this.progressNum = 0.07;
        }
        this.bar.height = 375 * this.progressNum;
    };
    GoldenEggView.prototype.close = function () {
        _super.prototype.closeView.call(this);
        if (PlatformMgr_1.default.ptAdMgr)
            PlatformMgr_1.default.ptAdMgr.showBannerAdHome();
    };
    return GoldenEggView;
}(BaseView_1.default));
exports.default = GoldenEggView;
},{"../mgrCommon/PlatformMgr":9,"./BaseView":25}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("./BaseView");
var ConfigData_1 = require("../models/ConfigData");
var MyUtils_1 = require("../tools/MyUtils");
var PlatformMgr_1 = require("../mgrCommon/PlatformMgr");
var EventMgr_1 = require("../mgrCommon/EventMgr");
var ViewMgr_1 = require("../mgrCommon/ViewMgr");
var SoundMgr_1 = require("../mgrCommon/SoundMgr");
var AdListLoop_1 = require("./AdListLoop");
var MainViewLandscape = /** @class */ (function (_super) {
    __extends(MainViewLandscape, _super);
    function MainViewLandscape() {
        return _super.call(this) || this;
    }
    MainViewLandscape.prototype.onAwake = function () {
        var _this = this;
        _super.prototype.onAwake.call(this);
        this.btnSound = this.owner.getChildByName("btnSound");
        this.soundOpen = this.btnSound.getChildByName("open");
        this.soundClose = this.btnSound.getChildByName("close");
        this.btnVirbort = this.owner.getChildByName("btnVirbort");
        this.virbortOpen = this.btnVirbort.getChildByName("open");
        this.virbortClose = this.btnVirbort.getChildByName("close");
        this.soundClose.visible = !ConfigData_1.default.isSound;
        this.soundOpen.visible = ConfigData_1.default.isSound;
        this.virbortClose.visible = !ConfigData_1.default.isVirbort;
        this.virbortOpen.visible = ConfigData_1.default.isVirbort;
        this.title = this.owner.getChildByName("title");
        this.btnInvite = this.owner.getChildByName("btnInvite");
        this.btnService = this.owner.getChildByName("btnService");
        this.btnRank = this.owner.getChildByName("btnRank");
        this.btnCollect = this.owner.getChildByName("btnCollect");
        this.btnStart = this.owner.getChildByName("btnStart");
        this.adPlane = this.owner.getChildByName("ADPlane").getComponent(AdListLoop_1.default);
        this.btnInvite.y += this.offset.y / 2;
        this.btnService.y += this.offset.y / 2;
        this.btnRank.y += this.offset.y / 2;
        this.btnCollect.y += this.offset.y / 2;
        this.btnStart.y += this.offset.y / 2;
        MyUtils_1.default.autoScreenSize([this.btnSound, this.btnVirbort]);
        if (PlatformMgr_1.default.ptAdMgr) {
            PlatformMgr_1.default.ptAdMgr.showBannerAdHome();
        }
        Laya.timer.frameOnce(2, this, function () {
            _this.adPlane.init({
                _cellWidth: 130,
                _cellHeight: 156,
                _spaceX: 22
            });
            _this.adPlane.start(ConfigData_1.default.getAdData(1003));
        });
    };
    MainViewLandscape.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this.btnSound.on(Laya.Event.CLICK, this, this.soundBtnClick);
        this.btnVirbort.on(Laya.Event.CLICK, this, this.virbortBtnClick);
        this.btnRank.on(Laya.Event.CLICK, this, this.btnRankFunc);
        this.btnService.on(Laya.Event.CLICK, this, this.btnServiceFunc);
        this.btnInvite.on(Laya.Event.CLICK, this, this.btnInviteFunc);
        this.btnCollect.on(Laya.Event.CLICK, this, this.btnCollectFunc);
        this.btnStart.on(Laya.Event.CLICK, this, this.btnStartFunc);
        if (PlatformMgr_1.default.ptAdMgr) {
            var self_1 = this;
            Laya.timer.frameOnce(20, this, function () {
                var arr = [self_1.btnStart, self_1.btnRank, self_1.btnService, self_1.btnInvite, self_1.btnCollect];
                for (var index = 0; index < arr.length; index++) {
                    var btn = arr[index];
                    PlatformMgr_1.default.ptAPI.createAuthorizationButton({
                        x: btn.x,
                        y: btn.y - this.offset.y,
                        width: btn.width,
                        height: btn.height,
                        successBack: self_1[btn.name + "Func"],
                        failBack: self_1[btn.name + "Func"]
                    });
                }
            });
        }
    };
    MainViewLandscape.prototype.btnCollectFunc = function () {
        Laya.loader.load([{ url: "res/atlas/collet.atlas", type: Laya.Loader.ATLAS }], Laya.Handler.create(this, function () {
            ViewMgr_1.default.instance.openView({
                viewName: "Collect.scene",
                closeAll: true,
            });
        }));
    };
    MainViewLandscape.prototype.virbortBtnClick = function () {
        ConfigData_1.default.isVirbort = !ConfigData_1.default.isVirbort;
        this.virbortClose.visible = !ConfigData_1.default.isVirbort;
        this.virbortOpen.visible = ConfigData_1.default.isVirbort;
        ConfigData_1.default.setVirbort(ConfigData_1.default.isVirbort ? "" : "1");
    };
    MainViewLandscape.prototype.soundBtnClick = function () {
        ConfigData_1.default.isSound = !ConfigData_1.default.isSound;
        this.soundClose.visible = !ConfigData_1.default.isSound;
        this.soundOpen.visible = ConfigData_1.default.isSound;
        if (ConfigData_1.default.isSound) {
            ConfigData_1.default.setSound("");
            SoundMgr_1.default.instance.playBGM();
        }
        else {
            ConfigData_1.default.setSound("1");
            SoundMgr_1.default.instance.stopBGM();
        }
    };
    MainViewLandscape.prototype.btnInviteFunc = function () {
        var _this = this;
        if (this._isClick) {
            return;
        }
        this._isClick = true;
        Laya.timer.once(500, this, function () {
            _this._isClick = null;
        });
        var _d = {
            caller: this,
            callback: function (res) {
                if (!res.success) {
                    EventMgr_1.default.instance.emit("openTip", "分享失败");
                }
            },
        };
        if (PlatformMgr_1.default.ptAPI)
            PlatformMgr_1.default.ptAPI.shareAppMessage(_d, 0);
    };
    MainViewLandscape.prototype.btnServiceFunc = function () {
        var _this = this;
        if (this._isClick) {
            return;
        }
        this._isClick = true;
        Laya.timer.once(500, this, function () {
            _this._isClick = null;
        });
        if (PlatformMgr_1.default.ptAPI)
            PlatformMgr_1.default.ptAPI.openCustomerServiceConversation();
    };
    MainViewLandscape.prototype.btnRankFunc = function () {
        var _this = this;
        if (this._isClick) {
            return;
        }
        this._isClick = true;
        Laya.timer.once(500, this, function () {
            _this._isClick = null;
        });
        EventMgr_1.default.instance.emit("openRank", { _type: ConfigData_1.SORTTYPE.ENDLESS });
    };
    MainViewLandscape.prototype.btnStartFunc = function () {
        var _this = this;
        if (this._isClick) {
            return;
        }
        if (PlatformMgr_1.default.ptAPI)
            PlatformMgr_1.default.ptAPI.destoryAuthorization();
        if (PlatformMgr_1.default.ptAdMgr)
            PlatformMgr_1.default.ptAdMgr.destoryAllBannerAd();
        this._isClick = true;
        Laya.timer.once(500, this, function () {
            _this._isClick = null;
        });
        EventMgr_1.default.instance.emit("openFighting");
        EventMgr_1.default.instance.emit("gameStart");
    };
    MainViewLandscape.prototype.removeEvent = function () {
        this.btnSound.off(Laya.Event.CLICK, this, this.soundBtnClick);
        this.btnVirbort.off(Laya.Event.CLICK, this, this.virbortBtnClick);
        this.btnRank.off(Laya.Event.CLICK, this, this.btnRankFunc);
        this.btnService.off(Laya.Event.CLICK, this, this.btnServiceFunc);
        this.btnInvite.off(Laya.Event.CLICK, this, this.btnInviteFunc);
        this.btnCollect.off(Laya.Event.CLICK, this, this.btnCollectFunc);
        this.btnStart.off(Laya.Event.CLICK, this, this.btnStartFunc);
        _super.prototype.removeEvent.call(this);
    };
    return MainViewLandscape;
}(BaseView_1.default));
exports.default = MainViewLandscape;
},{"../mgrCommon/EventMgr":7,"../mgrCommon/PlatformMgr":9,"../mgrCommon/SoundMgr":10,"../mgrCommon/ViewMgr":13,"../models/ConfigData":14,"../tools/MyUtils":23,"./AdListLoop":24,"./BaseView":25}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("./BaseView");
var ConfigData_1 = require("../models/ConfigData");
var MyUtils_1 = require("../tools/MyUtils");
var PlatformMgr_1 = require("../mgrCommon/PlatformMgr");
var EventMgr_1 = require("../mgrCommon/EventMgr");
var SoundMgr_1 = require("../mgrCommon/SoundMgr");
var AdListLoop_1 = require("./AdListLoop");
var MainViewVertical = /** @class */ (function (_super) {
    __extends(MainViewVertical, _super);
    function MainViewVertical() {
        return _super.call(this) || this;
    }
    MainViewVertical.prototype.onAwake = function () {
        var _this = this;
        _super.prototype.onAwake.call(this);
        this.btnSound = this.owner.getChildByName("btnSound");
        this.soundOpen = this.btnSound.getChildByName("open");
        this.soundClose = this.btnSound.getChildByName("close");
        this.btnVirbort = this.owner.getChildByName("btnVirbort");
        this.virbortOpen = this.btnVirbort.getChildByName("open");
        this.virbortClose = this.btnVirbort.getChildByName("close");
        this.adPlane = this.owner.getChildByName("ADPlane").getComponent(AdListLoop_1.default);
        this.soundClose.visible = !ConfigData_1.default.isSound;
        this.soundOpen.visible = ConfigData_1.default.isSound;
        this.virbortClose.visible = !ConfigData_1.default.isVirbort;
        this.virbortOpen.visible = ConfigData_1.default.isVirbort;
        this.btnInvite = this.owner.getChildByName("btnInvite");
        this.btnService = this.owner.getChildByName("btnService");
        this.btnRank = this.owner.getChildByName("btnRank");
        this.btnInvite.y += this.offset.y / 2;
        this.btnService.y += this.offset.y / 2;
        this.btnRank.y += this.offset.y / 2;
        this.title = this.owner.getChildByName("title");
        this.btnStart = this.owner.getChildByName("btnStart");
        MyUtils_1.default.autoScreenSize([this.btnSound, this.btnVirbort]);
        if (PlatformMgr_1.default.ptAdMgr) {
            PlatformMgr_1.default.ptAdMgr.showBannerAdHome();
        }
        Laya.timer.frameOnce(2, this, function () {
            _this.adPlane.init({
                _cellWidth: 130,
                _cellHeight: 156,
                _spaceX: 23
            });
            _this.adPlane.start(ConfigData_1.default.getAdData(1003));
        });
    };
    MainViewVertical.prototype.addEvent = function () {
        this.btnSound.on(Laya.Event.CLICK, this, this.soundBtnClick);
        this.btnVirbort.on(Laya.Event.CLICK, this, this.virbortBtnClick);
        this.btnRank.on(Laya.Event.CLICK, this, this.btnRankFunc);
        this.btnService.on(Laya.Event.CLICK, this, this.btnServiceFunc);
        this.btnInvite.on(Laya.Event.CLICK, this, this.btnInviteFunc);
        this.btnStart.on(Laya.Event.CLICK, this, this.btnStartFunc);
        if (PlatformMgr_1.default.ptAdMgr) {
            var self_1 = this;
            Laya.timer.frameOnce(20, this, function () {
                var _this = this;
                new Promise(function (resolve, reject) {
                    PlatformMgr_1.default.ptAPI.createAuthorizationButton({
                        x: self_1.btnStart.x,
                        y: self_1.btnStart.y - _this.offset.y,
                        width: self_1.btnStart.width,
                        isFull: true,
                        height: self_1.btnStart.height,
                        successBack: self_1[self_1.btnStart.name + "Func"],
                        failBack: self_1[self_1.btnStart.name + "Func"]
                    });
                    resolve(resolve);
                }).then(function () {
                    var arr = [self_1.btnRank, self_1.btnService, self_1.btnInvite];
                    for (var index = 0; index < arr.length; index++) {
                        var btn = arr[index];
                        PlatformMgr_1.default.ptAPI.createAuthorizationButton({
                            x: btn.x,
                            y: btn.y - _this.offset.y,
                            width: btn.width,
                            height: btn.height,
                            successBack: self_1[btn.name + "Func"],
                            failBack: self_1[btn.name + "Func"]
                        });
                    }
                });
            });
        }
    };
    MainViewVertical.prototype.virbortBtnClick = function () {
        ConfigData_1.default.isVirbort = !ConfigData_1.default.isVirbort;
        this.virbortClose.visible = !ConfigData_1.default.isVirbort;
        this.virbortOpen.visible = ConfigData_1.default.isVirbort;
        ConfigData_1.default.setVirbort(ConfigData_1.default.isVirbort ? "" : "1");
    };
    MainViewVertical.prototype.soundBtnClick = function () {
        ConfigData_1.default.isSound = !ConfigData_1.default.isSound;
        this.soundClose.visible = !ConfigData_1.default.isSound;
        this.soundOpen.visible = ConfigData_1.default.isSound;
        if (ConfigData_1.default.isSound) {
            ConfigData_1.default.setSound("");
            SoundMgr_1.default.instance.playBGM();
        }
        else {
            ConfigData_1.default.setSound("1");
            SoundMgr_1.default.instance.stopBGM();
        }
    };
    MainViewVertical.prototype.btnInviteFunc = function () {
        var _this = this;
        if (this._isClick) {
            return;
        }
        this._isClick = true;
        Laya.timer.once(500, this, function () {
            _this._isClick = null;
        });
        var _d = {
            caller: this,
            callback: function (res) {
                if (!res.success) {
                    EventMgr_1.default.instance.emit("openTip", "分享失败");
                }
            },
        };
        if (PlatformMgr_1.default.ptAPI)
            PlatformMgr_1.default.ptAPI.shareAppMessage(_d, 1);
    };
    MainViewVertical.prototype.btnServiceFunc = function () {
        var _this = this;
        if (this._isClick) {
            return;
        }
        this._isClick = true;
        Laya.timer.once(500, this, function () {
            _this._isClick = null;
        });
        if (PlatformMgr_1.default.ptAPI)
            PlatformMgr_1.default.ptAPI.openCustomerServiceConversation();
    };
    MainViewVertical.prototype.btnRankFunc = function () {
        var _this = this;
        if (this._isClick) {
            return;
        }
        this._isClick = true;
        Laya.timer.once(500, this, function () {
            _this._isClick = null;
        });
        EventMgr_1.default.instance.emit("openRank", { _type: ConfigData_1.SORTTYPE.ENDLESS });
    };
    MainViewVertical.prototype.btnStartFunc = function () {
        var _this = this;
        if (this._isClick) {
            return;
        }
        if (PlatformMgr_1.default.ptAPI)
            PlatformMgr_1.default.ptAPI.destoryAuthorization();
        if (PlatformMgr_1.default.ptAdMgr)
            PlatformMgr_1.default.ptAdMgr.destoryAllBannerAd();
        this._isClick = true;
        Laya.timer.once(500, this, function () {
            _this._isClick = null;
        });
        EventMgr_1.default.instance.emit("openFighting");
        EventMgr_1.default.instance.emit("gameStart");
    };
    MainViewVertical.prototype.removeEvent = function () {
        this.btnSound.off(Laya.Event.CLICK, this, this.soundBtnClick);
        this.btnVirbort.off(Laya.Event.CLICK, this, this.virbortBtnClick);
        this.btnRank.off(Laya.Event.CLICK, this, this.btnRankFunc);
        this.btnService.off(Laya.Event.CLICK, this, this.btnServiceFunc);
        this.btnInvite.off(Laya.Event.CLICK, this, this.btnInviteFunc);
        this.btnStart.off(Laya.Event.CLICK, this, this.btnStartFunc);
        _super.prototype.removeEvent.call(this);
    };
    return MainViewVertical;
}(BaseView_1.default));
exports.default = MainViewVertical;
},{"../mgrCommon/EventMgr":7,"../mgrCommon/PlatformMgr":9,"../mgrCommon/SoundMgr":10,"../models/ConfigData":14,"../tools/MyUtils":23,"./AdListLoop":24,"./BaseView":25}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PlatformMgr_1 = require("../mgrCommon/PlatformMgr");
var ConfigData_1 = require("../models/ConfigData");
var BaseView_1 = require("./BaseView");
var EventMgr_1 = require("../mgrCommon/EventMgr");
var MyUtils_1 = require("../tools/MyUtils");
var Resurgence = /** @class */ (function (_super) {
    __extends(Resurgence, _super);
    function Resurgence() {
        var _this = _super.call(this) || this;
        _this.endAngle = -90;
        _this.isLoadAD = false; //是否正在拉取视频,防止玩家在拉取视频时进行其他操作
        _this.goShareAdc = false; //分享或者看视频
        return _this;
    }
    Resurgence.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.endAngle = -90;
        this.goingSurpassOther = this.owner.getChildByName("goingSurpassOther");
        this.goingSurpassOther.visible = false;
        this.btnAnchor = this.owner.getChildByName("btnAnchor");
        this.btnShare = this.btnAnchor.getChildByName("shareBtn");
        this.btnVideo = this.btnAnchor.getChildByName("videoBtn");
        this.btnJump = this.btnAnchor.getChildByName("skipBtn");
        var progressBg = this.owner.getChildByName("progressBg");
        this.progressMask = progressBg.getChildByName("progressBg").mask;
        this.progressMask.graphics.drawPie(149, 149, 149, -90, this.endAngle, "#ff0000");
        this.reviveCount = progressBg.getChildByName("reviveCount");
        this.btnAnchor.y = this.offset.y;
        this.isLoadAD = false;
    };
    Resurgence.prototype.addEvent = function () {
        this.btnShare.on(Laya.Event.CLICK, this, this.shareClick);
        this.btnVideo.on(Laya.Event.CLICK, this, this.videoClick);
        this.btnJump.on(Laya.Event.CLICK, this, this.jumpClick);
        _super.prototype.addEvent.call(this);
    };
    Resurgence.prototype.removeEvent = function () {
        this.btnShare.off(Laya.Event.CLICK, this, this.shareClick);
        this.btnVideo.off(Laya.Event.CLICK, this, this.videoClick);
        this.btnJump.off(Laya.Event.CLICK, this, this.jumpClick);
        _super.prototype.removeEvent.call(this);
    };
    Resurgence.prototype.countDown = function () {
        if (this.goShareAdc) {
            return;
        }
        var pre = parseInt(this.reviveCount.text);
        var cur = pre - 1;
        if (cur < 1) {
            this.reviveCount.text = cur.toString();
            this.progressMask.graphics.drawPie(149, 149, 149, 250, this.endAngle, "#ff0000");
            this.openOver();
        }
        else {
            this.reviveCount.text = cur.toString();
            this.endAngle += 36;
            this.progressMask.graphics.drawPie(149, 149, 149, -90, this.endAngle, "#ff0000");
        }
    };
    Resurgence.prototype.openView = function (data) {
        var _this = this;
        _super.prototype.openView.call(this, data);
        this.openGoingSurpassOther(ConfigData_1.SORTTYPE.ENDLESS);
        Laya.timer.clearAll(this);
        this.reviveCount.text = "10";
        Laya.timer.loop(1000, this, this.countDown);
        var btnJumpY = 560;
        this.btnVideo.visible = ConfigData_1.default.ctrlInfo.isVideo == 1;
        this.btnShare.visible = ConfigData_1.default.ctrlInfo.isShare == 1;
        if (ConfigData_1.default.ctrlInfo.isWudian) {
            var randomY = MyUtils_1.default.random(btnJumpY, btnJumpY + 30);
            var centerX_1 = Laya.stage.width / 2;
            var randomX = MyUtils_1.default.random(centerX_1 - 30, centerX_1 + 30);
            this.btnJump.pos(randomX, randomY);
            Laya.timer.once(700, this, function () {
                Laya.Tween.to(_this.btnJump, { x: centerX_1, y: 420 }, 500, Laya.Ease.backOut, null, 500);
            });
        }
        else {
            this.btnJump.y = 340;
        }
    };
    Resurgence.prototype.openGoingSurpassOther = function (_type) {
        this.goingSurpassOther.visible = true;
        if (PlatformMgr_1.default.subDomain) {
            PlatformMgr_1.default.subDomain.setOpenView(this.goingSurpassOther);
            PlatformMgr_1.default.subDomain.openGoingSurpassOther(_type);
        }
    };
    Resurgence.prototype.closeGoingSurpassOther = function () {
        if (PlatformMgr_1.default.subDomain) {
            PlatformMgr_1.default.subDomain.closeGoingSurpassOther();
            console.log("关闭超越");
        }
    };
    Resurgence.prototype.onDisable = function () {
        this.closeGoingSurpassOther();
    };
    Resurgence.prototype.videoClick = function () {
        var _this = this;
        if (this._isClick) {
            return;
        }
        this._isClick = true;
        Laya.timer.once(500, this, function () {
            _this._isClick = null;
        });
        if (PlatformMgr_1.default.ptAdMgr) {
            this.isLoadAD = true;
            this.goShareAdc = true;
            PlatformMgr_1.default.ptAdMgr.showVideo(this, function () {
                //玩家复活
                _this.isLoadAD = false;
                _this.goShareAdc = false;
            }, function () {
                EventMgr_1.default.instance.emit("openTip", "看完视频才能复活");
                _this.isLoadAD = false;
                _this.goShareAdc = false;
            }, function () {
                EventMgr_1.default.instance.emit("openTip", "今日视频次数已用完");
                _this.isLoadAD = false;
                _this.goShareAdc = false;
            });
        }
        else {
            //直接复活
        }
    };
    Resurgence.prototype.shareClick = function () {
        var _this = this;
        if (this._isClick) {
            return;
        }
        if (this.isLoadAD) {
            return;
        }
        this._isClick = true;
        Laya.timer.once(500, this, function () {
            _this._isClick = null;
        });
        if (PlatformMgr_1.default.ptAPI) {
            PlatformMgr_1.default.ptAPI.shareAppMessage({
                caller: this,
                shareBack: function (res) {
                    if (res.success) {
                        //复活
                    }
                    else {
                        EventMgr_1.default.instance.emit("openTip", "需要成功分享才能复活");
                    }
                },
                args: {}
            }, 1);
        }
        else {
            //直接复活
        }
    };
    Resurgence.prototype.jumpClick = function () {
        var _this = this;
        if (this._isClick) {
            return;
        }
        if (this.isLoadAD) {
            return;
        }
        this._isClick = true;
        Laya.timer.once(500, this, function () {
            _this._isClick = null;
        });
        this.closeView();
        //打开结算界面
    };
    //打开结算界面
    Resurgence.prototype.openOver = function () {
        this.closeView();
        EventMgr_1.default.instance.emit("openGameOver");
    };
    return Resurgence;
}(BaseView_1.default));
exports.default = Resurgence;
},{"../mgrCommon/EventMgr":7,"../mgrCommon/PlatformMgr":9,"../models/ConfigData":14,"../tools/MyUtils":23,"./BaseView":25}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("./BaseView");
var TipView = /** @class */ (function (_super) {
    __extends(TipView, _super);
    function TipView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TipView.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.tipLbl = this.owner.getChildByName("image").getChildByName("Label");
    };
    TipView.prototype.addEvent = function () {
        this.owner.on(Laya.Event.CLICK, this, this.closeView);
        _super.prototype.addEvent.call(this);
    };
    TipView.prototype.removeEvent = function () {
        this.owner.off(Laya.Event.CLICK, this, this.closeView);
        _super.prototype.removeEvent.call(this);
    };
    TipView.prototype.openView = function (str) {
        var _this = this;
        _super.prototype.openView.call(this, str);
        this.tipLbl.text = str;
        Laya.timer.once(2000, this, function () {
            _this.closeView();
        });
    };
    return TipView;
}(BaseView_1.default));
exports.default = TipView;
},{"./BaseView":25}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyUtils_1 = require("../../tools/MyUtils");
var RankItem = /** @class */ (function (_super) {
    __extends(RankItem, _super);
    function RankItem() {
        return _super.call(this) || this;
    }
    RankItem.prototype.onAwake = function () {
        this.bgImg = this.owner.getChildByName("imgBg");
        this.rankImg = this.owner.getChildByName("rankImg");
        this.rankLab = this.owner.getChildByName("rankLab");
        this.avatarImg = this.owner.getChildByName("avatarImg");
        this.nameLab = this.owner.getChildByName("nameLab");
        this.scoreLab = this.owner.getChildByName("scoreLab");
    };
    RankItem.prototype.updateItem = function (itemData) {
        this.owner.active = true;
        this.rankImg.visible = false;
        this.rankLab.text = itemData.index || "未上榜";
        switch (itemData.index) {
            case 1:
            case 2:
            case 3:
                this.rankLab.text = "";
                this.rankImg.skin = "rank/img_rank" + itemData.index + ".png";
                this.rankImg.visible = true;
                break;
        }
        this.avatarImg.skin = "rank/img_default_avatar.png"; //默认头像
        if (!MyUtils_1.default.isNull(itemData.headImage) && itemData.headImage != "youke") {
            var avatarUrl = itemData.headImage.replace("/132", "/46");
            this.avatarImg.skin = avatarUrl;
        }
        this.nameLab.text = itemData.nickname ? itemData.nickname : "神秘玩家";
        this.scoreLab.text = itemData.score;
    };
    RankItem.prototype.clean = function () {
        this.owner.active = false;
    };
    return RankItem;
}(Laya.Script));
exports.default = RankItem;
},{"../../tools/MyUtils":23}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("../BaseView");
var PlatformMgr_1 = require("../../mgrCommon/PlatformMgr");
var MyUtils_1 = require("../../tools/MyUtils");
var HttpMgr_1 = require("../../mgrCommon/HttpMgr");
var RankItem_1 = require("./RankItem");
var UserData_1 = require("../../models/UserData");
var RankView = /** @class */ (function (_super) {
    __extends(RankView, _super);
    function RankView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RankView.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.closeBtn = this.owner.getChildByName("btnClose");
        var node = this.owner.getChildByName("content");
        this.friendBtn = node.getChildByName("friendBtn");
        this.worldBtn = node.getChildByName("worldBtn");
        this.normalFriendRank = node.getChildByName("normalFriendRank");
        this.normalWorldRank = node.getChildByName("normalWorldRank");
        this.selectFriendRank = this.normalFriendRank.getChildByName("selectFriendRank");
        this.selectWorldRank = this.normalWorldRank.getChildByName("selectWorldRank");
        node.y = node.y + this.offset.y / 2;
        if (PlatformMgr_1.default.subDomain) {
            PlatformMgr_1.default.subDomain.setOpenView(this.wxOpenDataView);
        }
        this.worldRankList = node.getChildByName("worldRankList");
        this.worldRankList.array = [];
        this.worldRankList.renderHandler = new Laya.Handler(this, this.onRender);
        this.worldRankList.vScrollBarSkin = "";
        this.selfRankSprite = node.getChildByName("selfRankItem");
        this.selfRankITem = this.selfRankSprite.getComponent(RankItem_1.default);
        MyUtils_1.default.autoScreenSize([this.closeBtn]);
    };
    RankView.prototype.setMyRankInfo = function () {
        this.selfRankITem.updateItem(this.selfRankData);
    };
    RankView.prototype.onRender = function (cell, index) {
        var item = cell.getComponent(RankItem_1.default);
        item.updateItem(cell.dataSource);
    };
    RankView.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this.closeBtn.on(Laya.Event.CLICK, this, this.closeView);
        this.worldBtn.on(Laya.Event.CLICK, this, this.worldRankClick);
        this.friendBtn.on(Laya.Event.CLICK, this, this.friendRankClick);
    };
    RankView.prototype.getWorldData = function () {
        var _this = this;
        HttpMgr_1.default.instance.getWorldRank({
            success: function (res) {
                _this.worldData = res.rank;
                _this.selfRankData = {
                    index: res.myIndex,
                    nickname: UserData_1.default.nickName,
                    headImage: UserData_1.default.avatarUrl,
                    score: UserData_1.default.score || 0
                };
                if (res.myIndex && res.myIndex <= _this.worldData.length) {
                    _this.selfRankData = _this.worldData[res.myIndex];
                }
                _this.setWorldRankDta();
            }
        });
    };
    RankView.prototype.setWorldRankDta = function () {
        this.setMyRankInfo();
        this.worldRankList.array = this.worldData;
        this.worldRankList.refresh();
    };
    RankView.prototype.worldRankClick = function () {
        this.selectFriendRank.visible = false;
        this.selectWorldRank.visible = true;
        // this.worldRankList.visible = true;
        // this.selfRankSprite.visible = true
        this.closeFriendRank();
        if (this.worldData) {
            this.setWorldRankDta();
        }
        else {
            this.getWorldData();
        }
    };
    RankView.prototype.friendRankClick = function () {
        this.selectFriendRank.visible = true;
        this.selectWorldRank.visible = false;
        this.worldRankList.visible = false;
        this.selfRankSprite.visible = false;
        //打开子域排行榜 TODO
        if (PlatformMgr_1.default.subDomain) {
            if (!this.wxOpenDataView) {
                this.wxOpenDataView = new Laya.WXOpenDataViewer();
                this.owner.addChild(this.wxOpenDataView);
            }
            this.wxOpenDataView.width = 561;
            this.wxOpenDataView.height = 828;
            this.wxOpenDataView.pos(95, 279);
            this.wxOpenDataView.y = this.wxOpenDataView.y + this.offset.y / 2;
            PlatformMgr_1.default.subDomain.setOpenView(this.wxOpenDataView);
            PlatformMgr_1.default.subDomain.openFriendRank({ _type: this._data._type });
        }
    };
    RankView.prototype.closeFriendRank = function () {
        if (PlatformMgr_1.default.subDomain) {
            if (this.wxOpenDataView) {
                this.wxOpenDataView.destroy();
                this.wxOpenDataView = null;
            }
            PlatformMgr_1.default.subDomain.closeFriendRank();
        }
    };
    RankView.prototype.removeEvent = function () {
        this.closeBtn.off(Laya.Event.CLICK, this, this.closeView);
        this.worldBtn.off(Laya.Event.CLICK, this, this.worldRankClick);
        this.friendBtn.off(Laya.Event.CLICK, this, this.friendRankClick);
        _super.prototype.removeEvent.call(this);
    };
    RankView.prototype.openView = function (_data) {
        _super.prototype.openView.call(this, _data);
        this.worldRankClick();
    };
    RankView.prototype.closeView = function () {
        this.worldData = null;
        if (PlatformMgr_1.default.subDomain) {
            this.closeFriendRank();
        }
        _super.prototype.closeView.call(this);
    };
    return RankView;
}(BaseView_1.default));
exports.default = RankView;
},{"../../mgrCommon/HttpMgr":8,"../../mgrCommon/PlatformMgr":9,"../../models/UserData":16,"../../tools/MyUtils":23,"../BaseView":25,"./RankItem":37}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
