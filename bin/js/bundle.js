var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var ButtonAnim_1 = require("./script/views/ButtonAnim");
var ConvergeAdView_1 = require("./script/views/ConvergeAdView");
var WXLaunch_1 = require("./script/platform/wx/WXLaunch");
var MainView_1 = require("./script/views/MainView");
var SideAdView_1 = require("./script/views/SideAdView");
var WXRankView_1 = require("./script/views/rank/WXRankView");
var TipView_1 = require("./script/views/TipView");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/views/ButtonAnim.ts", ButtonAnim_1.default);
        reg("script/views/ConvergeAdView.ts", ConvergeAdView_1.default);
        reg("script/platform/wx/WXLaunch.ts", WXLaunch_1.default);
        reg("script/views/MainView.ts", MainView_1.default);
        reg("script/views/SideAdView.ts", SideAdView_1.default);
        reg("script/views/rank/WXRankView.ts", WXRankView_1.default);
        reg("script/views/TipView.ts", TipView_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "Launch.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();

},{"./script/platform/wx/WXLaunch":18,"./script/views/ButtonAnim":24,"./script/views/ConvergeAdView":25,"./script/views/MainView":26,"./script/views/SideAdView":27,"./script/views/TipView":28,"./script/views/rank/WXRankView":30}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var MyInit_1 = require("./script/MyInit");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎
        Laya.isWXOpenDataContext = false;
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        MyInit_1.default.init();
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        // Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
        this.onVersionLoaded();
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        var res = [
            { url: "common/loading.atlas", type: Laya.Loader.ATLAS },
        ];
        //startScene 应该设置为launch页面
        Laya.loader.load(res, Laya.Handler.create(this, function () {
            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
        }));
    };
    return Main;
}());
//激活启动类
new Main();

},{"./GameConfig":1,"./script/MyInit":4}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("./models/ConfigData");
var HttpMgr_1 = require("./mgrCommon/HttpMgr");
var StorageMgr_1 = require("./mgrCommon/StorageMgr");
var StatisticsMgr_1 = require("./mgrCommon/StatisticsMgr");
var PlatformMgr_1 = require("./mgrCommon/PlatformMgr");
var UserData_1 = require("./models/UserData");
var Login = /** @class */ (function (_super) {
    __extends(Login, _super);
    function Login() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Login.prototype.login = function () {
        HttpMgr_1.default.instance.getSystemConfig();
        this.loginFun();
    };
    Login.prototype.loginFun = function () {
        var self = this;
        if (ConfigData_1.default.releasePlatform) {
            PlatformMgr_1.default.ptAPI.doLogin({
                success: Laya.Handler.create(this, this.loginSuccess, null, true),
                fail: Laya.Handler.create(this, this.loginFun, null, true)
            });
        }
        else {
            var _d = {};
            _d.code = "123";
            _d.inviteId = '';
            _d.channelId = "";
            _d.success = this.loginSuccess;
            HttpMgr_1.default.instance.login(_d);
        }
    };
    Login.prototype.loginSuccess = function (data) {
        if (data) {
            UserData_1.default.isLogin = true;
            UserData_1.default.userId = data.userId;
            UserData_1.default.nickName = data.nikename;
            UserData_1.default.avatarUrl = data.headImage;
            UserData_1.default.diamond = data.userMoney;
            UserData_1.default.channelId = data.channelId;
            UserData_1.default.level = data.level;
            UserData_1.default.score = data.score;
            UserData_1.default.openId = data.openid;
            UserData_1.default.isNew = data.isNewUser;
            UserData_1.default.exp = data.nowExp;
            //缓存用户信息到本地
            StorageMgr_1.default.saveUserData();
            if (PlatformMgr_1.default.ptAPI) {
                //上传排行数据
                PlatformMgr_1.default.ptAPI.uploadRankDate({
                    level: data.level || 0,
                    score: data.score || 0,
                });
            }
            //上传统计
            StatisticsMgr_1.default.instance.loginStatisticsPost();
        }
        // EventMgr.instance.emit("loginSuccess");
    };
    return Login;
}(Laya.Script));
exports.default = Login;

},{"./mgrCommon/HttpMgr":7,"./mgrCommon/PlatformMgr":8,"./mgrCommon/StatisticsMgr":10,"./mgrCommon/StorageMgr":11,"./models/ConfigData":13,"./models/UserData":15}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PlatformMgr_1 = require("./mgrCommon/PlatformMgr");
var ConfigData_1 = require("./models/ConfigData");
var StorageMgr_1 = require("./mgrCommon/StorageMgr");
var Login_1 = require("./Login");
var MyInit = /** @class */ (function () {
    function MyInit() {
    }
    MyInit.init = function () {
        ConfigData_1.default.initLocal();
        StorageMgr_1.default.getLocalUserData();
        PlatformMgr_1.default.initPlatform();
        new Login_1.default().login();
    };
    return MyInit;
}());
exports.default = MyInit;

},{"./Login":3,"./mgrCommon/PlatformMgr":8,"./mgrCommon/StorageMgr":11,"./models/ConfigData":13}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CurrGameData_1 = require("../models/CurrGameData");
var GameMgr = /** @class */ (function (_super) {
    __extends(GameMgr, _super);
    function GameMgr() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._fogColors = [];
        return _this;
    }
    GameMgr.prototype.onAwake = function () {
        this._currGameData = new CurrGameData_1.default();
        this._scene3d = this.owner;
        this._camera = this.owner.getChildByName("Main Camera");
        // this._camera.farPlane = 33; //可以考虑这样提高性能
        //是否需要开启雾
        // this._scene3d.enableFog = true;
        // //设置雾化的颜色
        // this._scene3d.fogColor = this._fogColors[0];
        // //设置雾化的起始位置，相对于相机的距离
        // this._scene3d.fogStart = 10;
        // //设置雾化最浓处的距离。
        // this._scene3d.fogRange = 20;
    };
    GameMgr.prototype.getGameData = function () {
        return this._currGameData;
    };
    GameMgr.prototype.onEnable = function () {
    };
    GameMgr.prototype.initGameByData = function (_d) {
        this._currGameData.reset();
    };
    GameMgr.prototype.onUpdate = function () {
    };
    GameMgr.prototype.onDisable = function () {
    };
    GameMgr.instance = new GameMgr();
    return GameMgr;
}(Laya.Script));
exports.default = GameMgr;

},{"../models/CurrGameData":14}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//全局事件
var EventDispatcher = laya.events.EventDispatcher;
var EventMgr = /** @class */ (function (_super) {
    __extends(EventMgr, _super);
    function EventMgr() {
        return _super.call(this) || this;
    }
    ;
    //派发事件
    EventMgr.prototype.emit = function (InName, agv) {
        // console.log("派发事件" + InName,agv);
        EventMgr.eventDispatcher.event(InName, agv);
    };
    //侦听事件
    EventMgr.prototype.onEvent = function (InName, caller, listener, arg) {
        // console.log("侦听事件",InName);
        EventMgr.eventDispatcher.on(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //侦听事件
    EventMgr.prototype.onOnceEvent = function (InName, caller, listener, arg) {
        // console.log("侦听事件",InName);
        EventMgr.eventDispatcher.once(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //移除事件
    EventMgr.prototype.onOffEvent = function (InName, caller, listener, arg) {
        // console.log("关闭事件",InName);
        EventMgr.eventDispatcher.off(InName, caller, listener);
    };
    EventMgr.eventDispatcher = new EventDispatcher();
    EventMgr.instance = new EventMgr();
    return EventMgr;
}(EventDispatcher));
exports.default = EventMgr;

},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var StorageMgr_1 = require("./StorageMgr");
var ConfigData_1 = require("../models/ConfigData");
var HttpUtils_1 = require("../tools/HttpUtils");
var UserData_1 = require("../models/UserData");
var EventMgr_1 = require("./EventMgr");
var HttpMgr = /** @class */ (function () {
    function HttpMgr() {
        this._http = new HttpUtils_1.default();
    }
    //登陆
    HttpMgr.prototype.login = function (_d) {
        this._http.request({
            url: 'userLogin.action', data: _d, callback: function (res) {
                if (res.code == 0) {
                    UserData_1.default.sessionId = res.sessionId;
                    StorageMgr_1.default.saveSession(UserData_1.default.sessionId);
                    if (_d.success) {
                        _d.success(res);
                    }
                }
                else {
                    // sessionId 过期
                    StorageMgr_1.default.saveSession("");
                    UserData_1.default.sessionId = "";
                    if (_d.fail) {
                        _d.fail(res);
                    }
                }
            }
        });
    };
    //开关配制
    HttpMgr.prototype.getSystemConfig = function () {
        this._http.request({
            url: 'getSystemParamList.action', data: { nowVersion: ConfigData_1.default.version }, callback: function (res) {
                if (res.code == 0) {
                    ConfigData_1.default.ctrlInfo = {
                        isConverge: res.isConverge,
                        isShare: res.isShare,
                        isVideo: res.isVideo,
                        isWudian: res.isWudian,
                        shareInfo: res.shareInfo,
                        isBanner: res.is_banner,
                        adInfo: res.adInfo,
                    };
                }
                EventMgr_1.default.instance.emit("getSystemParamListBack");
            }, fail: function (res) {
                EventMgr_1.default.instance.emit("getSystemParamListBack");
            }
        });
    };
    HttpMgr.prototype.updateUserInfo = function () {
        this._http.request({
            url: 'updateUserInfo.action', data: {
                nickname: UserData_1.default.nickName,
                headimgurl: UserData_1.default.avatarUrl,
                sex: UserData_1.default.gender,
            }
        });
    };
    HttpMgr.prototype.statisticsPost = function (_d) {
        this._http.requestStatistics(_d);
    };
    HttpMgr.prototype.videoErrorCallback = function () {
        this._http.request({
            url: 'videoCallback.action', callback: function (res) {
                if (res.code == 0) {
                    UserData_1.default.adCount = res.adCount;
                }
            }
        });
    };
    HttpMgr.prototype.getWorldRank = function (_d) {
        this._http.request({
            url: 'getWorldRank.action', data: { page: 1, type: 1 }, callback: function (res) {
                if (res.code == 0) {
                    if (_d.success) {
                        _d.success(res);
                    }
                }
            }
        });
    };
    HttpMgr.instance = new HttpMgr();
    return HttpMgr;
}());
exports.default = HttpMgr;

},{"../models/ConfigData":13,"../models/UserData":15,"../tools/HttpUtils":20,"./EventMgr":6,"./StorageMgr":11}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../models/ConfigData");
var WXAPI_1 = require("../platform/wx/WXAPI");
var WXADMgr_1 = require("../platform/wx/WXADMgr");
var PlatformMgr = /** @class */ (function (_super) {
    __extends(PlatformMgr, _super);
    function PlatformMgr() {
        return _super.call(this) || this;
    }
    PlatformMgr.initPlatform = function () {
        switch (ConfigData_1.default.releasePlatform) {
            case "wx":
                PlatformMgr.ptAPI = new WXAPI_1.default();
                PlatformMgr.ptAdMgr = new WXADMgr_1.default;
                break;
            case "fb":
                //new fb的管理类
                // this.ptAPI = new FBAPI();
                // this.ptAdMgr = new FBAdMgr;
                break;
        }
    };
    PlatformMgr.instance = new PlatformMgr();
    return PlatformMgr;
}(Laya.Script));
exports.default = PlatformMgr;

},{"../models/ConfigData":13,"../platform/wx/WXADMgr":16,"../platform/wx/WXAPI":17}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../models/ConfigData");
var SoundMgr = /** @class */ (function () {
    function SoundMgr() {
    }
    SoundMgr.prototype.playSound = function (name) {
        if (!ConfigData_1.default.isSound) {
            return;
        }
        var url = "res/sound/" + name + ".mp3";
        if (Laya.Browser.onMiniGame) {
            var sound = laya.utils.Pool.getItem(name);
            if (sound == null) {
                sound = wx.createInnerAudioContext();
                sound.src = "res/sound/" + name + ".mp3";
                sound.onEnded(function () {
                    laya.utils.Pool.recover(name, sound);
                });
            }
            sound.play();
        }
        else {
            Laya.SoundManager.playSound(url, 1);
        }
    };
    SoundMgr.prototype.playBGM = function () {
        if (!ConfigData_1.default.isSound) {
            return;
        }
        var url = "res/sound/bgm.mp3";
        if (Laya.Browser.onMiniGame) {
            this.bgm = wx.createInnerAudioContext();
            this.bgm.src = url;
            this.bgm.loop = true;
            this.bgm.play();
        }
        else {
            Laya.SoundManager.playMusic(url, 0);
        }
    };
    SoundMgr.prototype.stopBGM = function () {
        var url = "res/sound/bgm.mp3";
        if (Laya.Browser.onMiniGame) {
            if (this.bgm) {
                this.bgm.stop();
            }
        }
        else {
            Laya.SoundManager.stopMusic();
        }
    };
    SoundMgr.instance = new SoundMgr();
    return SoundMgr;
}());
exports.default = SoundMgr;

},{"../models/ConfigData":13}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpMgr_1 = require("./HttpMgr");
var UserData_1 = require("../models/UserData");
var ConfigData_1 = require("../models/ConfigData");
var StatisticsMgr = /** @class */ (function () {
    function StatisticsMgr() {
    }
    //登陆统计
    StatisticsMgr.prototype.loginStatisticsPost = function () {
        var _d = {
            action: "1005",
            from_appid: UserData_1.default.fromAppid,
            from_imgid: UserData_1.default.fromImgid,
            code: UserData_1.default.code,
            isnew: UserData_1.default.isNew ? 1 : 0,
        };
        this.statisticsPost(_d);
    };
    //点击授权统计接口
    StatisticsMgr.prototype.authorStatistics = function () {
        var _d = {
            action: "1006",
            from_appid: UserData_1.default.fromAppid,
            from_imgid: UserData_1.default.fromImgid,
            code: UserData_1.default.code,
            isnew: UserData_1.default.isNew ? 1 : 0,
        };
        this.statisticsPost(_d);
    };
    //开始游戏统计接口
    StatisticsMgr.prototype.startGameStatistics = function () {
        var _d = {
            action: "1008",
        };
        this.statisticsPost(_d);
    };
    //分享统计接口  类型: 0普通分享, 1分享复活, 2分享获取道具, 3分享获取抽奖次数
    StatisticsMgr.prototype.shareStatistics = function (type) {
        var _d = {
            action: "1009",
            type: type,
        };
        this.statisticsPost(_d);
    };
    //点击视频统计接口
    StatisticsMgr.prototype.clickVideoStatistics = function (type) {
        var _d = {
            action: "1010",
            type: type,
        };
        this.statisticsPost(_d);
    };
    //看完视频统计接口
    StatisticsMgr.prototype.videoPlayOverAdStatistics = function (type) {
        var _d = {
            action: "1011",
            type: type,
        };
        this.statisticsPost(_d);
    };
    //点击跳转统计接口
    StatisticsMgr.prototype.navigateToMiniProgramStatistics = function (_d) {
        _d.action = "1007";
        this.statisticsPost(_d);
    };
    //点击跳转成功后统计接口
    StatisticsMgr.prototype.navigateToMiniProgramBackStatistics = function (_d) {
        _d.action = "1017";
        this.statisticsPost(_d);
    };
    //统计
    StatisticsMgr.prototype.statisticsPost = function (_data) {
        var _d = {
            channel: UserData_1.default.channelId,
            my_appid: ConfigData_1.default.myAppid,
            openid: UserData_1.default.openId,
        };
        for (var key in _data) {
            if (_data.hasOwnProperty(key)) {
                _d[key] = _data[key];
            }
        }
        HttpMgr_1.default.instance.statisticsPost(_d);
    };
    StatisticsMgr.instance = new StatisticsMgr();
    return StatisticsMgr;
}());
exports.default = StatisticsMgr;

},{"../models/ConfigData":13,"../models/UserData":15,"./HttpMgr":7}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyUtils_1 = require("../tools/MyUtils");
var UserData_1 = require("../models/UserData");
var StorageMgr = /** @class */ (function () {
    function StorageMgr() {
    }
    StorageMgr.setStorage = function (_d) {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        wx.setStorage({
            key: _d.key,
            data: JSON.stringify(_d.val),
            success: _d.success,
            fail: _d.fail,
            complete: _d.complete
        });
    };
    StorageMgr.getStorage = function (_key) {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        try {
            var value = wx.getStorageSync(_key);
            if (value) {
                return value;
            }
        }
        catch (e) {
        }
    };
    StorageMgr.saveSession = function (_s) {
        StorageMgr.setStorage({ key: "sessionId", val: _s });
    };
    StorageMgr.getLocalVirbort = function () {
        return MyUtils_1.default.isNull(StorageMgr.getStorage("virbort"));
    };
    StorageMgr.setLocalVirbort = function (str) {
        StorageMgr.setStorage({
            ket: "virbort",
            val: str
        });
    };
    StorageMgr.getLocalSound = function () {
        return MyUtils_1.default.isNull(StorageMgr.getStorage("sound"));
    };
    StorageMgr.setLocalSound = function (str) {
        StorageMgr.setStorage({
            ket: "sound",
            val: str
        });
    };
    StorageMgr.saveUserData = function () {
        var _d = {
            sessionId: UserData_1.default.sessionId,
            openId: UserData_1.default.openId,
            score: UserData_1.default.score,
            exp: UserData_1.default.exp,
            level: UserData_1.default.level,
        };
        StorageMgr.setStorage({ key: "userData", val: _d });
    };
    StorageMgr.getLocalUserData = function () {
        if (UserData_1.default.isLogin) {
            return;
        }
        var _d = StorageMgr.getStorage("userData");
        if (!MyUtils_1.default.isNull(_d)) {
            _d = JSON.parse(_d);
            UserData_1.default.sessionId = _d.sessionId;
            UserData_1.default.openId = _d.openId;
            UserData_1.default.score = _d.score;
            UserData_1.default.exp = _d.exp;
            UserData_1.default.level = _d.level;
        }
    };
    return StorageMgr;
}());
exports.default = StorageMgr;

},{"../models/UserData":15,"../tools/MyUtils":22}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyUtils_1 = require("../tools/MyUtils");
var ViewMgr = /** @class */ (function () {
    function ViewMgr() {
        this.viewDic = {};
    }
    ViewMgr.prototype.openView = function (_d) {
        var self = this;
        var url = _d.viewName;
        var cls = _d.cls;
        var closeAll = _d.closeAll;
        if (closeAll) {
            this.viewDic = {};
        }
        if (MyUtils_1.default.isNull(this.viewDic[url])) {
            Laya.Scene.open(url, closeAll, Laya.Handler.create(this, function (owner) {
                if (!MyUtils_1.default.isNull(cls)) {
                    var component = owner.getComponent(cls);
                    component.openView(_d.data);
                    self.viewDic[url] = component;
                }
            }));
        }
        else {
            var component = this.viewDic[url];
            component.openView(_d.data);
        }
    };
    ViewMgr.prototype.closeView = function (viewName) {
        if (MyUtils_1.default.isNull(this.viewDic[viewName])) {
            return;
        }
        var scene = this.viewDic[viewName];
        scene.owner.destroy();
        scene.destroy();
        this.viewDic[viewName] = null;
    };
    ViewMgr.prototype.hideView = function (viewName) {
        if (MyUtils_1.default.isNull(this.viewDic[viewName])) {
            return;
        }
        var scene = this.viewDic[viewName];
        scene.owner.active = false;
    };
    ViewMgr.prototype.getView = function (viewName) {
        var view = this.viewDic[viewName];
        if (!MyUtils_1.default.isNull(view)) {
            return view;
        }
    };
    ViewMgr.instance = new ViewMgr();
    return ViewMgr;
}());
exports.default = ViewMgr;

},{"../tools/MyUtils":22}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyUtils_1 = require("../tools/MyUtils");
var StorageMgr_1 = require("../mgrCommon/StorageMgr");
var ConfigData = /** @class */ (function () {
    function ConfigData() {
    }
    ConfigData.initLocal = function () {
        ConfigData.isSound = StorageMgr_1.default.getLocalSound();
        ConfigData.isVirbort = StorageMgr_1.default.getLocalVirbort();
        if (Laya.Browser.onMiniGame) {
            this.releasePlatform = "wx";
            this.systemInfo = wx.getSystemInfoSync();
        }
    };
    ConfigData.initConfigData = function (_d, remote) {
        if (remote === void 0) { remote = false; }
        if (remote) {
            ConfigData.configs = _d;
        }
        else if (!ConfigData.configs) {
            ConfigData.configs = _d;
        }
    };
    ConfigData.getConfigData = function (configName) {
        return this.ctrlInfo[configName];
    };
    /**设置声音 */
    ConfigData.setSound = function (str) {
        if (!str || str.length <= 0) {
            ConfigData.isSound = true;
            StorageMgr_1.default.setLocalSound("");
        }
        else {
            StorageMgr_1.default.setLocalSound("1");
            ConfigData.isSound = false;
        }
    };
    /**
     * 振动设置
     * @param str
     */
    ConfigData.setVirbort = function (str) {
        if (!str || str.length <= 0) {
            ConfigData.isVirbort = true;
            StorageMgr_1.default.setLocalVirbort("");
        }
        else {
            StorageMgr_1.default.setLocalVirbort("1");
            ConfigData.isVirbort = false;
        }
    };
    ConfigData.getADData = function (adId) {
        var srt = this.getConfigData("adInfo");
        if (MyUtils_1.default.isNull(srt)) {
            return;
        }
        var adInfos = JSON.parse(srt);
        var array = [];
        for (var i = 0; i < adInfos.length; i++) {
            var adInfo = adInfos[i];
            if (adInfo.position == adId) {
                array.push(adInfo);
            }
        }
        return array;
    };
    ConfigData.releasePlatform = ""; //发布平台 wx fb
    ConfigData.myAppid = "wxbe9fe00281505169";
    ConfigData.configs = null;
    ConfigData.language = "cn";
    ConfigData.languageData = null;
    ConfigData.version = "100";
    ConfigData.jsonVersion = "100";
    ConfigData.serverUrl = "https://xcx.biaocr.com/funny_frog/";
    ConfigData.jsonVersionUrl = "https://p.doguane.cn/20190404/m_04171926352321.json";
    ConfigData.statisticsUrl = "https://log.zuancr.com/";
    ConfigData.isCreateAuthorization = false; //是否创建了授权按钮
    ConfigData.repeatAuthorization = false; //是否创建了授权按钮
    ConfigData.isLog = true; //是否开启日志
    ConfigData.ctrlInfo = {}; //游戏控制信息
    ConfigData.systemInfo = {}; //设备系统信息
    ConfigData.bannerVideoId = "adunit-7c4449f9f6fcafbb";
    ConfigData.rewardedVideoId = "adunit-df0311118e2452c6";
    return ConfigData;
}());
exports.default = ConfigData;

},{"../mgrCommon/StorageMgr":11,"../tools/MyUtils":22}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//当前游戏的数据
var CurrGameData = /** @class */ (function () {
    function CurrGameData() {
        this.score = 0; //分数
    }
    CurrGameData.prototype.reset = function () {
        this.score = 0;
    };
    return CurrGameData;
}());
exports.default = CurrGameData;

},{}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UserData = /** @class */ (function () {
    function UserData() {
    }
    UserData.code = ""; //微信code
    UserData.openId = ""; //微信openid
    UserData.sessionId = "";
    UserData.nickName = "";
    UserData.gender = 0;
    UserData.avatarUrl = "";
    UserData.score = 0; //分数
    UserData.exp = 0; //经验
    UserData.level = 1; //等级
    UserData.index = 0; //排行
    UserData.diamond = 0;
    UserData.gold = 0;
    UserData.isNew = false;
    UserData.isLogin = false;
    return UserData;
}());
exports.default = UserData;

},{}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyUtils_1 = require("../../tools/MyUtils");
var ConfigData_1 = require("../../models/ConfigData");
var HttpMgr_1 = require("../../mgrCommon/HttpMgr");
var WXAdMgr = /** @class */ (function () {
    /**
     *
     */
    function WXAdMgr() {
        this.bannerHomeIsHide = true;
        this.bannerOtherIsHide = true;
        this.bannerClassicEndIsHide = true;
        this.isInited = false;
        this.hasAd = false;
        this.init();
    }
    WXAdMgr.prototype.init = function () {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        if (ConfigData_1.default.systemInfo.SDKVersion && MyUtils_1.default.compareVersion(ConfigData_1.default.systemInfo.SDKVersion, "2.0.4") >= 0) {
            this.isInited = true;
            this.initVedioCom();
        }
        this.preBannerTime_Home = Laya.timer.currTimer;
        this.preBannerTime_Other = Laya.timer.currTimer;
        this.preBannerTime_ClassicEnd = Laya.timer.currTimer;
    };
    WXAdMgr.prototype.initVedioCom = function () {
        var self = this;
        if (this.isInited) {
            this.rewardedVideoAd = window["wx"].createRewardedVideoAd({ adUnitId: ConfigData_1.default.rewardedVideoId });
            if (this.rewardedVideoAd == undefined) {
                return;
            }
            this.rewardedVideoAd.onLoad(function () {
                console.log("rewardedVideo onload");
                self.hasAd = true;
            });
            this.rewardedVideoAd.onError(function (err) {
                self.hasAd = false;
                HttpMgr_1.default.instance.videoErrorCallback();
                if (self.callBackSuc != null) {
                    self.callBackSuc(self.caller);
                }
            });
            this.rewardedVideoAd.onClose(function (res) {
                // 用户点击了【关闭广告】按钮
                // 小于 2.1.0 的基础库版本，res 是一个 undefined
                if (res && res.isEnded || res === undefined) {
                    // 正常播放结束，可以下发游戏奖励
                    self.videoPlayedTimes += 1;
                    if (self.callBackSuc != null) {
                        self.callBackSuc(self.caller);
                    }
                }
                else {
                    // 播放中途退出，不下发游戏奖励
                    if (self.callBackFail != null) {
                        self.callBackFail(self.caller);
                    }
                }
            });
        }
    };
    WXAdMgr.prototype.showVideo = function (caller, callBackSuc, callBackFail) {
        if (!this.isInited) {
            return;
        }
        var self = this;
        this.caller = caller;
        this.callBackSuc = callBackSuc;
        this.callBackFail = callBackFail;
        if (this.hasAd) {
            this.hasAd = false;
            this.rewardedVideoAd.show();
        }
        else {
            this.rewardedVideoAd.load()
                .then(function () {
                self.rewardedVideoAd.show();
                self.hasAd = false;
            });
        }
    };
    WXAdMgr.prototype.showBannerAdHome = function () {
        var _this = this;
        if (!Laya.Browser.onMiniGame || !this.isInited) {
            return;
        }
        this.destoryAllBannerAd();
        var screenW = ConfigData_1.default.systemInfo.windowWidth;
        var _width = Laya.stage.width / 2 - 140;
        var screenH = ConfigData_1.default.systemInfo.windowHeight;
        this.bannerHomeIsHide = false;
        if (Laya.timer.currTimer - this.preBannerTime_Home > 30000) {
            if (this.bannerHome) {
                this.bannerHome.destroy();
                this.bannerHome = null;
            }
        }
        if (!this.bannerHome) {
            this.destroyBannerAdHome();
            this.bannerHome = window["wx"].createBannerAd({
                adUnitId: ConfigData_1.default.bannerVideoId,
                style: {
                    left: 0,
                    top: screenH - 100,
                    width: _width,
                }
            });
            this.bannerHome.onResize(function (r) {
                _this.bannerHome.style.left = (screenW - _this.bannerHome.style.realWidth) / 2;
                _this.bannerHome.style.top = screenH - _this.bannerHome.style.realHeight;
                if (screenH / screenW > 2) {
                    _this.bannerHome.style.top = _this.bannerHome.style.top - 10;
                }
            });
            this.bannerHome.onError(function (res) {
                console.log("广告加载错误:", res);
            });
            // this.bannerHome.onLoad(()=>{
            //     if(this.bannerHomeIsHide){
            //         this.bannerHome.destroy();
            //         return;
            //     }
            //     this.bannerHome.show();
            // })
            this.preBannerTime_Home = Laya.timer.currTimer;
        }
        if (this.bannerHome != undefined) {
            this.bannerHome.show();
        }
    };
    WXAdMgr.prototype.showBannerAdOther = function () {
        var _this = this;
        if (!Laya.Browser.onMiniGame || !this.isInited) {
            return;
        }
        this.destoryAllBannerAd();
        var screenW = ConfigData_1.default.systemInfo.windowWidth;
        var _width = screenW;
        var screenH = ConfigData_1.default.systemInfo.windowHeight;
        this.bannerOtherIsHide = false;
        if (Laya.timer.currTimer - this.preBannerTime_Other > 30000) {
            if (this.bannerOther) {
                this.bannerOther.destroy();
                this.bannerOther = null;
            }
        }
        if (!this.bannerOther) {
            this.destroyBannerAdOther();
            this.bannerOther = window["wx"].createBannerAd({
                adUnitId: ConfigData_1.default.bannerVideoId,
                style: {
                    left: 0,
                    top: screenH - 100,
                    width: _width,
                }
            });
            this.bannerOther.onResize(function (r) {
                _this.bannerOther.style.left = (screenW - _this.bannerOther.style.realWidth) / 2;
                _this.bannerOther.style.top = screenH - _this.bannerOther.style.realHeight - 10;
                if (screenH / screenW > 2) {
                    _this.bannerOther.style.top = _this.bannerOther.style.top - 25;
                }
            });
            this.bannerOther.onError(function (res) {
                console.log("广告加载错误:", res);
            });
            this.preBannerTime_Other = Laya.timer.currTimer;
        }
        if (this.bannerOther != undefined) {
            this.bannerOther.show();
        }
    };
    WXAdMgr.prototype.showBannerAdClassicEnd = function () {
        var _this = this;
        if (!Laya.Browser.onMiniGame || !this.isInited) {
            return;
        }
        this.destoryAllBannerAd();
        var screenW = ConfigData_1.default.systemInfo.windowWidth;
        var _width = screenW;
        var screenH = ConfigData_1.default.systemInfo.windowHeight;
        this.bannerClassicEndIsHide = false;
        if (Laya.timer.currTimer - this.preBannerTime_Other > 30000) {
            if (this.bannerClassicEnd) {
                this.bannerClassicEnd.destroy();
                this.bannerClassicEnd = null;
            }
        }
        if (!this.bannerClassicEnd) {
            this.destroyBannerAdClassicEnd();
            this.bannerClassicEnd = window["wx"].createBannerAd({
                adUnitId: 'adunit-dcacf7fd6e654b4d',
                style: {
                    left: 0,
                    top: screenH - 100,
                    width: _width,
                }
            });
            this.bannerClassicEnd.onError(function (res) {
                console.log("广告加载错误:", res);
            });
            this.bannerClassicEnd.onResize(function (r) {
                _this.bannerClassicEnd.style.left = (screenW - _this.bannerClassicEnd.style.realWidth) / 2;
                _this.bannerClassicEnd.style.top = screenH - _this.bannerClassicEnd.style.realHeight - 10;
                if (screenH / screenW > 2) {
                    _this.bannerClassicEnd.style.top = _this.bannerClassicEnd.style.top - 25;
                }
            });
            this.preBannerTime_Other = Laya.timer.currTimer;
        }
        if (this.bannerClassicEnd != undefined) {
            this.bannerClassicEnd.show();
        }
    };
    WXAdMgr.prototype.destroyBannerAdHome = function () {
        this.bannerHomeIsHide = true;
        if (this.bannerHome) {
            this.preBannerTime_Home = 0;
            if (ConfigData_1.default.ctrlInfo.is_banner == 1) {
                this.bannerHome.destroy();
                this.bannerHome = null;
            }
            else {
                this.bannerHome.hide();
            }
        }
    };
    WXAdMgr.prototype.destroyBannerAdOther = function () {
        this.bannerOtherIsHide = true;
        if (this.bannerOther) {
            this.preBannerTime_Other = 0;
            if (ConfigData_1.default.ctrlInfo.is_banner == 1) {
                this.bannerOther.destroy();
                this.bannerOther = null;
            }
            else {
                this.bannerOther.hide();
            }
        }
    };
    WXAdMgr.prototype.destroyBannerAdClassicEnd = function () {
        this.bannerClassicEndIsHide = true;
        if (this.bannerClassicEnd) {
            this.preBannerTime_ClassicEnd = 0;
            if (ConfigData_1.default.ctrlInfo.is_banner == 1) {
                this.bannerClassicEnd.destroy();
                this.bannerClassicEnd = null;
            }
            else {
                this.bannerClassicEnd.hide();
            }
        }
    };
    WXAdMgr.prototype.destoryAllBannerAd = function () {
        this.destroyBannerAdHome();
        this.destroyBannerAdOther();
        this.destroyBannerAdClassicEnd();
    };
    return WXAdMgr;
}());
exports.default = WXAdMgr;

},{"../../mgrCommon/HttpMgr":7,"../../models/ConfigData":13,"../../tools/MyUtils":22}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UserData_1 = require("../../models/UserData");
var HttpMgr_1 = require("../../mgrCommon/HttpMgr");
var MyUtils_1 = require("../../tools/MyUtils");
var ConfigData_1 = require("../../models/ConfigData");
var EventMgr_1 = require("../../mgrCommon/EventMgr");
var StatisticsMgr_1 = require("../../mgrCommon/StatisticsMgr");
var MyLog_1 = require("../../tools/MyLog");
var SoundMgr_1 = require("../../mgrCommon/SoundMgr");
var ViewMgr_1 = require("../../mgrCommon/ViewMgr");
var ConvergeAdView_1 = require("../../views/ConvergeAdView");
var WXAPI = /** @class */ (function () {
    function WXAPI() {
        var _this = this;
        this._launch = {};
        this.btns = [];
        this.stime = 0;
        this.shareBackArgs = {};
        this.caller = null;
        this._launch = window["wx"].getLaunchOptionsSync();
        EventMgr_1.default.instance.once("getSystemParamListBack", this, function () {
            _this.showShareMenu();
        });
        this.setOpenDomainOffset();
        window["wx"].onShow(function (res) {
            var shareTicket = res.shareTicket;
            var query = res.query || {};
            if (shareTicket != undefined && query.avatarUrlGroup
                && query.nickNameGroup) {
                //在这做群排行的弹框
            }
            else {
                //分享回调
                var _d = _this.shareBackArgs || {};
                var self_1 = _this;
                var time = Laya.Browser.now() - _this.stime;
                if (Laya.Browser.now() - _this.stime > 2000) {
                    _d.success = true;
                    if (_this.shareBack && _this.caller) {
                        _this.shareBack.call(_this.caller, _d);
                    }
                    _this.shareBack = null;
                }
                else {
                    _d.success = false;
                    if (_this.shareBack && _this.caller) {
                        _this.shareBack.call(_this.caller, _d);
                    }
                    _this.shareBack = null;
                }
            }
            //播放音乐 切到后台背景音乐消失需要重新播放
            SoundMgr_1.default.instance.playBGM();
            //聚合广告页面
            //控制结束页面的分享，不显示聚合广告页面
            var notShowAd = false;
            if (_this.shareBackArgs) {
                notShowAd = _this.shareBackArgs["notShowAd"];
            }
            Laya.timer.frameOnce(1, _this, function () {
                //只在结束界面显示聚合广告页面
                var gameOverView = ViewMgr_1.default.instance.getView("GameOver.scene");
                var convergeAdView = ViewMgr_1.default.instance.getView("ConvergeAd.scene");
                if (!notShowAd && ConfigData_1.default.ctrlInfo.isConverge == 1 && gameOverView && !convergeAdView) {
                    ViewMgr_1.default.instance.openView({
                        viewName: "ConvergeAd.scene",
                        clas: ConvergeAdView_1.default,
                        closeAll: false,
                    });
                }
            });
            _this.shareBackArgs = {};
        });
        window["wx"].onHide(function () {
            _this.stime = Laya.Browser.now();
        });
    }
    WXAPI.prototype.onGoShare = function (res) {
        this.caller = res.caller;
        this.shareBack = res.callback;
        this.shareBackArgs = res.args || {};
    };
    /*
       success 成功回调
       fail 失败回调
   */
    WXAPI.prototype.doLogin = function (_data) {
        var _this = this;
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        window["wx"].login({
            success: function (res) {
                UserData_1.default.code = res.code;
                //登录接口
                var launch = _this.getLaunchData();
                var _d = {};
                _d.code = res.code;
                if (launch.query) {
                    _d.inviteId = launch.query.invite_uid || '';
                    _d.channelId = launch.query.channel || "";
                    UserData_1.default.fromAppid = launch.query.cur_share_id || "";
                }
                if (launch.referrerInfo) {
                    UserData_1.default.fromImgid = launch.referrerInfo.appId;
                }
                _d.success = _data.success;
                _d.fail = _data.fail;
                HttpMgr_1.default.instance.login(_d);
            },
        });
    };
    WXAPI.prototype.getOffsetOpenDomain = function () {
        return this.offsetOpenDomain;
    };
    WXAPI.prototype.getLaunchData = function () {
        return this._launch;
    };
    WXAPI.prototype.getQuery = function () {
        return this._launch.query;
    };
    WXAPI.prototype.getReferrerInfo = function () {
        return this._launch.referrerInfo;
    };
    WXAPI.prototype.uploadRankDate = function (_data) {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        var d = [];
        if (!MyUtils_1.default.isNull(_data.level)) {
            d.push({ key: "level", value: _data.level + "" });
        }
        if (!MyUtils_1.default.isNull(_data.score)) {
            d.push({ key: "score", value: _data.score + "" });
        }
        window["wx"].setUserCloudStorage({
            KVDataList: d,
            success: function (res) {
                // console.log("上传数据到微信服务器:" + JSON.stringify(res));
            }
        });
    };
    WXAPI.prototype.showShareMenu = function () {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        window["wx"].showShareMenu({ withShareTicket: true });
        var shareInfo = this.createShareInfo();
        window["wx"].onShareAppMessage(function () {
            return shareInfo;
        });
    };
    WXAPI.prototype.createShareInfo = function (_d) {
        var sd = JSON.parse(ConfigData_1.default.getConfigData("shareInfo"));
        if (!sd) {
            return null;
        }
        var rand_t = MyUtils_1.default.random(0, sd.length - 1);
        var title = sd[rand_t].title;
        var imageUrl = sd[rand_t].img;
        var query = "invite_uid=" + (UserData_1.default.userId ? UserData_1.default.userId : "");
        query += "&cur_share_id=" + sd[rand_t].id;
        query += "&avatarUrlGroup=" + (UserData_1.default.avatarUrl ? UserData_1.default.avatarUrl : "");
        query += "&nickNameGroup=" + (UserData_1.default.nickName ? UserData_1.default.nickName : "");
        query += "&channel=" + (UserData_1.default.channelId ? UserData_1.default.channelId : "");
        if (_d) {
            if (_d.id) {
                query += "&scene=" + _d.id;
            }
            if (_d.itemId) {
                query += "&itemId=" + _d.itemId;
            }
            if (_d.type) {
                query += "&type=" + _d.type;
            }
            if (_d.share_title) {
                title = _d.share_title;
            }
            if (_d.share_img) {
                imageUrl = _d.share_img;
            }
        }
        return {
            title: title,
            imageUrl: imageUrl,
            query: query,
        };
    };
    WXAPI.prototype.shareAppMessage = function (_d, type) {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        if (_d.callback) {
            this.onGoShare(_d);
        }
        if (!ConfigData_1.default.getConfigData("shareInfo")) {
            return;
        }
        StatisticsMgr_1.default.instance.shareStatistics(type);
        var shareInfo = this.createShareInfo(_d);
        window["wx"].shareAppMessage(shareInfo);
    };
    WXAPI.prototype.navigateToMiniProgram = function (_d) {
        if (!_d || !_d.appId || !Laya.Browser.onMiniGame) {
            return;
        }
        StatisticsMgr_1.default.instance.navigateToMiniProgramStatistics(_d);
        window["wx"].navigateToMiniProgram({
            appId: _d.appid,
            path: _d.path,
            extraData: {
                foo: 'bar',
            },
            // envVersion: 'develop',
            complete: function (res) {
                if (_d.complete) {
                    _d.complete();
                }
                _d.complete = null;
            },
            fail: function (res) {
                window["wx"].showToast({ title: "跳转失败" });
                if (_d.fail) {
                    _d.fail();
                }
                _d.fail = null;
            },
            success: function (res) {
                StatisticsMgr_1.default.instance.navigateToMiniProgramBackStatistics(_d);
                if (_d.callback) {
                    _d.callback("success");
                }
                _d.callback = null;
            }
        });
    };
    /**
    * 设置子域界面偏移，适配不同的屏幕界面
    */
    WXAPI.prototype.setOpenDomainOffset = function () {
        var offsetX = Laya.stage.width - 750;
        if (offsetX < 0) {
            offsetX = 0;
        }
        var offsetY = Laya.stage.height - 1334;
        if (offsetY < 0) {
            offsetY = 0;
        }
        this.offsetOpenDomain = new Laya.Vector2(offsetX, offsetY);
    };
    WXAPI.prototype.createAuthorizationButton = function (_data) {
        if (Laya.Browser.onMiniGame) {
            wx.getSetting({
                success: function (res) {
                    var _this = this;
                    if (res.authSetting && res.authSetting["scope.userInfo"]) {
                        MyLog_1.default.log("已经授权");
                    }
                    else {
                        var sWidth = Laya.stage.width;
                        var sHeight = Laya.stage.height;
                        var xb = (Laya.Browser.width / Laya.Browser.pixelRatio) / sWidth;
                        var yb = (Laya.Browser.height / Laya.Browser.pixelRatio) / sHeight;
                        var left = (_data.x - _data.width / 2) * xb;
                        var top_1 = (_data.y + this.offsetOpenDomain.y - _data.height / 2) * yb;
                        var width = _data.width * xb;
                        var height = (_data.height) * yb;
                        // let backgroundColor = "#ffffff";
                        if (_data.isFull) {
                            left = 0;
                            top_1 = (_data.y + this.offsetOpenDomain.y / 2) * yb;
                            width = width;
                            height = height;
                            // backgroundColor = "#ff0703";
                        }
                        var button_1 = window["wx"].createUserInfoButton({
                            type: 'text',
                            text: '',
                            style: {
                                left: left,
                                top: top_1,
                                width: width,
                                height: height,
                            },
                        });
                        if (this.btns) {
                            this.btns.push({ "button": button_1, "isFull": _data.isFull });
                        }
                        button_1.onTap(function (res) {
                            if (res && res.userInfo) {
                                UserData_1.default.nickName = res.userInfo.nickName;
                                UserData_1.default.gender = res.userInfo.gender;
                                UserData_1.default.avatarUrl = res.userInfo.avatarUrl;
                                StatisticsMgr_1.default.instance.authorStatistics();
                                HttpMgr_1.default.instance.updateUserInfo();
                                if (_this.btns) {
                                    _this.btns.forEach(function (element) {
                                        if (element) {
                                            element.button.destroy();
                                        }
                                    });
                                }
                                _this.btns = null;
                                button_1.destroy();
                                if (_data.successBack) {
                                    _data.successBack.method.call(_data.successBack.caller);
                                }
                            }
                            else {
                                _this.destoryAuthorization();
                                if (_data.failBack) {
                                    _data.failBack.method.call(_data.failBack.caller);
                                }
                            }
                        });
                    }
                },
                fail: function () { },
                complete: function () { }
            });
        }
    };
    WXAPI.prototype.destoryAuthorization = function () {
        if (!ConfigData_1.default.repeatAuthorization) { //如果不需要重复弹授权
            ConfigData_1.default.isCreateAuthorization = true;
            if (this.btns) {
                this.btns.forEach(function (element) {
                    if (element) {
                        element.button.destroy();
                    }
                });
            }
        }
        else {
            this.setAuthorizationCheck(false);
        }
    };
    WXAPI.prototype.setAuthorizationCheck = function (flag) {
        if (this.btns) {
            this.btns.forEach(function (element) {
                if (element) {
                    if (flag) {
                        element.button.show();
                    }
                    else {
                        element.button.hide();
                    }
                }
            });
        }
    };
    WXAPI.prototype.vibrateShort = function () {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        if (ConfigData_1.default.isVirbort) {
            window["wx"].vibrateShort();
        }
    };
    WXAPI.prototype.vibrateLong = function () {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        if (ConfigData_1.default.isVirbort) {
            window["wx"].vibrateLong();
        }
    };
    return WXAPI;
}());
exports.default = WXAPI;

},{"../../mgrCommon/EventMgr":6,"../../mgrCommon/HttpMgr":7,"../../mgrCommon/SoundMgr":9,"../../mgrCommon/StatisticsMgr":10,"../../mgrCommon/ViewMgr":12,"../../models/ConfigData":13,"../../models/UserData":15,"../../tools/MyLog":21,"../../tools/MyUtils":22,"../../views/ConvergeAdView":25}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../../models/ConfigData");
var SoundMgr_1 = require("../../mgrCommon/SoundMgr");
var GameMgr_1 = require("../../mgr3d/GameMgr");
var MyUtils_1 = require("../../tools/MyUtils");
var WXLaunch = /** @class */ (function (_super) {
    __extends(WXLaunch, _super);
    function WXLaunch() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.toProcess = 1;
        _this.progress = 0;
        _this.scene3dUrl = "LayaScene_Eatitup/Conventional/Eatitup.ls";
        return _this;
    }
    WXLaunch.prototype.getLaunchTipMsg = function () {
        var tips = [
            "按住屏幕舌头会伸长哦",
            "敲好玩，值得等待，呱~"
        ];
        return tips[MyUtils_1.default.random(0, tips.length - 1)];
    };
    WXLaunch.prototype.onEnable = function () {
        var _this = this;
        if (Laya.Browser.onMiniGame) {
            var xhr = new Laya.HttpRequest();
            xhr.once(Laya.Event.COMPLETE, this, function (data) {
                if (data && typeof data != "string" && typeof data == "object") {
                    if (ConfigData_1.default.jsonVersion != data.vision) {
                        xhr = new Laya.HttpRequest();
                        xhr.once(Laya.Event.COMPLETE, _this, function (res) {
                            if (res && typeof res != "string" && typeof res == "object") {
                                ConfigData_1.default.initConfigData(res, true);
                            }
                        });
                        xhr.send(data.path, null, "get", "json", ["Content-Type", "application/json"]);
                    }
                }
            });
            xhr.send(ConfigData_1.default.jsonVersionUrl, null, "get", "json", ["Content-Type", "application/json"]);
        }
        var group = this.owner.getChildByName("progressGroup");
        this.pro = group.getChildByName("progress");
        this.proLabel = group.getChildByName("proLabel");
        this.tipLable = this.owner.getChildByName("tipBg").getChildByName("lbl_tip");
        this.tipLable.text = this.getLaunchTipMsg();
        this.loadRes();
    };
    WXLaunch.prototype.loadRes = function () {
        var _this = this;
        var resource = [
            { url: "res/atlas/rank.atlas", type: Laya.Loader.ATLAS },
            { url: "res/json/config.json", type: Laya.Loader.JSON },
            { url: "res/json/" + ConfigData_1.default.language + ".json", type: Laya.Loader.JSON },
        ];
        var self = this;
        if (Laya.Browser.onMiniGame) {
            var loadTask = window["wx"].loadSubpackage({
                name: 'res3d',
                success: function (res) {
                    // 分包加载成功后通过 success 回调
                    var loadTask1 = window["wx"].loadSubpackage({
                        name: 'res',
                        success: function (res) {
                            // 分包加载成功后通过 success 回调
                            Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                                self.updateProgress(0.99);
                                _this.loadResComplete();
                            }), Laya.Handler.create(_this, function (res) {
                                self.updateProgress(0.6 + res * 0.4);
                            }));
                        },
                        fail: function (res) {
                            // 分包加载失败通过 fail 回调
                            _this.loadRes();
                        }
                    });
                    loadTask1.onProgressUpdate(function (res) {
                        self.updateProgress(0.3 + res.progress * 0.003);
                    });
                },
                fail: function (res) {
                    // 分包加载失败通过 fail 回调
                    _this.loadRes();
                }
            });
            loadTask.onProgressUpdate(function (res) {
                self.updateProgress(res.progress * 0.003);
            });
        }
        else {
            Laya.loader.load(resource, Laya.Handler.create(this, function () {
                self.updateProgress(0.99);
                _this.loadResComplete();
            }), Laya.Handler.create(this, function (res) {
                self.updateProgress(res);
            }));
        }
    };
    WXLaunch.prototype.loadResComplete = function () {
        //本地游戏数据配置
        ConfigData_1.default.initConfigData(Laya.Loader.getRes("res/json/config.json"));
        //语言文件
        ConfigData_1.default.languageData = Laya.Loader.getRes("res/json/" + ConfigData_1.default.language + ".json");
        Laya.Scene3D.load(this.scene3dUrl, Laya.Handler.create(this, this.On3DResLoadComplete));
        // this.On3DResLoadComplete();
    };
    WXLaunch.prototype.On3DResLoadComplete = function (scene) {
        this.updateProgress(1);
        if (Laya.Browser.onMiniGame) {
            // console.log("子域加载res/atlas/rank.atlas");
            Laya.MiniAdpter.sendAtlasToOpenDataContext("res/atlas/rank.atlas"); //使用接口将图集透传到子域
        }
        SoundMgr_1.default.instance.playBGM();
        scene.addComponent(GameMgr_1.default);
        Laya.stage.addChild(scene);
        Laya.Scene.open("MainView.scene");
    };
    /**
         * 更新资源加载进度
         */
    WXLaunch.prototype.updateProgress = function (progress) {
        var _this = this;
        this.progress = progress;
        this.progress > this.toProcess ? this.toProcess : this.progress;
        //最高100%进度
        if (this.progress >= 1) {
            // Laya.Tween.clearAll(this.pro);
            this.proLabel.text = "游戏加载完毕，即将进入游戏...";
            this.pro.width = 500;
            Laya.timer.frameOnce(2, this, function () {
                _this.owner.destroy();
                Laya.loader.clearRes("res/atlas/loading.atlas");
                _this.destroy();
            });
        }
        else {
            this.pro.width = 500 * this.progress;
            // Laya.Tween.clearAll(this.pro);
            // Laya.Tween.to(this.pro,{width:500 * this.progress},100,Laya.Ease.linearNone)
            //进度增加
            this.proLabel.text = "资源加载中..." + Math.floor(this.progress * 100) + "%";
        }
    };
    return WXLaunch;
}(Laya.Script));
exports.default = WXLaunch;

},{"../../mgr3d/GameMgr":5,"../../mgrCommon/SoundMgr":9,"../../models/ConfigData":13,"../../tools/MyUtils":22}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXSubDomain = /** @class */ (function () {
    function WXSubDomain() {
    }
    WXSubDomain.prototype.setOpenView = function (_v) {
        this.wxOpenDataView = _v;
    };
    WXSubDomain.prototype.closeFriendRank = function () {
        if (!Laya.Browser.onMiniGame || !this.wxOpenDataView) {
            return;
        }
        this.wxOpenDataView.postMsg({ type: "closeFriendRank" });
    };
    WXSubDomain.prototype.openFriendRank = function () {
        if (!Laya.Browser.onMiniGame || !this.wxOpenDataView) {
            return;
        }
        Laya.timer.frameOnce(1, this, function () {
            this.WXOpenDataView.postMsg({ type: "openFriendRank" });
        });
    };
    WXSubDomain.instance = new WXSubDomain();
    return WXSubDomain;
}());
exports.default = WXSubDomain;

},{}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../models/ConfigData");
var UserData_1 = require("../models/UserData");
var HttpUtils = /** @class */ (function () {
    function HttpUtils() {
    }
    HttpUtils.prototype.request = function (_d) {
        var meth = _d.meth || "post";
        var data = _d.data || {};
        var url = "";
        if (_d.url.indexOf("https://") > -1 ||
            _d.url.indexOf("http://") > -1) {
            url = _d.url;
        }
        else {
            url = ConfigData_1.default.serverUrl + _d.url;
        }
        var completeFunc = function (res) {
            if (_d.callback) {
                // console.log("url:" + url +" res:" + JSON.stringify(res));
                _d.callback(res);
            }
            _d.callback = null;
            _d = null;
        };
        var errorFunc = function (res) {
            if (_d.fail) {
                _d.fail(res);
            }
            _d.fail = null;
            _d = null;
        };
        if (UserData_1.default.sessionId) {
            data.sessionId = UserData_1.default.sessionId;
            // console.log("sessionId：" + UserData.sessionId);
        }
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, this, completeFunc);
        xhr.once(Laya.Event.ERROR, this, errorFunc);
        xhr.send(url, JSON.stringify(data), meth, "json", ["Content-Type", "application/x-www-form-urlencoded"]);
    };
    HttpUtils.prototype.requestStatistics = function (_d) {
        var meth = _d.meth || "post";
        var data = _d.data || {};
        _d.url = _d.url || "";
        var url = ConfigData_1.default.statisticsUrl + _d.url;
        // var completeDel = (res) => {
        //     if (_d.callback) {
        //         // console.log("url:" + url +" res:" + JSON.stringify(res));
        //         _d.callback(res);
        //     }
        // };
        // var errorDel = (res) => {
        //     if (_d.fail)  {
        //         _d.fail(res);
        //     }
        // };
        if (UserData_1.default.sessionId) {
            data.sessionId = UserData_1.default.sessionId;
            // console.log("sessionId：" + UserData.sessionId);
        }
        var xhr = new Laya.HttpRequest();
        // xhr.once(Laya.Event.COMPLETE, this, completeDel);
        // xhr.once(Laya.Event.ERROR, this, errorDel);
        xhr.send(url, "param=" + JSON.stringify(data), meth, "json", ["Content-Type", "application/x-www-form-urlencoded"]);
    };
    return HttpUtils;
}());
exports.default = HttpUtils;

},{"../models/ConfigData":13,"../models/UserData":15}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../models/ConfigData");
var MyLog = /** @class */ (function () {
    function MyLog() {
    }
    MyLog.log = function (arg1, arg2) {
        if (ConfigData_1.default.isLog) {
            console.log(arg1, arg2);
        }
    };
    return MyLog;
}());
exports.default = MyLog;

},{"../models/ConfigData":13}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../models/ConfigData");
var MyUtils = /** @class */ (function () {
    function MyUtils() {
    }
    MyUtils.isNull = function (obj) {
        if (obj != 0 && (obj == null || obj == "" || obj == undefined)) {
            return true;
        }
        return false;
    };
    MyUtils.random = function (min, max) {
        var range = max - min;
        var rand = Math.random();
        var num = min + Math.round(rand * range); //四舍五入
        return num;
    };
    /**
 * 比较版本号，格式xx.xx.xx
 * @param v1 当前版本号
 * @param v2 目标版本号
*/
    MyUtils.compareVersion = function (v1, v2) {
        v1 = v1.split('.');
        v2 = v2.split('.');
        var len = Math.max(v1.length, v2.length);
        while (v1.length < len) {
            v1.push('0');
        }
        while (v2.length < len) {
            v2.push('0');
        }
        for (var i = 0; i < len; i++) {
            var num1 = parseInt(v1[i]);
            var num2 = parseInt(v2[i]);
            if (num1 > num2) {
                return 1;
            }
            else if (num1 < num2) {
                return -1;
            }
        }
        return 0;
    };
    //顶部按钮对齐，大体适配是ok的
    MyUtils.autoScreenSize = function (node) {
        if (!Laya.Browser.onMiniGame) {
            return;
        }
        var info = ConfigData_1.default.systemInfo;
        var Y = 60;
        if (info.statusBarHeight < 20) { //18
            Y += 10;
        }
        else if (info.statusBarHeight >= 30) { //44
            Y += 60;
        }
        else if (info.statusBarHeight > 20 && info.statusBarHeight < 30) { //27
            Y += 74;
        }
        node.forEach(function (e) {
            e.y = Y;
        });
    };
    return MyUtils;
}());
exports.default = MyUtils;

},{"../models/ConfigData":13}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../mgrCommon/ViewMgr");
var PlatformMgr_1 = require("../mgrCommon/PlatformMgr");
var BaseView = /** @class */ (function (_super) {
    __extends(BaseView, _super);
    function BaseView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BaseView.prototype.onAwake = function () {
        //删除时自动释放
        this.owner.autoDestroyAtClosed = true;
    };
    BaseView.prototype.onEnable = function () {
        this.addEvent();
    };
    BaseView.prototype.onDisable = function () {
        this.removeEvent();
    };
    BaseView.prototype.openView = function (data) {
        this.owner.height = Laya.stage.height;
        this._data = data || {};
    };
    BaseView.prototype.addEvent = function () {
    };
    BaseView.prototype.removeEvent = function () {
        Laya.timer.clearAll(this);
    };
    BaseView.prototype.closeView = function (_d) {
        if (_d === void 0) { _d = null; }
        var _viewName = this.owner.url;
        if (_d.notDestroy) {
            ViewMgr_1.default.instance.hideView(_viewName);
        }
        else {
            ViewMgr_1.default.instance.closeView(_viewName);
        }
        if (_viewName == "RankView.scene") {
            PlatformMgr_1.default.ptAPI.setAuthorizationCheck(true);
        }
        if (this._data && this._data.callback) {
            this._data.callback(_d);
        }
        this._data = null;
    };
    return BaseView;
}(Laya.Script));
exports.default = BaseView;

},{"../mgrCommon/PlatformMgr":8,"../mgrCommon/ViewMgr":12}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonAnim = /** @class */ (function (_super) {
    __extends(ButtonAnim, _super);
    function ButtonAnim() {
        return _super.call(this) || this;
    }
    ButtonAnim.prototype.onAwake = function () {
        this.owner.on(Laya.Event.MOUSE_DOWN, this, this.onDown);
        this.owner.on(Laya.Event.MOUSE_UP, this, this.onUp);
        this.owner.on(Laya.Event.MOUSE_OUT, this, this.onUp);
    };
    ButtonAnim.prototype.onDisable = function () {
        this.owner.offAll();
        Laya.Tween.clearAll(this);
    };
    ButtonAnim.prototype.onDown = function () {
        Laya.Tween.to(this.owner, { scaleX: 0.8, scaleY: 0.8 }, 100);
    };
    ButtonAnim.prototype.onUp = function () {
        Laya.Tween.to(this.owner, { scaleX: 1, scaleY: 1 }, 100);
    };
    return ButtonAnim;
}(Laya.Script));
exports.default = ButtonAnim;

},{}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("./BaseView");
var TipView_1 = require("./TipView");
var MainView_1 = require("./MainView");
var MyUtils_1 = require("../tools/MyUtils");
var PlatformMgr_1 = require("../mgrCommon/PlatformMgr");
var ConfigData_1 = require("../models/ConfigData");
var ViewMgr_1 = require("../mgrCommon/ViewMgr");
var EventMgr_1 = require("../mgrCommon/EventMgr");
var ConvergeAdView = /** @class */ (function (_super) {
    __extends(ConvergeAdView, _super);
    function ConvergeAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.appid = ""; //需要调转的APPID
        return _this;
    }
    ConvergeAdView.prototype.onAwake = function () {
        this.HomeBtn = this.owner.getChildByName("btn_close");
        MyUtils_1.default.autoScreenSize([this.HomeBtn]);
        var anchorS = this.owner.getChildByName("anchorS");
        var offsetY = PlatformMgr_1.default.ptAPI.getOffsetOpenDomain();
        anchorS.y = anchorS.y + offsetY;
        this.shareBtn = anchorS.getChildByName("shareBtn");
        this.againChallengeBtn = anchorS.getChildByName("btn_again");
        this.againChallengeBtn.y = this.againChallengeBtn.y + offsetY;
        this.adList = anchorS.getChildByName("List");
        this.adList.vScrollBarSkin = '';
        this.adList.selectEnable = true;
        PlatformMgr_1.default.ptAdMgr.instance.showBannerAdOther();
    };
    ConvergeAdView.prototype.onDisable = function () {
        PlatformMgr_1.default.ptAdMgr.instance.destoryAllBannerAd();
    };
    ConvergeAdView.prototype.addEvent = function () {
        this.adList.renderHandler = new Laya.Handler(this, this.onRender);
        this.adList.mouseHandler = new Laya.Handler(this, this.onClickItem);
        this.againChallengeBtn.on(Laya.Event.CLICK, this, this.onClickHome);
        this.shareBtn.on(Laya.Event.CLICK, this, this.onClickShare);
        this.HomeBtn.on(Laya.Event.CLICK, this, this.onClickHome);
    };
    ConvergeAdView.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this.adList.renderHandler = null;
        this.adList.mouseHandler = null;
        this.againChallengeBtn.off(Laya.Event.CLICK, this, this.onClickHome);
        this.shareBtn.off(Laya.Event.CLICK, this, this.onClickShare);
        this.HomeBtn.off(Laya.Event.CLICK, this, this.onClickHome);
    };
    ConvergeAdView.prototype.openView = function (data) {
        var _this = this;
        _super.prototype.openView.call(this, data);
        this.HomeBtn.visible = false;
        var info = ConfigData_1.default.systemInfo;
        var y = 50 + (info.statusBarHeight > 20 ? 74 : 0);
        this.HomeBtn.y = y;
        var allll = [];
        if (this.adList.array == null) {
            allll = ConfigData_1.default.getADData(1004);
            this.adList.array = allll;
        }
        this.adList.refresh(); //刷新数据源
        this.adList.scrollTo(0); //第一个显示的 位置
        Laya.timer.once(1000, this, function () {
            if (_this && _this.HomeBtn) {
                _this.HomeBtn.visible = true;
            }
        });
    };
    ConvergeAdView.prototype.onClickHome = function () {
        this.closeView();
        ViewMgr_1.default.instance.openView({
            viewName: "MainView.scene",
            clas: MainView_1.default,
            closeAll: true,
        });
        EventMgr_1.default.instance.emit("goHome");
    };
    ConvergeAdView.prototype.onClickAgain = function () {
        this.closeView();
    };
    ConvergeAdView.prototype.shareBack = function (res) {
        var msg = "";
        if (res.success) {
            msg = "分享成功";
        }
        else {
            msg = "分享失败";
        }
        ViewMgr_1.default.instance.openView({
            viewName: "TipView.scene",
            clas: TipView_1.default,
            closeAll: false,
            data: msg,
        });
    };
    ConvergeAdView.prototype.onClickShare = function () {
        PlatformMgr_1.default.ptAPI.shareAppMessage({
            caller: this,
            callback: this.shareBack,
        }, 0);
    };
    /**
    * 单个 box 点击事件
    */
    ConvergeAdView.prototype.onClickItem = function (e, index) {
        if (e.type == Laya.Event.CLICK) {
            if ((e.target) instanceof Laya.Box) {
                var obj = {
                    path: this.adList.array[index].toLinks,
                    appid: this.adList.array[index].appid,
                };
                PlatformMgr_1.default.ptAPI.navigateToMiniProgram(obj);
            }
        }
    };
    ConvergeAdView.prototype.onRender = function (cell, index) {
        if (index > this.adList.array.length && this.adList.array.length == 0)
            return;
        if (this.adList.array[index] != null) {
            var img = cell.getChildByName("img");
            img.skin = this.adList.array[index].param;
        }
    };
    return ConvergeAdView;
}(BaseView_1.default));
exports.default = ConvergeAdView;

},{"../mgrCommon/EventMgr":6,"../mgrCommon/PlatformMgr":8,"../mgrCommon/ViewMgr":12,"../models/ConfigData":13,"../tools/MyUtils":22,"./BaseView":23,"./MainView":26,"./TipView":28}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainView = /** @class */ (function (_super) {
    __extends(MainView, _super);
    function MainView() {
        return _super.call(this) || this;
    }
    MainView.prototype.onEnable = function () {
    };
    MainView.prototype.onDisable = function () {
    };
    return MainView;
}(Laya.Script));
exports.default = MainView;

},{}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("../models/ConfigData");
var PlatformMgr_1 = require("../mgrCommon/PlatformMgr");
var SideAdView = /** @class */ (function (_super) {
    __extends(SideAdView, _super);
    function SideAdView() {
        var _this = _super.call(this) || this;
        _this.isClick = false;
        _this.toLinks = "";
        _this.toAppId = "";
        _this.thePosition = 1; //推广位置
        _this.nowidx = 0;
        _this.maxdix = 0;
        _this.isAnim = true;
        _this.isChange = false;
        return _this;
    }
    SideAdView.prototype.onAwake = function () {
        this.owner.on(Laya.Event.CLICK, this, this.jumpOtherGame);
    };
    SideAdView.prototype.start = function (isAnim, isChange, thePosition) {
        Laya.Tween.clearAll(this);
        var ads = ConfigData_1.default.getADData(thePosition);
        if (!ads || ads.length <= 0) {
            this.owner.visible = false;
            return;
        }
        this.owner.rotation = 0;
        this.owner.scale(1, 1);
        this.isAnim = isAnim;
        this.isChange = isChange;
        this.thePosition = thePosition;
        this.nowidx = 0;
        this.maxdix = ads.length - 1;
        this.randomAD();
        if (this.isAnim) {
            this.adAnim();
        }
        Laya.timer.clearAll(this);
        this.startAnim();
    };
    SideAdView.prototype.startAnim = function () {
        var _this = this;
        var adInfos = ConfigData_1.default.getADData(this.thePosition);
        Laya.timer.loop(10000, this, function () {
            if (adInfos != null) { //这个位置的广告大于一 才会去切换  也就是说才会有动画
                if (adInfos.length > 1) {
                    if (_this.isChange) {
                        _this.changeAD();
                    }
                    else {
                        _this.randomAD();
                    }
                }
                else {
                    _this.randomAD();
                }
            }
            else {
                if (_this.isChange) {
                    _this.changeAD();
                }
                else {
                    _this.randomAD();
                }
            }
        });
    };
    SideAdView.prototype.randomAD = function () {
        var ads = ConfigData_1.default.getADData(this.thePosition);
        if (ads) {
            var leng = ads.length;
            this.owner.skin = ads[this.nowidx].param;
            this.toAppId = ads[this.nowidx].appid;
            this.toLinks = ads[this.nowidx].toLinks;
            this.nowidx = this.nowidx + 1;
            if (this.nowidx > this.maxdix) {
                this.nowidx = 0;
            }
        }
    };
    SideAdView.prototype.changeAD = function () {
        var _this = this;
        var img = this.owner;
        img.scale(1, 1);
        Laya.Tween.to(img, { scaleX: 0, scaleY: 0 }, 300, null, Laya.Handler.create(this, function () {
            _this.randomAD();
            Laya.Tween.to(img, { scaleX: 0, scaleY: 0 }, 100, null, Laya.Handler.create(_this, function () {
                Laya.Tween.to(img, { scaleX: 1, scaleY: 1 }, 300, null, Laya.Handler.create(_this, function () {
                    // this.adAnim();
                }));
            }));
        }));
    };
    SideAdView.prototype.adAnim = function () {
        var _this = this;
        var img = this.owner;
        img.rotation = 0;
        Laya.Tween.to(img, { rotation: 10 }, 300, null, Laya.Handler.create(this, function () {
            Laya.Tween.to(img, { rotation: 0 }, 300, null, Laya.Handler.create(_this, function () {
                Laya.Tween.to(img, { rotation: -10 }, 300, null, Laya.Handler.create(_this, function () {
                    Laya.Tween.to(img, { rotation: 0 }, 300, null, Laya.Handler.create(_this, function () {
                        _this.adAnim();
                    }));
                }));
            }));
        }));
    };
    SideAdView.prototype.jumpOtherGame = function () {
        if (this.isClick) {
            return;
        }
        this.isClick = true;
        var _d = {
            my_appid: ConfigData_1.default.myAppid,
            my_uuid: this.thePosition,
            to_appid: this.toAppId,
            path: this.toLinks,
            appId: this.toAppId,
        };
        PlatformMgr_1.default.ptAPI.navigateToMiniProgram(_d);
        this.clickedAd();
    };
    SideAdView.prototype.clickedAd = function () {
        var _this = this;
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this.owner);
        Laya.timer.once(500, this, function () {
            _this.isClick = false;
        });
        this.adAnim();
        this.changeAD();
    };
    return SideAdView;
}(Laya.Script));
exports.default = SideAdView;

},{"../mgrCommon/PlatformMgr":8,"../models/ConfigData":13}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("./BaseView");
var TipView = /** @class */ (function (_super) {
    __extends(TipView, _super);
    function TipView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TipView.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.tipLbl = this.owner.getChildByName("image").getChildByName("Label");
    };
    TipView.prototype.addEvent = function () {
        var _this = this;
        this.owner.on(Laya.Event.CLICK, this, function () {
            _this.closeView();
        });
    };
    TipView.prototype.openView = function (str) {
        var _this = this;
        _super.prototype.openView.call(this, str);
        this.tipLbl.text = str;
        Laya.timer.once(2000, this, function () {
            _this.closeView();
        });
    };
    return TipView;
}(BaseView_1.default));
exports.default = TipView;

},{"./BaseView":23}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyUtils_1 = require("../../tools/MyUtils");
var RankItem = /** @class */ (function (_super) {
    __extends(RankItem, _super);
    function RankItem() {
        var _this = _super.call(this) || this;
        _this.bgImg = _this.getChildByName("imgBg");
        _this.rankImg = _this.getChildByName("rankImg");
        _this.rankLbl = _this.getChildByName("rankLbl");
        _this.avatarImg = _this.getChildByName("avatarImg");
        _this.nameLbl = _this.getChildByName("lblName");
        _this.scoreIconImg = _this.getChildByName("scoreIconImg");
        _this.score = _this.getChildByName("score");
        return _this;
    }
    RankItem.prototype.updateItem = function (itemData) {
        this.rankImg.active = false;
        this.rankLbl.text = itemData.index;
        switch (itemData.index) {
            case 1:
            case 2:
            case 3:
                this.rankLbl.text = "";
                this.rankImg.skin = "rank/" + itemData.index + ".png";
                this.rankImg.active = true;
                break;
        }
        if (!MyUtils_1.default.isNull(itemData.headImage) && itemData.headImage != "youke") {
            var avatarUrl = itemData.headImage.replace("/132", "/46");
            this.avatarImg.skin = avatarUrl;
        }
        var name = itemData.user_nickname.length > 6 ? itemData.user_nickname.substr(0, 8) : itemData.user_nickname;
        this.nameLbl.text = name != "" ? name : "神秘玩家";
        this.score.text = itemData.score;
    };
    return RankItem;
}(Laya.Box));
exports.default = RankItem;

},{"../../tools/MyUtils":22}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseView_1 = require("../BaseView");
var PlatformMgr_1 = require("../../mgrCommon/PlatformMgr");
var MyUtils_1 = require("../../tools/MyUtils");
var WXSubDomain_1 = require("../../platform/wx/WXSubDomain");
var HttpMgr_1 = require("../../mgrCommon/HttpMgr");
var RankItem_1 = require("./RankItem");
var UserData_1 = require("../../models/UserData");
var RankView = /** @class */ (function (_super) {
    __extends(RankView, _super);
    function RankView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RankView.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        var node = this.owner.getChildByName("content");
        this.closeBtn = node.getChildByName("btn_close");
        this.friendBtn = node.getChildByName("friendBtn");
        this.worldBtn = node.getChildByName("worldBtn");
        this.wxOpenDataView = node.getChildByName("wxOpenDataView");
        this.wxOpenDataView.y = this.wxOpenDataView.y + PlatformMgr_1.default.ptAPI.getOffsetOpenDomain().y / 2;
        WXSubDomain_1.default.instance.setOpenView(this.wxOpenDataView);
        this.worldRankList = node.getChildByName("worldRankList");
        this.worldRankList.array = [];
        this.worldRankList.itemRender = RankItem_1.default;
        this.worldRankList.renderHandler = new Laya.Handler(this, this.onRender);
        this.worldRankList.vScrollBarSkin = "";
        this.selfRankITem = node.getChildByName("selfRankItem").addComponent(RankItem_1.default);
        MyUtils_1.default.autoScreenSize([this.closeBtn]);
    };
    RankView.prototype.setMyRankInfo = function () {
        this.selfRankITem.updateItem(this.selfRankData);
    };
    RankView.prototype.onRender = function (cell, index) {
        cell.updateItem(cell.dataSource);
    };
    RankView.prototype.addEvent = function () {
        this.closeBtn.on(Laya.Event.CLICK, this, this.closeView);
        this.worldBtn.on(Laya.Event.CLICK, this, this.worldRankClick);
        this.friendBtn.on(Laya.Event.CLICK, this, this.friendRankClick);
    };
    RankView.prototype.getWorldData = function () {
        var _this = this;
        HttpMgr_1.default.instance.getWorldRank({
            success: function (res) {
                _this.worldData = res.rank;
                _this.selfRankData = {
                    index: res.myIndex,
                    user_nickname: UserData_1.default.nickName,
                    headImage: UserData_1.default.avatarUrl,
                    score: UserData_1.default.score
                };
                if (res.myIndex && res.myIndex <= _this.worldData.length) {
                    _this.selfRankData = _this.worldData[res.myIndex];
                }
            }
        });
    };
    RankView.prototype.setWorldRankDta = function () {
        this.worldRankList.array = this.worldData;
        this.worldRankList.refresh();
    };
    RankView.prototype.worldRankClick = function () {
        if (this.worldRank.active)
            return;
        this.worldRank.active = true;
        this.wxOpenDataView.active = false;
        WXSubDomain_1.default.instance.closeFriendRank();
        if (this.worldData) {
            this.setWorldRankDta();
        }
        else {
            this.getWorldData();
        }
    };
    RankView.prototype.friendRankClick = function () {
        if (!Laya.Browser.onMiniGame || this.wxOpenDataView.active)
            return;
        this.wxOpenDataView.active = true;
        this.worldRank.active = false;
        //打开子域排行榜 TODO
        WXSubDomain_1.default.instance.openFriendRank();
    };
    RankView.prototype.removeEvent = function () {
        this.closeBtn.off(Laya.Event.CLICK, this, this.closeView);
        this.worldBtn.off(Laya.Event.CLICK, this, this.worldRankClick);
        this.friendBtn.off(Laya.Event.CLICK, this, this.friendRankClick);
        _super.prototype.removeEvent.call(this);
    };
    RankView.prototype.closeView = function () {
        this.worldData = null;
        _super.prototype.closeView.call(this);
    };
    return RankView;
}(BaseView_1.default));
exports.default = RankView;

},{"../../mgrCommon/HttpMgr":7,"../../mgrCommon/PlatformMgr":8,"../../models/UserData":15,"../../platform/wx/WXSubDomain":19,"../../tools/MyUtils":22,"../BaseView":23,"./RankItem":29}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3ByaXZhdGUvdmFyL2ZvbGRlcnMvbXQvMXNxYnJxeTExX3M2bV9fZ3lqeDJfeWwwMDAwMGdwL1QvQXBwVHJhbnNsb2NhdGlvbi9ENTVFNzUwRC01MDM1LTRBNkMtQjc1RC1EREVEMUQ4Mzk1RTkvZC9MYXlhQWlySURFLmFwcC9Db250ZW50cy9SZXNvdXJjZXMvYXBwL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvR2FtZUNvbmZpZy50cyIsInNyYy9NYWluLnRzIiwic3JjL3NjcmlwdC9Mb2dpbi50cyIsInNyYy9zY3JpcHQvTXlJbml0LnRzIiwic3JjL3NjcmlwdC9tZ3IzZC9HYW1lTWdyLnRzIiwic3JjL3NjcmlwdC9tZ3JDb21tb24vRXZlbnRNZ3IudHMiLCJzcmMvc2NyaXB0L21nckNvbW1vbi9IdHRwTWdyLnRzIiwic3JjL3NjcmlwdC9tZ3JDb21tb24vUGxhdGZvcm1NZ3IudHMiLCJzcmMvc2NyaXB0L21nckNvbW1vbi9Tb3VuZE1nci50cyIsInNyYy9zY3JpcHQvbWdyQ29tbW9uL1N0YXRpc3RpY3NNZ3IudHMiLCJzcmMvc2NyaXB0L21nckNvbW1vbi9TdG9yYWdlTWdyLnRzIiwic3JjL3NjcmlwdC9tZ3JDb21tb24vVmlld01nci50cyIsInNyYy9zY3JpcHQvbW9kZWxzL0NvbmZpZ0RhdGEudHMiLCJzcmMvc2NyaXB0L21vZGVscy9DdXJyR2FtZURhdGEudHMiLCJzcmMvc2NyaXB0L21vZGVscy9Vc2VyRGF0YS50cyIsInNyYy9zY3JpcHQvcGxhdGZvcm0vd3gvV1hBRE1nci50cyIsInNyYy9zY3JpcHQvcGxhdGZvcm0vd3gvV1hBUEkudHMiLCJzcmMvc2NyaXB0L3BsYXRmb3JtL3d4L1dYTGF1bmNoLnRzIiwic3JjL3NjcmlwdC9wbGF0Zm9ybS93eC9XWFN1YkRvbWFpbi50cyIsInNyYy9zY3JpcHQvdG9vbHMvSHR0cFV0aWxzLnRzIiwic3JjL3NjcmlwdC90b29scy9NeUxvZy50cyIsInNyYy9zY3JpcHQvdG9vbHMvTXlVdGlscy50cyIsInNyYy9zY3JpcHQvdmlld3MvQmFzZVZpZXcudHMiLCJzcmMvc2NyaXB0L3ZpZXdzL0J1dHRvbkFuaW0udHMiLCJzcmMvc2NyaXB0L3ZpZXdzL0NvbnZlcmdlQWRWaWV3LnRzIiwic3JjL3NjcmlwdC92aWV3cy9NYWluVmlldy50cyIsInNyYy9zY3JpcHQvdmlld3MvU2lkZUFkVmlldy50cyIsInNyYy9zY3JpcHQvdmlld3MvVGlwVmlldy50cyIsInNyYy9zY3JpcHQvdmlld3MvcmFuay9SYW5rSXRlbS50cyIsInNyYy9zY3JpcHQvdmlld3MvcmFuay9XWFJhbmtWaWV3LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1ZBLGdHQUFnRztBQUNoRyx3REFBa0Q7QUFDbEQsZ0VBQTBEO0FBQzFELDBEQUFvRDtBQUNwRCxvREFBOEM7QUFDOUMsd0RBQWtEO0FBQ2xELDZEQUF1RDtBQUN2RCxrREFBNEM7QUFDNUM7O0VBRUU7QUFDRjtJQWFJO0lBQWMsQ0FBQztJQUNSLGVBQUksR0FBWDtRQUNJLElBQUksR0FBRyxHQUFhLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDO1FBQzdDLEdBQUcsQ0FBQyw0QkFBNEIsRUFBQyxvQkFBVSxDQUFDLENBQUM7UUFDN0MsR0FBRyxDQUFDLGdDQUFnQyxFQUFDLHdCQUFjLENBQUMsQ0FBQztRQUNyRCxHQUFHLENBQUMsZ0NBQWdDLEVBQUMsa0JBQVEsQ0FBQyxDQUFDO1FBQy9DLEdBQUcsQ0FBQywwQkFBMEIsRUFBQyxrQkFBUSxDQUFDLENBQUM7UUFDekMsR0FBRyxDQUFDLDRCQUE0QixFQUFDLG9CQUFVLENBQUMsQ0FBQztRQUM3QyxHQUFHLENBQUMsaUNBQWlDLEVBQUMsb0JBQVUsQ0FBQyxDQUFDO1FBQ2xELEdBQUcsQ0FBQyx5QkFBeUIsRUFBQyxpQkFBTyxDQUFDLENBQUM7SUFDM0MsQ0FBQztJ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QUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNO1lBQ3RELE9BQU87UUFDWCxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDbEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQzlCLGNBQWM7UUFDZCxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUMxQyxDQUFDO0lBRU0sOEJBQVcsR0FBbEI7UUFDSSxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzFELElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUNqRSxpQkFBTSxXQUFXLFdBQUUsQ0FBQztJQUN4QixDQUFDO0lBRU0sNEJBQVMsR0FBaEI7UUFDSSxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztRQUN0QixpQkFBTSxTQUFTLFdBQUUsQ0FBQztJQUN0QixDQUFDO0lBQ0wsZUFBQztBQUFELENBMUdBLEFBMEdDLENBMUdxQyxrQkFBUSxHQTBHN0MiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XHJcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcbiAgICB9O1xyXG59KSgpO1xyXG4oZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiLyoqVGhpcyBjbGFzcyBpcyBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCBieSBMYXlhQWlySURFLCBwbGVhc2UgZG8gbm90IG1ha2UgYW55IG1vZGlmaWNhdGlvbnMuICovXHJcbmltcG9ydCBCdXR0b25BbmltIGZyb20gXCIuL3NjcmlwdC92aWV3cy9CdXR0b25BbmltXCJcbmltcG9ydCBDb252ZXJnZUFkVmlldyBmcm9tIFwiLi9zY3JpcHQvdmlld3MvQ29udmVyZ2VBZFZpZXdcIlxuaW1wb3J0IFdYTGF1bmNoIGZyb20gXCIuL3NjcmlwdC9wbGF0Zm9ybS93eC9XWExhdW5jaFwiXG5pbXBvcnQgTWFpblZpZXcgZnJvbSBcIi4vc2NyaXB0L3ZpZXdzL01haW5WaWV3XCJcbmltcG9ydCBTaWRlQWRWaWV3IGZyb20gXCIuL3NjcmlwdC92aWV3cy9TaWRlQWRWaWV3XCJcbmltcG9ydCBXWFJhbmtWaWV3IGZyb20gXCIuL3NjcmlwdC92aWV3cy9yYW5rL1dYUmFua1ZpZXdcIlxuaW1wb3J0IFRpcFZpZXcgZnJvbSBcIi4vc2NyaXB0L3ZpZXdzL1RpcFZpZXdcIlxyXG4vKlxyXG4qIOa4uOaIj+WIneWni+WMlumFjee9rjtcclxuKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZUNvbmZpZ3tcclxuICAgIHN0YXRpYyB3aWR0aDpudW1iZXI9NzUwO1xyXG4gICAgc3RhdGljIGhlaWdodDpudW1iZXI9MTMzNDtcclxuICAgIHN0YXRpYyBzY2FsZU1vZGU6c3RyaW5nPVwiZml4ZWR3aWR0aFwiO1xyXG4gICAgc3RhdGljIHNjcmVlbk1vZGU6c3RyaW5nPVwidmVydGljYWxcIjtcclxuICAgIHN0YXRpYyBhbGlnblY6c3RyaW5nPVwibWlkZGxlXCI7XHJcbiAgICBzdGF0aWMgYWxpZ25IOnN0cmluZz1cImNlbnRlclwiO1xyXG4gICAgc3RhdGljIHN0YXJ0U2NlbmU6YW55PVwiTGF1bmNoLnNjZW5lXCI7XHJcbiAgICBzdGF0aWMgc2NlbmVSb290OnN0cmluZz1cIlwiO1xyXG4gICAgc3RhdGljIGRlYnVnOmJvb2xlYW49ZmFsc2U7XHJcbiAgICBzdGF0aWMgc3RhdDpib29sZWFuPWZhbHNlO1xyXG4gICAgc3RhdGljIHBoeXNpY3NEZWJ1Zzpib29sZWFuPWZhbHNlO1xyXG4gICAgc3RhdGljIGV4cG9ydFNjZW5lVG9Kc29uOmJvb2xlYW49dHJ1ZTtcclxuICAgIGNvbnN0cnVjdG9yKCl7fVxyXG4gICAgc3RhdGljIGluaXQoKXtcclxuICAgICAgICB2YXIgcmVnOiBGdW5jdGlvbiA9IExheWEuQ2xhc3NVdGlscy5yZWdDbGFzcztcclxuICAgICAgICByZWcoXCJzY3JpcHQvdmlld3MvQnV0dG9uQW5pbS50c1wiLEJ1dHRvbkFuaW0pO1xuICAgICAgICByZWcoXCJzY3JpcHQvdmlld3MvQ29udmVyZ2VBZFZpZXcudHNcIixDb252ZXJnZUFkVmlldyk7XG4gICAgICAgIHJlZyhcInNjcmlwdC9wbGF0Zm9ybS93eC9XWExhdW5jaC50c1wiLFdYTGF1bmNoKTtcbiAgICAgICAgcmVnKFwic2NyaXB0L3ZpZXdzL01haW5WaWV3LnRzXCIsTWFpblZpZXcpO1xuICAgICAgICByZWcoXCJzY3JpcHQvdmlld3MvU2lkZUFkVmlldy50c1wiLFNpZGVBZFZpZXcpO1xuICAgICAgICByZWcoXCJzY3JpcHQvdmlld3MvcmFuay9XWFJhbmtWaWV3LnRzXCIsV1hSYW5rVmlldyk7XG4gICAgICAgIHJlZyhcInNjcmlwdC92aWV3cy9UaXBWaWV3LnRzXCIsVGlwVmlldyk7XHJcbiAgICB9XHJcbn1cclxuR2FtZUNvbmZpZy5pbml0KCk7IiwiaW1wb3J0IEdhbWVDb25maWcgZnJvbSBcIi4vR2FtZUNvbmZpZ1wiO1xyXG5pbXBvcnQgTXlJbml0IGZyb20gXCIuL3NjcmlwdC9NeUluaXRcIjtcclxuY2xhc3MgTWFpbiB7XHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHQvL+agueaNrklEReiuvue9ruWIneWni+WMluW8leaTjlxyXG5cdFx0TGF5YS5pc1dYT3BlbkRhdGFDb250ZXh0ID0gZmFsc2U7XHJcblx0XHRpZiAod2luZG93W1wiTGF5YTNEXCJdKSBMYXlhM0QuaW5pdChHYW1lQ29uZmlnLndpZHRoLCBHYW1lQ29uZmlnLmhlaWdodCk7XHJcblx0XHRlbHNlIExheWEuaW5pdChHYW1lQ29uZmlnLndpZHRoLCBHYW1lQ29uZmlnLmhlaWdodCwgTGF5YVtcIldlYkdMXCJdKTtcclxuXHRcdExheWFbXCJQaHlzaWNzXCJdICYmIExheWFbXCJQaHlzaWNzXCJdLmVuYWJsZSgpO1xyXG5cdFx0TGF5YVtcIkRlYnVnUGFuZWxcIl0gJiYgTGF5YVtcIkRlYnVnUGFuZWxcIl0uZW5hYmxlKCk7XHJcblx0XHRMYXlhLnN0YWdlLnNjYWxlTW9kZSA9IEdhbWVDb25maWcuc2NhbGVNb2RlO1xyXG5cdFx0TGF5YS5zdGFnZS5zY3JlZW5Nb2RlID0gR2FtZUNvbmZpZy5zY3JlZW5Nb2RlO1xyXG5cdFx0Ly/lhbzlrrnlvq7kv6HkuI3mlK/mjIHliqDovb1zY2VuZeWQjue8gOWcuuaZr1xyXG5cdFx0TGF5YS5VUkwuZXhwb3J0U2NlbmVUb0pzb24gPSBHYW1lQ29uZmlnLmV4cG9ydFNjZW5lVG9Kc29uO1xyXG5cclxuXHRcdC8v5omT5byA6LCD6K+V6Z2i5p2/77yI6YCa6L+HSURF6K6+572u6LCD6K+V5qih5byP77yM5oiW6ICFdXJs5Zyw5Z2A5aKe5YqgZGVidWc9dHJ1ZeWPguaVsO+8jOWdh+WPr+aJk+W8gOiwg+ivlemdouadv++8iVxyXG5cdFx0aWYgKEdhbWVDb25maWcuZGVidWcgfHwgTGF5YS5VdGlscy5nZXRRdWVyeVN0cmluZyhcImRlYnVnXCIpID09IFwidHJ1ZVwiKSBMYXlhLmVuYWJsZURlYnVnUGFuZWwoKTtcclxuXHRcdGlmIChHYW1lQ29uZmlnLnBoeXNpY3NEZWJ1ZyAmJiBMYXlhW1wiUGh5c2ljc0RlYnVnRHJhd1wiXSkgTGF5YVtcIlBoeXNpY3NEZWJ1Z0RyYXdcIl0uZW5hYmxlKCk7XHJcblx0XHRpZiAoR2FtZUNvbmZpZy5zdGF0KSBMYXlhLlN0YXQuc2hvdygpO1xyXG5cdFx0TGF5YS5hbGVydEdsb2JhbEVycm9yID0gdHJ1ZTtcclxuXHRcdFxyXG5cdFx0TXlJbml0LmluaXQoKTtcclxuXHJcblx0XHQvL+a/gOa0u+i1hOa6kOeJiOacrOaOp+WItu+8jHZlcnNpb24uanNvbueUsUlEReWPkeW4g+WKn+iDveiHquWKqOeUn+aIkO+8jOWmguaenOayoeacieS5n+S4jeW9seWTjeWQjue7rea1geeoi1xyXG5cdFx0Ly8gTGF5YS5SZXNvdXJjZVZlcnNpb24uZW5hYmxlKFwidmVyc2lvbi5qc29uXCIsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5vblZlcnNpb25Mb2FkZWQpLCBMYXlhLlJlc291cmNlVmVyc2lvbi5GSUxFTkFNRV9WRVJTSU9OKTtcclxuXHRcdHRoaXMub25WZXJzaW9uTG9hZGVkKCk7XHJcblx0fVxyXG5cclxuXHRvblZlcnNpb25Mb2FkZWQoKTogdm9pZCB7XHJcblx0XHQvL+a/gOa0u+Wkp+Wwj+WbvuaYoOWwhO+8jOWKoOi9veWwj+WbvueahOaXtuWAme+8jOWmguaenOWPkeeOsOWwj+WbvuWcqOWkp+WbvuWQiOmbhumHjOmdou+8jOWImeS8mOWFiOWKoOi9veWkp+WbvuWQiOmbhu+8jOiAjOS4jeaYr+Wwj+WbvlxyXG5cdFx0TGF5YS5BdGxhc0luZm9NYW5hZ2VyLmVuYWJsZShcImZpbGVjb25maWcuanNvblwiLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMub25Db25maWdMb2FkZWQpKTtcclxuXHR9XHJcblxyXG5cdG9uQ29uZmlnTG9hZGVkKCk6IHZvaWQge1xyXG5cdFx0Ly/liqDovb1JREXmjIflrprnmoTlnLrmma9cclxuXHRcdGxldCByZXM6IEFycmF5PGFueT4gPSBbXHJcblx0XHRcdHsgdXJsOiBcImNvbW1vbi9sb2FkaW5nLmF0bGFzXCIsIHR5cGU6IExheWEuTG9hZGVyLkFUTEFTIH0sXHJcblx0XHRdO1xyXG5cdFx0Ly9zdGFydFNjZW5lIOW6lOivpeiuvue9ruS4umxhdW5jaOmhtemdolxyXG5cdFx0TGF5YS5sb2FkZXIubG9hZChyZXMsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG5cdFx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSk7XHJcblx0XHR9KSk7XHJcblx0fVxyXG59XHJcbi8v5r+A5rS75ZCv5Yqo57G7XHJcbm5ldyBNYWluKCk7XHJcbiIsImltcG9ydCBDb25maWdEYXRhIGZyb20gXCIuL21vZGVscy9Db25maWdEYXRhXCI7XG5pbXBvcnQgSHR0cE1nciBmcm9tIFwiLi9tZ3JDb21tb24vSHR0cE1nclwiO1xuaW1wb3J0IFN0b3JhZ2VNZ3IgZnJvbSBcIi4vbWdyQ29tbW9uL1N0b3JhZ2VNZ3JcIjtcbmltcG9ydCBTdGF0aXN0aWNzTWdyIGZyb20gXCIuL21nckNvbW1vbi9TdGF0aXN0aWNzTWdyXCI7XG5pbXBvcnQgUGxhdGZvcm1NZ3IgZnJvbSBcIi4vbWdyQ29tbW9uL1BsYXRmb3JtTWdyXCI7XG5pbXBvcnQgVXNlckRhdGEgZnJvbSBcIi4vbW9kZWxzL1VzZXJEYXRhXCI7XG5pbXBvcnQgRXZlbnRNZ3IgZnJvbSBcIi4vbWdyQ29tbW9uL0V2ZW50TWdyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvZ2luIGV4dGVuZHMgTGF5YS5TY3JpcHR7XG5cdGxvZ2luKCkge1xuXHRcdEh0dHBNZ3IuaW5zdGFuY2UuZ2V0U3lzdGVtQ29uZmlnKCk7XG5cdFx0dGhpcy5sb2dpbkZ1bigpO1xuXHR9XG5cblx0bG9naW5GdW4oKSB7XG5cdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdGlmIChDb25maWdEYXRhLnJlbGVhc2VQbGF0Zm9ybSkge1xuXHRcdFx0UGxhdGZvcm1NZ3IucHRBUEkuZG9Mb2dpbih7XG5cdFx0XHRcdHN1Y2Nlc3M6TGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLHRoaXMubG9naW5TdWNjZXNzLG51bGwsdHJ1ZSksXG5cdFx0XHRcdGZhaWw6TGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLHRoaXMubG9naW5GdW4sbnVsbCx0cnVlKVxuXHRcdFx0fSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBfZDogYW55ID0ge31cblx0XHRcdF9kLmNvZGUgPSBcIjEyM1wiO1xuXHRcdFx0X2QuaW52aXRlSWQgPSAnJztcblx0XHRcdF9kLmNoYW5uZWxJZCA9IFwiXCI7XG5cdFx0XHRfZC5zdWNjZXNzID0gdGhpcy5sb2dpblN1Y2Nlc3M7XG5cdFx0XHRIdHRwTWdyLmluc3RhbmNlLmxvZ2luKF9kKVxuXHRcdH1cblx0fVxuXG5cdGxvZ2luU3VjY2VzcyhkYXRhKSB7XG5cdFx0aWYgKGRhdGEpIHtcblx0XHRcdFVzZXJEYXRhLmlzTG9naW4gPSB0cnVlO1xuXHRcdFx0VXNlckRhdGEudXNlcklkID0gZGF0YS51c2VySWQ7XG5cdFx0XHRVc2VyRGF0YS5uaWNrTmFtZSA9IGRhdGEubmlrZW5hbWU7XG5cdFx0XHRVc2VyRGF0YS5hdmF0YXJVcmwgPSBkYXRhLmhlYWRJbWFnZTtcblx0XHRcdFVzZXJEYXRhLmRpYW1vbmQgPSBkYXRhLnVzZXJNb25leTtcblx0XHRcdFVzZXJEYXRhLmNoYW5uZWxJZCA9IGRhdGEuY2hhbm5lbElkO1xuXHRcdFx0VXNlckRhdGEubGV2ZWwgPSBkYXRhLmxldmVsO1xuXHRcdFx0VXNlckRhdGEuc2NvcmUgPSBkYXRhLnNjb3JlO1xuXHRcdFx0VXNlckRhdGEub3BlbklkID0gZGF0YS5vcGVuaWQ7XG5cdFx0XHRVc2VyRGF0YS5pc05ldyA9IGRhdGEuaXNOZXdVc2VyO1xuXHRcdFx0VXNlckRhdGEuZXhwID0gZGF0YS5ub3dFeHA7XG5cdFx0XHQvL+e8k+WtmOeUqOaIt+S/oeaBr+WIsOacrOWcsFxuXHRcdFx0U3RvcmFnZU1nci5zYXZlVXNlckRhdGEoKTtcblx0XHRcdGlmKFBsYXRmb3JtTWdyLnB0QVBJKXtcblx0XHRcdFx0Ly/kuIrkvKDmjpLooYzmlbDmja5cblx0XHRcdFx0UGxhdGZvcm1NZ3IucHRBUEkudXBsb2FkUmFua0RhdGUoe1xuXHRcdFx0XHRcdGxldmVsOiBkYXRhLmxldmVsIHx8IDAsXG5cdFx0XHRcdFx0c2NvcmU6IGRhdGEuc2NvcmUgfHwgMCxcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0XHQvL+S4iuS8oOe7n+iuoVxuXHRcdFx0U3RhdGlzdGljc01nci5pbnN0YW5jZS5sb2dpblN0YXRpc3RpY3NQb3N0KCk7XG5cdFx0fVxuXHRcdC8vIEV2ZW50TWdyLmluc3RhbmNlLmVtaXQoXCJsb2dpblN1Y2Nlc3NcIik7XG5cdH1cblxufVxuXG4iLCJpbXBvcnQgUGxhdGZvcm1NZ3IgZnJvbSBcIi4vbWdyQ29tbW9uL1BsYXRmb3JtTWdyXCI7XHJcbmltcG9ydCBDb25maWdEYXRhIGZyb20gXCIuL21vZGVscy9Db25maWdEYXRhXCI7XHJcbmltcG9ydCBTdG9yYWdlTWdyIGZyb20gXCIuL21nckNvbW1vbi9TdG9yYWdlTWdyXCI7XHJcbmltcG9ydCBXWEFkTWdyIGZyb20gXCIuL3BsYXRmb3JtL3d4L1dYQURNZ3JcIjtcclxuaW1wb3J0IExvZ2luIGZyb20gXCIuL0xvZ2luXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNeUluaXQge1xyXG4gICAgc3RhdGljIGluaXQoKXtcclxuICAgICAgICBDb25maWdEYXRhLmluaXRMb2NhbCgpO1xyXG4gICAgICAgIFN0b3JhZ2VNZ3IuZ2V0TG9jYWxVc2VyRGF0YSgpO1xyXG4gICAgICAgIFBsYXRmb3JtTWdyLmluaXRQbGF0Zm9ybSgpO1xyXG5cclxuICAgICAgICBcclxuICAgICAgICBuZXcgTG9naW4oKS5sb2dpbigpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IEN1cnJHYW1lRGF0YSBmcm9tIFwiLi4vbW9kZWxzL0N1cnJHYW1lRGF0YVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZU1nciBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIHB1YmxpYyBzdGF0aWMgaW5zdGFuY2U6IEdhbWVNZ3IgPSBuZXcgR2FtZU1ncigpO1xyXG4gICAgcHJpdmF0ZSBfY3VyckdhbWVEYXRhOkN1cnJHYW1lRGF0YTtcclxuICAgIHByaXZhdGUgX2ZvZ0NvbG9yczpBcnJheTxMYXlhLlZlY3RvcjM+ID0gW107XHJcblxyXG4gICAgcHJpdmF0ZSBfc2NlbmUzZDpMYXlhLlNjZW5lM0Q7XHJcbiAgICAvL+aRhOWDj+aculxyXG4gICAgcHJpdmF0ZSBfY2FtZXJhOiBMYXlhLkNhbWVyYTtcclxuXHJcbiAgICBvbkF3YWtlKCl7XHJcbiAgICAgICAgdGhpcy5fY3VyckdhbWVEYXRhID0gbmV3IEN1cnJHYW1lRGF0YSgpO1xyXG4gICAgICAgIHRoaXMuX3NjZW5lM2QgPSB0aGlzLm93bmVyIGFzIExheWEuU2NlbmUzRDtcclxuICAgICAgICB0aGlzLl9jYW1lcmEgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiTWFpbiBDYW1lcmFcIikgYXMgTGF5YS5DYW1lcmE7XHJcbiAgICAgICAgLy8gdGhpcy5fY2FtZXJhLmZhclBsYW5lID0gMzM7IC8v5Y+v5Lul6ICD6JmR6L+Z5qC35o+Q6auY5oCn6IO9XHJcblxyXG4gICAgICAgIC8v5piv5ZCm6ZyA6KaB5byA5ZCv6Zu+XHJcbiAgICAgICAgLy8gdGhpcy5fc2NlbmUzZC5lbmFibGVGb2cgPSB0cnVlO1xyXG4gICAgICAgIC8vIC8v6K6+572u6Zu+5YyW55qE6aKc6ImyXHJcbiAgICAgICAgLy8gdGhpcy5fc2NlbmUzZC5mb2dDb2xvciA9IHRoaXMuX2ZvZ0NvbG9yc1swXTtcclxuICAgICAgICAvLyAvL+iuvue9rumbvuWMlueahOi1t+Wni+S9jee9ru+8jOebuOWvueS6juebuOacuueahOi3neemu1xyXG4gICAgICAgIC8vIHRoaXMuX3NjZW5lM2QuZm9nU3RhcnQgPSAxMDtcclxuICAgICAgICAvLyAvL+iuvue9rumbvuWMluacgOa1k+WkhOeahOi3neemu+OAglxyXG4gICAgICAgIC8vIHRoaXMuX3NjZW5lM2QuZm9nUmFuZ2UgPSAyMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZ2V0R2FtZURhdGEoKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY3VyckdhbWVEYXRhO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xyXG4gICAgfVxyXG5cclxuICAgIGluaXRHYW1lQnlEYXRhKF9kKXtcclxuICAgICAgICB0aGlzLl9jdXJyR2FtZURhdGEucmVzZXQoKTtcclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpOiB2b2lkIHtcclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICB9XHJcbn0iLCIvL+WFqOWxgOS6i+S7tlxuaW1wb3J0IEV2ZW50RGlzcGF0Y2hlciA9IGxheWEuZXZlbnRzLkV2ZW50RGlzcGF0Y2hlcjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEV2ZW50TWdyIGV4dGVuZHMgRXZlbnREaXNwYXRjaGVyIHtcbiAgICBzdGF0aWMgZXZlbnREaXNwYXRjaGVyOiBFdmVudERpc3BhdGNoZXIgPSBuZXcgRXZlbnREaXNwYXRjaGVyKCk7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBpbnN0YW5jZTogRXZlbnRNZ3IgPSBuZXcgRXZlbnRNZ3IoKTs7XG4gICAgcHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG4gICAgLy/mtL7lj5Hkuovku7ZcbiAgICBwdWJsaWMgZW1pdChJbk5hbWUsIGFndj86IGFueSkge1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIua0vuWPkeS6i+S7tlwiICsgSW5OYW1lLGFndik7XG4gICAgICAgIEV2ZW50TWdyLmV2ZW50RGlzcGF0Y2hlci5ldmVudChJbk5hbWUsIGFndik7XG4gICAgfVxuICAgIC8v5L6m5ZCs5LqL5Lu2XG4gICAgcHVibGljIG9uRXZlbnQoSW5OYW1lLCBjYWxsZXIsIGxpc3RlbmVyOiBGdW5jdGlvbiwgYXJnPzogYW55W10pOiB2b2lkIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCLkvqblkKzkuovku7ZcIixJbk5hbWUpO1xuICAgICAgICBFdmVudE1nci5ldmVudERpc3BhdGNoZXIub24oSW5OYW1lLCBjYWxsZXIsIGxpc3RlbmVyLCAoYXJnID09IG51bGwpID8gbnVsbCA6IChbYXJnXSkpO1xuICAgIH1cblxuICAgIC8v5L6m5ZCs5LqL5Lu2XG4gICAgcHVibGljIG9uT25jZUV2ZW50KEluTmFtZSwgY2FsbGVyLCBsaXN0ZW5lcjogRnVuY3Rpb24sIGFyZz86IGFueVtdKTogdm9pZCB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwi5L6m5ZCs5LqL5Lu2XCIsSW5OYW1lKTtcbiAgICAgICAgRXZlbnRNZ3IuZXZlbnREaXNwYXRjaGVyLm9uY2UoSW5OYW1lLCBjYWxsZXIsIGxpc3RlbmVyLCAoYXJnID09IG51bGwpID8gbnVsbCA6IChbYXJnXSkpO1xuICAgIH1cblxuICAgIC8v56e76Zmk5LqL5Lu2XG4gICAgcHVibGljIG9uT2ZmRXZlbnQoSW5OYW1lLCBjYWxsZXIsIGxpc3RlbmVyOiBGdW5jdGlvbiwgYXJnPzogYW55W10pOiB2b2lkIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCLlhbPpl63kuovku7ZcIixJbk5hbWUpO1xuICAgICAgICBFdmVudE1nci5ldmVudERpc3BhdGNoZXIub2ZmKEluTmFtZSwgY2FsbGVyLCBsaXN0ZW5lcik7XG4gICAgfVxufSIsImltcG9ydCBNeVV0aWxzIGZyb20gXCIuLi90b29scy9NeVV0aWxzXCI7XHJcbmltcG9ydCBTdG9yYWdlTWdyIGZyb20gXCIuL1N0b3JhZ2VNZ3JcIjtcclxuaW1wb3J0IENvbmZpZ0RhdGEgZnJvbSBcIi4uL21vZGVscy9Db25maWdEYXRhXCI7XHJcbmltcG9ydCBIdHRwVXRpbHMgZnJvbSBcIi4uL3Rvb2xzL0h0dHBVdGlsc1wiO1xyXG5pbXBvcnQgVXNlckRhdGEgZnJvbSBcIi4uL21vZGVscy9Vc2VyRGF0YVwiO1xyXG5pbXBvcnQgRXZlbnRNZ3IgZnJvbSBcIi4vRXZlbnRNZ3JcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEh0dHBNZ3Ige1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBpbnN0YW5jZTogSHR0cE1nciA9IG5ldyBIdHRwTWdyKCk7XHJcbiAgICBwcml2YXRlIF9odHRwOkh0dHBVdGlscyA9IG5ldyBIdHRwVXRpbHMoKTtcclxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XHJcbiAgICB9XHJcbiAgICAvL+eZu+mZhlxyXG4gICAgcHVibGljIGxvZ2luKF9kOmFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2h0dHAucmVxdWVzdCh7XHJcbiAgICAgICAgICAgIHVybDogJ3VzZXJMb2dpbi5hY3Rpb24nLCBkYXRhOiBfZCwgY2FsbGJhY2s6IChyZXMpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgVXNlckRhdGEuc2Vzc2lvbklkID0gcmVzLnNlc3Npb25JZDtcclxuICAgICAgICAgICAgICAgICAgICBTdG9yYWdlTWdyLnNhdmVTZXNzaW9uKFVzZXJEYXRhLnNlc3Npb25JZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoX2Quc3VjY2Vzcyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF9kLnN1Y2Nlc3MocmVzKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIHNlc3Npb25JZCDov4fmnJ9cclxuICAgICAgICAgICAgICAgICAgICBTdG9yYWdlTWdyLnNhdmVTZXNzaW9uKFwiXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIFVzZXJEYXRhLnNlc3Npb25JZCA9IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoX2QuZmFpbCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF9kLmZhaWwocmVzKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICAvL+W8gOWFs+mFjeWItlxyXG4gICAgcHVibGljIGdldFN5c3RlbUNvbmZpZygpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9odHRwLnJlcXVlc3Qoe1xyXG5cdFx0XHR1cmw6ICdnZXRTeXN0ZW1QYXJhbUxpc3QuYWN0aW9uJywgZGF0YTogeyBub3dWZXJzaW9uOiBDb25maWdEYXRhLnZlcnNpb24gfSwgY2FsbGJhY2s6IChyZXMpID0+IHtcclxuXHRcdFx0XHRpZiAocmVzLmNvZGUgPT0gMCkge1xyXG5cdFx0XHRcdFx0Q29uZmlnRGF0YS5jdHJsSW5mbyA9IHtcclxuXHRcdFx0XHRcdFx0aXNDb252ZXJnZTogcmVzLmlzQ29udmVyZ2UsIC8v6IGa5ZCI5byA5YWzXHJcblx0XHRcdFx0XHRcdGlzU2hhcmU6IHJlcy5pc1NoYXJlLFxyXG5cdFx0XHRcdFx0XHRpc1ZpZGVvOiByZXMuaXNWaWRlbyxcclxuXHRcdFx0XHRcdFx0aXNXdWRpYW46cmVzLmlzV3VkaWFuLCAvL+ivr+eCueW8gOWFs1xyXG5cdFx0XHRcdFx0XHRzaGFyZUluZm86IHJlcy5zaGFyZUluZm8sXHJcblx0XHRcdFx0XHRcdGlzQmFubmVyOnJlcy5pc19iYW5uZXIsLy9iYW5uZXLlub/lkYrmjqfliLZcclxuXHRcdFx0XHRcdFx0YWRJbmZvOiByZXMuYWRJbmZvLFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHRcdFx0XHR9XHJcbiAgICAgICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5lbWl0KFwiZ2V0U3lzdGVtUGFyYW1MaXN0QmFja1wiKTtcclxuXHRcdFx0fSxmYWlsOihyZXMpPT57XHJcbiAgICAgICAgICAgICAgICBFdmVudE1nci5pbnN0YW5jZS5lbWl0KFwiZ2V0U3lzdGVtUGFyYW1MaXN0QmFja1wiKTtcclxuICAgICAgICAgICAgfVxyXG5cdFx0fSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHVwZGF0ZVVzZXJJbmZvKCl7XHJcbiAgICAgICAgdGhpcy5faHR0cC5yZXF1ZXN0KHtcclxuICAgICAgICAgICAgdXJsOiAndXBkYXRlVXNlckluZm8uYWN0aW9uJywgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgbmlja25hbWU6VXNlckRhdGEubmlja05hbWUsXHJcbiAgICAgICAgICAgICAgICBoZWFkaW1ndXJsOlVzZXJEYXRhLmF2YXRhclVybCxcclxuICAgICAgICAgICAgICAgIHNleDpVc2VyRGF0YS5nZW5kZXIsXHJcbiAgICAgICAgICAgIH19KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGlzdGljc1Bvc3QoX2Qpe1xyXG4gICAgICAgIHRoaXMuX2h0dHAucmVxdWVzdFN0YXRpc3RpY3MoX2QpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB2aWRlb0Vycm9yQ2FsbGJhY2soKXtcclxuICAgICAgICB0aGlzLl9odHRwLnJlcXVlc3Qoe1xyXG4gICAgICAgICAgICB1cmw6ICd2aWRlb0NhbGxiYWNrLmFjdGlvbicsIGNhbGxiYWNrOiAocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZihyZXMuY29kZSA9PSAwKXtcclxuICAgICAgICAgICAgICAgICAgICBVc2VyRGF0YS5hZENvdW50ID0gcmVzLmFkQ291bnQ7ICAgIFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIH19KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0V29ybGRSYW5rKF9kKXtcclxuICAgICAgICB0aGlzLl9odHRwLnJlcXVlc3Qoe1xyXG4gICAgICAgICAgICB1cmw6ICdnZXRXb3JsZFJhbmsuYWN0aW9uJyxkYXRhOiB7IHBhZ2U6IDEsIHR5cGU6IDEgfSwgY2FsbGJhY2s6IChyZXMpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmKHJlcy5jb2RlID09IDApe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKF9kLnN1Y2Nlc3Mpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBfZC5zdWNjZXNzKHJlcylcclxuICAgICAgICAgICAgICAgICAgICB9ICAgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgfX0pO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IENvbmZpZ0RhdGEgZnJvbSBcIi4uL21vZGVscy9Db25maWdEYXRhXCI7XHJcbmltcG9ydCBXWEFQSSBmcm9tIFwiLi4vcGxhdGZvcm0vd3gvV1hBUElcIjtcclxuaW1wb3J0IEZCQVBJIGZyb20gXCIuLi9wbGF0Zm9ybS9mYi9GQkFQSVwiO1xyXG5pbXBvcnQgV1hBZE1nciBmcm9tIFwiLi4vcGxhdGZvcm0vd3gvV1hBRE1nclwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxhdGZvcm1NZ3IgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IGluc3RhbmNlOiBQbGF0Zm9ybU1nciA9IG5ldyBQbGF0Zm9ybU1ncigpO1xyXG4gICAgcHVibGljIHN0YXRpYyBwdEFQSTtcclxuICAgIHB1YmxpYyBzdGF0aWMgcHRBZE1ncjtcclxuXHJcblxyXG4gICAgcHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBpbml0UGxhdGZvcm0oKXtcclxuICAgICAgICBzd2l0Y2goQ29uZmlnRGF0YS5yZWxlYXNlUGxhdGZvcm0pe1xyXG4gICAgICAgICAgICBjYXNlIFwid3hcIjpcclxuICAgICAgICAgICAgICAgIFBsYXRmb3JtTWdyLnB0QVBJID0gbmV3IFdYQVBJKCk7XHJcbiAgICAgICAgICAgICAgICBQbGF0Zm9ybU1nci5wdEFkTWdyID0gbmV3IFdYQWRNZ3I7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImZiXCI6XHJcbiAgICAgICAgICAgICAgICAvL25ldyBmYueahOeuoeeQhuexu1xyXG4gICAgICAgICAgICAgICAgLy8gdGhpcy5wdEFQSSA9IG5ldyBGQkFQSSgpO1xyXG4gICAgICAgICAgICAgICAgLy8gdGhpcy5wdEFkTWdyID0gbmV3IEZCQWRNZ3I7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgQ29uZmlnRGF0YSBmcm9tIFwiLi4vbW9kZWxzL0NvbmZpZ0RhdGFcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU291bmRNZ3Ige1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgaW5zdGFuY2U6IFNvdW5kTWdyID0gbmV3IFNvdW5kTWdyKCk7XG4gICAgcHJpdmF0ZSBiZ206YW55O1xuICAgIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XG4gICAgfVxuXG4gICAgcHVibGljIHBsYXlTb3VuZChuYW1lOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgaWYgKCFDb25maWdEYXRhLmlzU291bmQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgdXJsID0gXCJyZXMvc291bmQvXCIgKyBuYW1lICsgXCIubXAzXCI7XG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xuICAgICAgICAgICAgdmFyIHNvdW5kID0gbGF5YS51dGlscy5Qb29sLmdldEl0ZW0obmFtZSk7XG4gICAgICAgICAgICBpZiAoc291bmQgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHNvdW5kID0gd3guY3JlYXRlSW5uZXJBdWRpb0NvbnRleHQoKTtcbiAgICAgICAgICAgICAgICBzb3VuZC5zcmMgPSBcInJlcy9zb3VuZC9cIiArIG5hbWUgKyBcIi5tcDNcIjtcbiAgICAgICAgICAgICAgICBzb3VuZC5vbkVuZGVkKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgbGF5YS51dGlscy5Qb29sLnJlY292ZXIobmFtZSwgc291bmQpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzb3VuZC5wbGF5KCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBMYXlhLlNvdW5kTWFuYWdlci5wbGF5U291bmQodXJsLCAxKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBwbGF5QkdNKCl7XG4gICAgICAgIGlmICghQ29uZmlnRGF0YS5pc1NvdW5kKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHVybCA9IFwicmVzL3NvdW5kL2JnbS5tcDNcIjtcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XG4gICAgICAgICAgICB0aGlzLmJnbSA9IHd4LmNyZWF0ZUlubmVyQXVkaW9Db250ZXh0KCk7XG4gICAgICAgICAgICB0aGlzLmJnbS5zcmMgPSB1cmw7XG4gICAgICAgICAgICB0aGlzLmJnbS5sb29wID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuYmdtLnBsYXkoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIExheWEuU291bmRNYW5hZ2VyLnBsYXlNdXNpYyh1cmwsIDApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHN0b3BCR00oKXtcbiAgICAgICAgbGV0IHVybCA9IFwicmVzL3NvdW5kL2JnbS5tcDNcIjtcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XG4gICAgICAgICAgICBpZih0aGlzLmJnbSl7XG4gICAgICAgICAgICAgICAgdGhpcy5iZ20uc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIExheWEuU291bmRNYW5hZ2VyLnN0b3BNdXNpYygpO1xuICAgICAgICB9XG4gICAgfVxuXG5cblxufSIsImltcG9ydCBIdHRwTWdyIGZyb20gXCIuL0h0dHBNZ3JcIjtcclxuaW1wb3J0IFVzZXJEYXRhIGZyb20gXCIuLi9tb2RlbHMvVXNlckRhdGFcIjtcclxuaW1wb3J0IENvbmZpZ0RhdGEgZnJvbSBcIi4uL21vZGVscy9Db25maWdEYXRhXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdGF0aXN0aWNzTWdyIHtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgaW5zdGFuY2U6IFN0YXRpc3RpY3NNZ3IgPSBuZXcgU3RhdGlzdGljc01ncigpO1xyXG4gICAgcHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHtcclxuICAgIH1cclxuIFxyXG4gICAgLy/nmbvpmYbnu5/orqFcclxuICAgIHB1YmxpYyBsb2dpblN0YXRpc3RpY3NQb3N0KCl7XHJcbiAgICAgICAgdmFyIF9kOmFueSA9IHtcclxuICAgICAgICAgICAgYWN0aW9uOlwiMTAwNVwiLFxyXG4gICAgICAgICAgICBmcm9tX2FwcGlkOlVzZXJEYXRhLmZyb21BcHBpZCxcclxuICAgICAgICAgICAgZnJvbV9pbWdpZDpVc2VyRGF0YS5mcm9tSW1naWQsXHJcbiAgICAgICAgICAgIGNvZGU6VXNlckRhdGEuY29kZSxcclxuICAgICAgICAgICAgaXNuZXc6VXNlckRhdGEuaXNOZXcgPyAxIDogMCxcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zdGF0aXN0aWNzUG9zdChfZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy/ngrnlh7vmjojmnYPnu5/orqHmjqXlj6NcclxuICAgIHB1YmxpYyBhdXRob3JTdGF0aXN0aWNzKCkge1xyXG4gICAgICAgIHZhciBfZDogYW55ID0ge1xyXG4gICAgICAgICAgICBhY3Rpb246IFwiMTAwNlwiLFxyXG4gICAgICAgICAgICBmcm9tX2FwcGlkOlVzZXJEYXRhLmZyb21BcHBpZCxcclxuICAgICAgICAgICAgZnJvbV9pbWdpZDpVc2VyRGF0YS5mcm9tSW1naWQsXHJcbiAgICAgICAgICAgIGNvZGU6VXNlckRhdGEuY29kZSxcclxuICAgICAgICAgICAgaXNuZXc6VXNlckRhdGEuaXNOZXcgPyAxIDogMCxcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zdGF0aXN0aWNzUG9zdChfZCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8v5byA5aeL5ri45oiP57uf6K6h5o6l5Y+jXHJcbiAgICBwdWJsaWMgc3RhcnRHYW1lU3RhdGlzdGljcygpIHtcclxuICAgICAgICB2YXIgX2Q6IGFueSA9IHtcclxuICAgICAgICAgICAgYWN0aW9uOiBcIjEwMDhcIixcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zdGF0aXN0aWNzUG9zdChfZCk7XHJcbiAgICB9XHJcbiAgICAgICBcclxuICAgIC8v5YiG5Lqr57uf6K6h5o6l5Y+jICDnsbvlnos6IDDmma7pgJrliIbkuqssIDHliIbkuqvlpI3mtLssIDLliIbkuqvojrflj5bpgZPlhbcsIDPliIbkuqvojrflj5bmir3lpZbmrKHmlbBcclxuICAgIHB1YmxpYyBzaGFyZVN0YXRpc3RpY3ModHlwZTogbnVtYmVyKSB7XHJcbiAgICAgICAgdmFyIF9kOiBhbnkgPSB7XHJcbiAgICAgICAgICAgIGFjdGlvbjogXCIxMDA5XCIsXHJcbiAgICAgICAgICAgIHR5cGU6IHR5cGUsXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc3RhdGlzdGljc1Bvc3QoX2QpO1xyXG4gICAgfVxyXG5cclxuICAgIC8v54K55Ye76KeG6aKR57uf6K6h5o6l5Y+jXHJcbiAgICBwdWJsaWMgY2xpY2tWaWRlb1N0YXRpc3RpY3ModHlwZTogbnVtYmVyKSB7XHJcbiAgICAgICAgdmFyIF9kOiBhbnkgPSB7XHJcbiAgICAgICAgICAgIGFjdGlvbjogXCIxMDEwXCIsXHJcbiAgICAgICAgICAgIHR5cGU6IHR5cGUsXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc3RhdGlzdGljc1Bvc3QoX2QpO1xyXG4gICAgfVxyXG5cclxuICAgIC8v55yL5a6M6KeG6aKR57uf6K6h5o6l5Y+jXHJcbiAgICBwdWJsaWMgdmlkZW9QbGF5T3ZlckFkU3RhdGlzdGljcyh0eXBlOiBudW1iZXIpIHtcclxuICAgICAgICB2YXIgX2Q6IGFueSA9IHtcclxuICAgICAgICAgICAgYWN0aW9uOiBcIjEwMTFcIixcclxuICAgICAgICAgICAgdHlwZTogdHlwZSxcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zdGF0aXN0aWNzUG9zdChfZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy/ngrnlh7vot7Povaznu5/orqHmjqXlj6NcclxuICAgIHB1YmxpYyBuYXZpZ2F0ZVRvTWluaVByb2dyYW1TdGF0aXN0aWNzKF9kKSB7XHJcbiAgICAgICAgX2QuYWN0aW9uID0gXCIxMDA3XCI7XHJcbiAgICAgICAgdGhpcy5zdGF0aXN0aWNzUG9zdChfZCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy/ngrnlh7vot7PovazmiJDlip/lkI7nu5/orqHmjqXlj6NcclxuICAgIHB1YmxpYyBuYXZpZ2F0ZVRvTWluaVByb2dyYW1CYWNrU3RhdGlzdGljcyhfZCkge1xyXG4gICAgICAgIF9kLmFjdGlvbiA9IFwiMTAxN1wiO1xyXG4gICAgICAgIHRoaXMuc3RhdGlzdGljc1Bvc3QoX2QpO1xyXG4gICAgfVxyXG5cclxuICAgIC8v57uf6K6hXHJcbiAgICBwcml2YXRlIHN0YXRpc3RpY3NQb3N0KF9kYXRhOmFueSl7XHJcbiAgICAgICAgbGV0IF9kOiBhbnkgPSB7XHJcbiAgICAgICAgICAgIGNoYW5uZWw6IFVzZXJEYXRhLmNoYW5uZWxJZCxcclxuICAgICAgICAgICAgbXlfYXBwaWQ6IENvbmZpZ0RhdGEubXlBcHBpZCxcclxuICAgICAgICAgICAgb3BlbmlkOiBVc2VyRGF0YS5vcGVuSWQsXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIF9kYXRhKSB7XHJcbiAgICAgICAgICAgIGlmIChfZGF0YS5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgICAgICAgICBfZFtrZXldID0gX2RhdGFba2V5XTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBIdHRwTWdyLmluc3RhbmNlLnN0YXRpc3RpY3NQb3N0KF9kKTtcclxuICAgIH1cclxufSIsImltcG9ydCBNeVV0aWxzIGZyb20gXCIuLi90b29scy9NeVV0aWxzXCI7XHJcbmltcG9ydCBVc2VyRGF0YSBmcm9tIFwiLi4vbW9kZWxzL1VzZXJEYXRhXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdG9yYWdlTWdyIHtcclxuICAgIFxyXG4gICAgc3RhdGljIHNldFN0b3JhZ2UoX2QpIHtcclxuICAgICAgICBpZiAoIUxheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgd3guc2V0U3RvcmFnZSh7XHJcbiAgICAgICAgICAgIGtleTogX2Qua2V5LFxyXG4gICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShfZC52YWwpLFxyXG4gICAgICAgICAgICBzdWNjZXNzOiBfZC5zdWNjZXNzLFxyXG4gICAgICAgICAgICBmYWlsOiBfZC5mYWlsLFxyXG4gICAgICAgICAgICBjb21wbGV0ZTogX2QuY29tcGxldGVcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0U3RvcmFnZShfa2V5KTogYW55IHtcclxuICAgICAgICBpZiAoIUxheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgdmFyIHZhbHVlID0gd3guZ2V0U3RvcmFnZVN5bmMoX2tleSk7XHJcbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgc2F2ZVNlc3Npb24oX3Mpe1xyXG4gICAgICAgIFN0b3JhZ2VNZ3Iuc2V0U3RvcmFnZSh7a2V5Olwic2Vzc2lvbklkXCIsdmFsOl9zfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXRMb2NhbFZpcmJvcnQoKXtcclxuICAgICAgICByZXR1cm4gTXlVdGlscy5pc051bGwoU3RvcmFnZU1nci5nZXRTdG9yYWdlKFwidmlyYm9ydFwiKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBzZXRMb2NhbFZpcmJvcnQoc3RyOnN0cmluZyl7XHJcbiAgICAgICAgU3RvcmFnZU1nci5zZXRTdG9yYWdlKHtcclxuICAgICAgICAgICAga2V0OlwidmlyYm9ydFwiLCBcclxuICAgICAgICAgICAgdmFsOnN0clxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0TG9jYWxTb3VuZCgpe1xyXG4gICAgICAgIHJldHVybiBNeVV0aWxzLmlzTnVsbChTdG9yYWdlTWdyLmdldFN0b3JhZ2UoXCJzb3VuZFwiKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBzZXRMb2NhbFNvdW5kKHN0cjpzdHJpbmcpe1xyXG4gICAgICAgIFN0b3JhZ2VNZ3Iuc2V0U3RvcmFnZSh7XHJcbiAgICAgICAgICAgIGtldDpcInNvdW5kXCIsIFxyXG4gICAgICAgICAgICB2YWw6c3RyXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgXHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBzYXZlVXNlckRhdGEoKXtcclxuICAgICAgICBsZXQgX2QgPSB7XHJcbiAgICAgICAgICAgIHNlc3Npb25JZDpVc2VyRGF0YS5zZXNzaW9uSWQsXHJcbiAgICAgICAgICAgIG9wZW5JZDpVc2VyRGF0YS5vcGVuSWQsXHJcbiAgICAgICAgICAgIHNjb3JlOlVzZXJEYXRhLnNjb3JlLFxyXG4gICAgICAgICAgICBleHA6VXNlckRhdGEuZXhwLFxyXG4gICAgICAgICAgICBsZXZlbDpVc2VyRGF0YS5sZXZlbCxcclxuICAgICAgICB9XHJcbiAgICAgICAgU3RvcmFnZU1nci5zZXRTdG9yYWdlKHtrZXk6XCJ1c2VyRGF0YVwiLHZhbDpfZH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0TG9jYWxVc2VyRGF0YSgpe1xyXG4gICAgICAgIGlmKFVzZXJEYXRhLmlzTG9naW4pe1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBfZCA9IFN0b3JhZ2VNZ3IuZ2V0U3RvcmFnZShcInVzZXJEYXRhXCIpO1xyXG4gICAgICAgIGlmKCFNeVV0aWxzLmlzTnVsbChfZCkpe1xyXG4gICAgICAgICAgICBfZCA9IEpTT04ucGFyc2UoX2QpO1xyXG4gICAgICAgICAgICBVc2VyRGF0YS5zZXNzaW9uSWQgPSBfZC5zZXNzaW9uSWQ7XHJcbiAgICAgICAgICAgIFVzZXJEYXRhLm9wZW5JZCA9IF9kLm9wZW5JZDtcclxuICAgICAgICAgICAgVXNlckRhdGEuc2NvcmUgPSBfZC5zY29yZTtcclxuICAgICAgICAgICAgVXNlckRhdGEuZXhwID0gX2QuZXhwO1xyXG4gICAgICAgICAgICBVc2VyRGF0YS5sZXZlbCA9IF9kLmxldmVsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImltcG9ydCBNeVV0aWxzIGZyb20gXCIuLi90b29scy9NeVV0aWxzXCI7XG5pbXBvcnQgQmFzZVZpZXcgZnJvbSBcIi4uL3ZpZXdzL0Jhc2VWaWV3XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZpZXdNZ3Ige1xuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgaW5zdGFuY2U6IFZpZXdNZ3IgPSBuZXcgVmlld01ncigpO1xuICAgIGNvbnN0cnVjdG9yKCkgeyB9XG4gICAgcHJpdmF0ZSB2aWV3RGljOiBhbnkgPSB7fTtcblxuICAgIHB1YmxpYyBvcGVuVmlldyhfZCk6IHZvaWQge1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIGxldCB1cmwgPSBfZC52aWV3TmFtZTtcbiAgICAgICAgbGV0IGNscyA9IF9kLmNscztcbiAgICAgICAgbGV0IGNsb3NlQWxsID0gX2QuY2xvc2VBbGw7XG4gICAgICAgIGlmIChjbG9zZUFsbCkge1xuICAgICAgICAgICAgdGhpcy52aWV3RGljID0ge307XG4gICAgICAgIH1cbiAgICAgICAgaWYgKE15VXRpbHMuaXNOdWxsKHRoaXMudmlld0RpY1t1cmxdKSkge1xuICAgICAgICAgICAgTGF5YS5TY2VuZS5vcGVuKHVybCwgY2xvc2VBbGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKG93bmVyOiBMYXlhLlNjZW5lKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFNeVV0aWxzLmlzTnVsbChjbHMpKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBjb21wb25lbnQ6IEJhc2VWaWV3ID0gb3duZXIuZ2V0Q29tcG9uZW50KGNscykgYXMgQmFzZVZpZXc7XG4gICAgICAgICAgICAgICAgICAgIGNvbXBvbmVudC5vcGVuVmlldyhfZC5kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi52aWV3RGljW3VybF0gPSBjb21wb25lbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IGNvbXBvbmVudDogQmFzZVZpZXcgPSB0aGlzLnZpZXdEaWNbdXJsXSBhcyBCYXNlVmlldztcbiAgICAgICAgICAgIGNvbXBvbmVudC5vcGVuVmlldyhfZC5kYXRhKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBjbG9zZVZpZXcodmlld05hbWU6IHN0cmluZykge1xuICAgICAgICBpZiAoTXlVdGlscy5pc051bGwodGhpcy52aWV3RGljW3ZpZXdOYW1lXSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgc2NlbmU6IEJhc2VWaWV3ID0gdGhpcy52aWV3RGljW3ZpZXdOYW1lXSBhcyBCYXNlVmlldztcbiAgICAgICAgc2NlbmUub3duZXIuZGVzdHJveSgpO1xuICAgICAgICBzY2VuZS5kZXN0cm95KCk7XG4gICAgICAgIHRoaXMudmlld0RpY1t2aWV3TmFtZV0gPSBudWxsO1xuICAgIH1cblxuICAgIHB1YmxpYyBoaWRlVmlldyh2aWV3TmFtZTogc3RyaW5nKSB7XG4gICAgICAgIGlmIChNeVV0aWxzLmlzTnVsbCh0aGlzLnZpZXdEaWNbdmlld05hbWVdKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBzY2VuZTogQmFzZVZpZXcgPSB0aGlzLnZpZXdEaWNbdmlld05hbWVdIGFzIEJhc2VWaWV3O1xuICAgICAgICBzY2VuZS5vd25lci5hY3RpdmUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0Vmlldyh2aWV3TmFtZTogc3RyaW5nKXtcbiAgICAgICAgbGV0IHZpZXc6QmFzZVZpZXcgPSB0aGlzLnZpZXdEaWNbdmlld05hbWVdO1xuICAgICAgICBpZiAoIU15VXRpbHMuaXNOdWxsKHZpZXcpKSB7XG4gICAgICAgICAgICByZXR1cm4gdmlldztcbiAgICAgICAgfVxuICAgIH1cblxufSIsImltcG9ydCBNeVV0aWxzIGZyb20gXCIuLi90b29scy9NeVV0aWxzXCI7XG5pbXBvcnQgU3RvcmFnZU1nciBmcm9tIFwiLi4vbWdyQ29tbW9uL1N0b3JhZ2VNZ3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29uZmlnRGF0YSB7XG4gICAgcHVibGljIHN0YXRpYyByZWxlYXNlUGxhdGZvcm0gPSBcIlwiOy8v5Y+R5biD5bmz5Y+wIHd4IGZiXG4gICAgcHVibGljIHN0YXRpYyBteUFwcGlkID0gXCJ3eGJlOWZlMDAyODE1MDUxNjlcIjtcbiAgICBwdWJsaWMgc3RhdGljIGNvbmZpZ3M6IGFueSA9IG51bGw7XG4gICAgcHVibGljIHN0YXRpYyBsYW5ndWFnZTpzdHJpbmcgPSBcImNuXCI7XG4gICAgcHVibGljIHN0YXRpYyBsYW5ndWFnZURhdGE6IGFueSA9IG51bGw7XG5cbiAgICBwdWJsaWMgc3RhdGljIHZlcnNpb24gPSBcIjEwMFwiO1xuICAgIHB1YmxpYyBzdGF0aWMganNvblZlcnNpb24gPSBcIjEwMFwiO1xuICAgIHB1YmxpYyBzdGF0aWMgc2VydmVyVXJsOiBzdHJpbmcgPSBcImh0dHBzOi8veGN4LmJpYW9jci5jb20vZnVubnlfZnJvZy9cIjtcbiAgICBwdWJsaWMgc3RhdGljIGpzb25WZXJzaW9uVXJsOiBzdHJpbmcgPSBcImh0dHBzOi8vcC5kb2d1YW5lLmNuLzIwMTkwNDA0L21fMDQxNzE5MjYzNTIzMjEuanNvblwiO1xuICAgIHB1YmxpYyBzdGF0aWMgc3RhdGlzdGljc1VybDpzdHJpbmcgPSBcImh0dHBzOi8vbG9nLnp1YW5jci5jb20vXCJcblxuICAgIHB1YmxpYyBzdGF0aWMgaXNDcmVhdGVBdXRob3JpemF0aW9uOmJvb2xlYW4gPSBmYWxzZTsgLy/mmK/lkKbliJvlu7rkuobmjojmnYPmjInpkq5cbiAgICBwdWJsaWMgc3RhdGljIHJlcGVhdEF1dGhvcml6YXRpb246Ym9vbGVhbiA9IGZhbHNlOyAvL+aYr+WQpuWIm+W7uuS6huaOiOadg+aMiemSrlxuICAgIHB1YmxpYyBzdGF0aWMgaXNMb2c6IGJvb2xlYW4gPSB0cnVlOyAvL+aYr+WQpuW8gOWQr+aXpeW/l1xuICAgIHB1YmxpYyBzdGF0aWMgaXNTb3VuZDogYm9vbGVhbjtcbiAgICBwdWJsaWMgc3RhdGljIGlzVmlyYm9ydDogYm9vbGVhbjtcbiAgICBwdWJsaWMgc3RhdGljIGN0cmxJbmZvOiBhbnkgPSB7fTsvL+a4uOaIj+aOp+WItuS/oeaBr1xuICAgIHB1YmxpYyBzdGF0aWMgc3lzdGVtSW5mbzogYW55ID0ge307Ly/orr7lpIfns7vnu5/kv6Hmga9cblxuICAgIHB1YmxpYyBzdGF0aWMgYmFubmVyVmlkZW9JZDpzdHJpbmcgPSBcImFkdW5pdC03YzQ0NDlmOWY2ZmNhZmJiXCI7XG4gICAgcHVibGljIHN0YXRpYyByZXdhcmRlZFZpZGVvSWQ6c3RyaW5nID0gXCJhZHVuaXQtZGYwMzExMTE4ZTI0NTJjNlwiO1xuXG4gICAgcHVibGljIHN0YXRpYyBpbml0TG9jYWwoKXtcbiAgICAgICAgQ29uZmlnRGF0YS5pc1NvdW5kID0gU3RvcmFnZU1nci5nZXRMb2NhbFNvdW5kKCk7XG4gICAgICAgIENvbmZpZ0RhdGEuaXNWaXJib3J0ID0gU3RvcmFnZU1nci5nZXRMb2NhbFZpcmJvcnQoKTtcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XG4gICAgICAgICAgICB0aGlzLnJlbGVhc2VQbGF0Zm9ybSA9IFwid3hcIjtcbiAgICAgICAgICAgIHRoaXMuc3lzdGVtSW5mbyA9IHd4LmdldFN5c3RlbUluZm9TeW5jKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGluaXRDb25maWdEYXRhKF9kOmFueSxyZW1vdGU6Ym9vbGVhbiA9IGZhbHNlKXtcbiAgICAgICAgaWYocmVtb3RlKXtcbiAgICAgICAgICAgIENvbmZpZ0RhdGEuY29uZmlncyA9IF9kO1xuICAgICAgICB9ZWxzZSBpZighQ29uZmlnRGF0YS5jb25maWdzKXtcbiAgICAgICAgICAgIENvbmZpZ0RhdGEuY29uZmlncyA9IF9kO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBnZXRDb25maWdEYXRhKGNvbmZpZ05hbWU6IHN0cmluZyk6IGFueSB7XG4gICAgICAgIHJldHVybiB0aGlzLmN0cmxJbmZvW2NvbmZpZ05hbWVdO1xuICAgIH1cblxuICAgIC8qKuiuvue9ruWjsOmfsyAqL1xuICAgIHN0YXRpYyBzZXRTb3VuZChzdHIpIHtcbiAgICAgICAgaWYgKCFzdHIgfHwgc3RyLmxlbmd0aCA8PSAwKSB7XG4gICAgICAgICAgICBDb25maWdEYXRhLmlzU291bmQgPSB0cnVlO1xuICAgICAgICAgICAgU3RvcmFnZU1nci5zZXRMb2NhbFNvdW5kKFwiXCIpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBTdG9yYWdlTWdyLnNldExvY2FsU291bmQoXCIxXCIpO1xuICAgICAgICAgICAgQ29uZmlnRGF0YS5pc1NvdW5kID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDmjK/liqjorr7nva5cbiAgICAgKiBAcGFyYW0gc3RyIFxuICAgICAqL1xuICAgIHN0YXRpYyBzZXRWaXJib3J0KHN0cikge1xuICAgICAgICBpZiAoIXN0ciB8fCBzdHIubGVuZ3RoIDw9IDApIHtcbiAgICAgICAgICAgIENvbmZpZ0RhdGEuaXNWaXJib3J0ID0gdHJ1ZTtcbiAgICAgICAgICAgIFN0b3JhZ2VNZ3Iuc2V0TG9jYWxWaXJib3J0KFwiXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgU3RvcmFnZU1nci5zZXRMb2NhbFZpcmJvcnQoXCIxXCIpO1xuICAgICAgICAgICAgQ29uZmlnRGF0YS5pc1ZpcmJvcnQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0QUREYXRhKGFkSWQpIHtcbiAgICAgICAgbGV0IHNydCA9IHRoaXMuZ2V0Q29uZmlnRGF0YShcImFkSW5mb1wiKTtcbiAgICAgICAgaWYoTXlVdGlscy5pc051bGwoc3J0KSl7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGFkSW5mb3MgPSBKU09OLnBhcnNlKHNydCk7XG4gICAgICAgIGxldCBhcnJheSA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFkSW5mb3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGxldCBhZEluZm8gPSBhZEluZm9zW2ldO1xuICAgICAgICAgICAgaWYgKGFkSW5mby5wb3NpdGlvbiA9PSBhZElkKSB7XG4gICAgICAgICAgICAgICAgYXJyYXkucHVzaChhZEluZm8pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhcnJheTtcbiAgICB9XG59IiwiLy/lvZPliY3muLjmiI/nmoTmlbDmja5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEN1cnJHYW1lRGF0YXtcbiAgICBcbiAgICBwdWJsaWMgc2NvcmU6bnVtYmVyID0gMDsvL+WIhuaVsFxuIFxuICAgIHB1YmxpYyByZXNldCgpIHtcbiAgICAgICAgdGhpcy5zY29yZSA9IDA7XG4gICAgfVxufSIsImltcG9ydCBNeVV0aWxzIGZyb20gXCIuLi90b29scy9NeVV0aWxzXCI7XG5pbXBvcnQgU3RvcmFnZU1nciBmcm9tIFwiLi4vbWdyQ29tbW9uL1N0b3JhZ2VNZ3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckRhdGEge1xuICAgIHB1YmxpYyBzdGF0aWMgY29kZTogc3RyaW5nID0gXCJcIjsvL+W+ruS/oWNvZGVcbiAgICBwdWJsaWMgc3RhdGljIG9wZW5JZDogc3RyaW5nID0gXCJcIjsvL+W+ruS/oW9wZW5pZFxuICAgIHB1YmxpYyBzdGF0aWMgc2Vzc2lvbklkOiBzdHJpbmcgPSBcIlwiO1xuXG4gICAgcHVibGljIHN0YXRpYyB1c2VySWQ6IGFueTtcbiAgICBwdWJsaWMgc3RhdGljIG5pY2tOYW1lOiBzdHJpbmcgPSBcIlwiO1xuICAgIHB1YmxpYyBzdGF0aWMgZ2VuZGVyOm51bWJlciA9IDA7XG4gICAgcHVibGljIHN0YXRpYyBhdmF0YXJVcmw6IHN0cmluZyA9IFwiXCI7XG4gICAgcHVibGljIHN0YXRpYyBzY29yZTogbnVtYmVyID0gMDsgLy/liIbmlbBcbiAgICBwdWJsaWMgc3RhdGljIGV4cDogbnVtYmVyID0gMDsgICAvL+e7j+mqjFxuICAgIHB1YmxpYyBzdGF0aWMgbGV2ZWw6IG51bWJlciA9IDE7IC8v562J57qnXG4gICAgcHVibGljIHN0YXRpYyBpbmRleDogbnVtYmVyID0gMDsgLy/mjpLooYxcblxuICAgIHB1YmxpYyBzdGF0aWMgZGlhbW9uZDpudW1iZXIgPSAwO1xuICAgIHB1YmxpYyBzdGF0aWMgZ29sZDpudW1iZXIgPSAwO1xuXG4gICAgcHVibGljIHN0YXRpYyBpc05ldzogYm9vbGVhbiA9IGZhbHNlO1xuICAgIHB1YmxpYyBzdGF0aWMgaXNMb2dpbjogYm9vbGVhbiA9IGZhbHNlO1xuICAgIHB1YmxpYyBzdGF0aWMgY2hhbm5lbElkOiBhbnk7XG5cbiAgICBwdWJsaWMgc3RhdGljIGZyb21JbWdpZDphbnk7XG4gICAgcHVibGljIHN0YXRpYyBmcm9tQXBwaWQ6YW55O1xuXG4gICAgcHVibGljIHN0YXRpYyBhZENvdW50OiBudW1iZXI7Ly/op4bpopHlub/lkYrmrKHmlbBcblxufSIsImltcG9ydCBNeVV0aWxzIGZyb20gXCIuLi8uLi90b29scy9NeVV0aWxzXCI7XG5pbXBvcnQgQ29uZmlnRGF0YSBmcm9tIFwiLi4vLi4vbW9kZWxzL0NvbmZpZ0RhdGFcIjtcbmltcG9ydCBIdHRwTWdyIGZyb20gXCIuLi8uLi9tZ3JDb21tb24vSHR0cE1nclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXWEFkTWdye1xuICAgIHByaXZhdGUgYmFubmVySG9tZTogYW55O1xuICAgIHByaXZhdGUgYmFubmVyT3RoZXI6IGFueTtcbiAgICBwcml2YXRlIGJhbm5lckNsYXNzaWNFbmQ6IGFueTtcblxuICAgIHByaXZhdGUgYmFubmVySG9tZUlzSGlkZTpib29sZWFuID0gdHJ1ZTtcbiAgICBwcml2YXRlIGJhbm5lck90aGVySXNIaWRlOmJvb2xlYW4gPSB0cnVlO1xuICAgIHByaXZhdGUgYmFubmVyQ2xhc3NpY0VuZElzSGlkZTpib29sZWFuID0gdHJ1ZTtcblxuXG4gICAgcHJpdmF0ZSBpc0luaXRlZCA9IGZhbHNlO1xuICAgIHByaXZhdGUgcmV3YXJkZWRWaWRlb0FkOiBhbnk7XG4gICAgcHJpdmF0ZSBoYXNBZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgcHJpdmF0ZSBjYWxsZXI6IGFueTtcbiAgICBwcml2YXRlIGNhbGxCYWNrU3VjOiBGdW5jdGlvbjtcbiAgICBwcml2YXRlIGNhbGxCYWNrRmFpbDogRnVuY3Rpb247XG5cbiAgICBwdWJsaWMgdmlkZW9QbGF5ZWRUaW1lczogbnVtYmVyO1xuXG5cbiAgICBwcml2YXRlIHByZUJhbm5lclRpbWVfSG9tZTogYW55O1xuICAgIHByaXZhdGUgcHJlQmFubmVyVGltZV9PdGhlcjogYW55O1xuICAgIHByaXZhdGUgcHJlQmFubmVyVGltZV9DbGFzc2ljRW5kOiBhbnk7XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBpbml0KCkge1xuICAgICAgICBpZiAoIUxheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKENvbmZpZ0RhdGEuc3lzdGVtSW5mby5TREtWZXJzaW9uICYmIE15VXRpbHMuY29tcGFyZVZlcnNpb24oQ29uZmlnRGF0YS5zeXN0ZW1JbmZvLlNES1ZlcnNpb24sIFwiMi4wLjRcIikgPj0gMCkge1xuICAgICAgICAgICAgdGhpcy5pc0luaXRlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLmluaXRWZWRpb0NvbSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJlQmFubmVyVGltZV9Ib21lID0gTGF5YS50aW1lci5jdXJyVGltZXI7XG4gICAgICAgIHRoaXMucHJlQmFubmVyVGltZV9PdGhlciA9IExheWEudGltZXIuY3VyclRpbWVyO1xuICAgICAgICB0aGlzLnByZUJhbm5lclRpbWVfQ2xhc3NpY0VuZCA9IExheWEudGltZXIuY3VyclRpbWVyO1xuICAgIH1cblxuICAgIHB1YmxpYyBpbml0VmVkaW9Db20oKSB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgaWYgKHRoaXMuaXNJbml0ZWQpIHtcbiAgICAgICAgICAgIHRoaXMucmV3YXJkZWRWaWRlb0FkID0gd2luZG93W1wid3hcIl0uY3JlYXRlUmV3YXJkZWRWaWRlb0FkKHsgYWRVbml0SWQ6IENvbmZpZ0RhdGEucmV3YXJkZWRWaWRlb0lkIH0pO1xuICAgICAgICAgICAgaWYgKHRoaXMucmV3YXJkZWRWaWRlb0FkID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMucmV3YXJkZWRWaWRlb0FkLm9uTG9hZCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJyZXdhcmRlZFZpZGVvIG9ubG9hZFwiKTtcbiAgICAgICAgICAgICAgICBzZWxmLmhhc0FkID0gdHJ1ZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5yZXdhcmRlZFZpZGVvQWQub25FcnJvcihlcnIgPT4ge1xuICAgICAgICAgICAgICAgIHNlbGYuaGFzQWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBIdHRwTWdyLmluc3RhbmNlLnZpZGVvRXJyb3JDYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgIGlmIChzZWxmLmNhbGxCYWNrU3VjICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jYWxsQmFja1N1YyhzZWxmLmNhbGxlcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLnJld2FyZGVkVmlkZW9BZC5vbkNsb3NlKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgLy8g55So5oi354K55Ye75LqG44CQ5YWz6Zet5bm/5ZGK44CR5oyJ6ZKuXG4gICAgICAgICAgICAgICAgLy8g5bCP5LqOIDIuMS4wIOeahOWfuuehgOW6k+eJiOacrO+8jHJlcyDmmK/kuIDkuKogdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgaWYgKHJlcyAmJiByZXMuaXNFbmRlZCB8fCByZXMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAvLyDmraPluLjmkq3mlL7nu5PmnZ/vvIzlj6/ku6XkuIvlj5HmuLjmiI/lpZblirFcbiAgICAgICAgICAgICAgICAgICAgc2VsZi52aWRlb1BsYXllZFRpbWVzICs9IDE7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZWxmLmNhbGxCYWNrU3VjICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuY2FsbEJhY2tTdWMoc2VsZi5jYWxsZXIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyDmkq3mlL7kuK3pgJTpgIDlh7rvvIzkuI3kuIvlj5HmuLjmiI/lpZblirFcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGYuY2FsbEJhY2tGYWlsICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuY2FsbEJhY2tGYWlsKHNlbGYuY2FsbGVyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICBwdWJsaWMgc2hvd1ZpZGVvKGNhbGxlcjogYW55LCBjYWxsQmFja1N1YzogRnVuY3Rpb24sIGNhbGxCYWNrRmFpbDogRnVuY3Rpb24pIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzSW5pdGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICB0aGlzLmNhbGxlciA9IGNhbGxlcjtcbiAgICAgICAgdGhpcy5jYWxsQmFja1N1YyA9IGNhbGxCYWNrU3VjO1xuICAgICAgICB0aGlzLmNhbGxCYWNrRmFpbCA9IGNhbGxCYWNrRmFpbDtcbiAgICAgICAgaWYgKHRoaXMuaGFzQWQpIHtcbiAgICAgICAgICAgIHRoaXMuaGFzQWQgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMucmV3YXJkZWRWaWRlb0FkLnNob3coKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpcy5yZXdhcmRlZFZpZGVvQWQubG9hZCgpXG4gICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZWxmLnJld2FyZGVkVmlkZW9BZC5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuaGFzQWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHNob3dCYW5uZXJBZEhvbWUoKSB7XG4gICAgICAgIGlmICghTGF5YS5Ccm93c2VyLm9uTWluaUdhbWV8fCF0aGlzLmlzSW5pdGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5kZXN0b3J5QWxsQmFubmVyQWQoKTtcbiAgICAgICAgbGV0IHNjcmVlblcgPSBDb25maWdEYXRhLnN5c3RlbUluZm8ud2luZG93V2lkdGg7XG4gICAgICAgIGxldCBfd2lkdGggPSBMYXlhLnN0YWdlLndpZHRoIC8gMiAtIDE0MDtcbiAgICAgICAgbGV0IHNjcmVlbkggPSBDb25maWdEYXRhLnN5c3RlbUluZm8ud2luZG93SGVpZ2h0O1xuICAgICAgICB0aGlzLmJhbm5lckhvbWVJc0hpZGUgPSBmYWxzZTtcbiAgICAgICAgaWYoTGF5YS50aW1lci5jdXJyVGltZXIgLSB0aGlzLnByZUJhbm5lclRpbWVfSG9tZSA+IDMwMDAwKXtcbiAgICAgICAgICAgIGlmKHRoaXMuYmFubmVySG9tZSl7XG4gICAgICAgICAgICAgICAgdGhpcy5iYW5uZXJIb21lLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICB0aGlzLmJhbm5lckhvbWUgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5iYW5uZXJIb21lKSB7XG4gICAgICAgICAgICB0aGlzLmRlc3Ryb3lCYW5uZXJBZEhvbWUoKTtcbiAgICAgICAgICAgIHRoaXMuYmFubmVySG9tZSA9IHdpbmRvd1tcInd4XCJdLmNyZWF0ZUJhbm5lckFkKHtcbiAgICAgICAgICAgICAgICBhZFVuaXRJZDogQ29uZmlnRGF0YS5iYW5uZXJWaWRlb0lkLFxuICAgICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIHRvcDogc2NyZWVuSCAtIDEwMCxcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IF93aWR0aCxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuYmFubmVySG9tZS5vblJlc2l6ZShyID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmJhbm5lckhvbWUuc3R5bGUubGVmdCA9IChzY3JlZW5XIC0gdGhpcy5iYW5uZXJIb21lLnN0eWxlLnJlYWxXaWR0aCkgLyAyO1xuICAgICAgICAgICAgICAgIHRoaXMuYmFubmVySG9tZS5zdHlsZS50b3AgPSBzY3JlZW5IIC0gdGhpcy5iYW5uZXJIb21lLnN0eWxlLnJlYWxIZWlnaHQ7XG4gICAgICAgICAgICAgICAgaWYgKHNjcmVlbkggLyBzY3JlZW5XID4gMikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJhbm5lckhvbWUuc3R5bGUudG9wID0gdGhpcy5iYW5uZXJIb21lLnN0eWxlLnRvcCAtIDEwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB0aGlzLmJhbm5lckhvbWUub25FcnJvcigocmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLlub/lkYrliqDovb3plJnor686XCIsIHJlcyk7XG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAvLyB0aGlzLmJhbm5lckhvbWUub25Mb2FkKCgpPT57XG4gICAgICAgICAgICAvLyAgICAgaWYodGhpcy5iYW5uZXJIb21lSXNIaWRlKXtcbiAgICAgICAgICAgIC8vICAgICAgICAgdGhpcy5iYW5uZXJIb21lLmRlc3Ryb3koKTtcbiAgICAgICAgICAgIC8vICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgLy8gICAgIH1cbiAgICAgICAgICAgIC8vICAgICB0aGlzLmJhbm5lckhvbWUuc2hvdygpO1xuICAgICAgICAgICAgLy8gfSlcbiAgICAgICAgICAgIHRoaXMucHJlQmFubmVyVGltZV9Ib21lID0gTGF5YS50aW1lci5jdXJyVGltZXI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuYmFubmVySG9tZSAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuYmFubmVySG9tZS5zaG93KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvd0Jhbm5lckFkT3RoZXIoKSB7XG4gICAgICAgIGlmICghTGF5YS5Ccm93c2VyLm9uTWluaUdhbWV8fCF0aGlzLmlzSW5pdGVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5kZXN0b3J5QWxsQmFubmVyQWQoKTtcbiAgICAgICAgbGV0IHNjcmVlblcgPSBDb25maWdEYXRhLnN5c3RlbUluZm8ud2luZG93V2lkdGg7XG4gICAgICAgIGxldCBfd2lkdGggPSBzY3JlZW5XO1xuICAgICAgICBsZXQgc2NyZWVuSCA9IENvbmZpZ0RhdGEuc3lzdGVtSW5mby53aW5kb3dIZWlnaHQ7XG4gICAgICAgIHRoaXMuYmFubmVyT3RoZXJJc0hpZGUgPSBmYWxzZTtcbiAgICAgICAgaWYoTGF5YS50aW1lci5jdXJyVGltZXIgLSB0aGlzLnByZUJhbm5lclRpbWVfT3RoZXIgPiAzMDAwMCl7XG4gICAgICAgICAgICBpZih0aGlzLmJhbm5lck90aGVyKXtcbiAgICAgICAgICAgICAgICB0aGlzLmJhbm5lck90aGVyLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICB0aGlzLmJhbm5lck90aGVyID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSAgIFxuICAgICAgICBpZiAoIXRoaXMuYmFubmVyT3RoZXIpIHtcbiAgICAgICAgICAgIHRoaXMuZGVzdHJveUJhbm5lckFkT3RoZXIoKTtcbiAgICAgICAgICAgIHRoaXMuYmFubmVyT3RoZXIgPSB3aW5kb3dbXCJ3eFwiXS5jcmVhdGVCYW5uZXJBZCh7XG4gICAgICAgICAgICAgICAgYWRVbml0SWQ6IENvbmZpZ0RhdGEuYmFubmVyVmlkZW9JZCxcbiAgICAgICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgICAgICAgICAgICB0b3A6IHNjcmVlbkggLSAxMDAsXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBfd2lkdGgsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHRoaXMuYmFubmVyT3RoZXIub25SZXNpemUociA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5iYW5uZXJPdGhlci5zdHlsZS5sZWZ0ID0gKHNjcmVlblcgLSB0aGlzLmJhbm5lck90aGVyLnN0eWxlLnJlYWxXaWR0aCkgLyAyO1xuICAgICAgICAgICAgICAgIHRoaXMuYmFubmVyT3RoZXIuc3R5bGUudG9wID0gc2NyZWVuSCAtIHRoaXMuYmFubmVyT3RoZXIuc3R5bGUucmVhbEhlaWdodCAtIDEwO1xuICAgICAgICAgICAgICAgIGlmIChzY3JlZW5IIC8gc2NyZWVuVyA+IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5iYW5uZXJPdGhlci5zdHlsZS50b3AgPSB0aGlzLmJhbm5lck90aGVyLnN0eWxlLnRvcCAtIDI1O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIHRoaXMuYmFubmVyT3RoZXIub25FcnJvcigocmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLlub/lkYrliqDovb3plJnor686XCIsIHJlcyk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgdGhpcy5wcmVCYW5uZXJUaW1lX090aGVyID0gTGF5YS50aW1lci5jdXJyVGltZXI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuYmFubmVyT3RoZXIgIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLmJhbm5lck90aGVyLnNob3coKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvd0Jhbm5lckFkQ2xhc3NpY0VuZCgpIHtcbiAgICAgICAgaWYgKCFMYXlhLkJyb3dzZXIub25NaW5pR2FtZXx8IXRoaXMuaXNJbml0ZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmRlc3RvcnlBbGxCYW5uZXJBZCgpO1xuICAgICAgICBsZXQgc2NyZWVuVyA9IENvbmZpZ0RhdGEuc3lzdGVtSW5mby53aW5kb3dXaWR0aDtcbiAgICAgICAgbGV0IF93aWR0aCA9IHNjcmVlblc7XG4gICAgICAgIGxldCBzY3JlZW5IID0gQ29uZmlnRGF0YS5zeXN0ZW1JbmZvLndpbmRvd0hlaWdodDtcbiAgICAgICAgdGhpcy5iYW5uZXJDbGFzc2ljRW5kSXNIaWRlID0gZmFsc2U7XG4gICAgICAgIGlmKExheWEudGltZXIuY3VyclRpbWVyIC0gdGhpcy5wcmVCYW5uZXJUaW1lX090aGVyID4gMzAwMDApe1xuICAgICAgICAgICAgaWYodGhpcy5iYW5uZXJDbGFzc2ljRW5kKXtcbiAgICAgICAgICAgICAgICB0aGlzLmJhbm5lckNsYXNzaWNFbmQuZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuYmFubmVyQ2xhc3NpY0VuZCA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLmJhbm5lckNsYXNzaWNFbmQpIHtcbiAgICAgICAgICAgIHRoaXMuZGVzdHJveUJhbm5lckFkQ2xhc3NpY0VuZCgpO1xuICAgICAgICAgICAgdGhpcy5iYW5uZXJDbGFzc2ljRW5kID0gd2luZG93W1wid3hcIl0uY3JlYXRlQmFubmVyQWQoe1xuICAgICAgICAgICAgICAgIGFkVW5pdElkOiAnYWR1bml0LWRjYWNmN2ZkNmU2NTRiNGQnLFxuICAgICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIHRvcDogc2NyZWVuSCAtIDEwMCxcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IF93aWR0aCxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuYmFubmVyQ2xhc3NpY0VuZC5vbkVycm9yKChyZXMpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuW5v+WRiuWKoOi9vemUmeivrzpcIiwgcmVzKTtcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIHRoaXMuYmFubmVyQ2xhc3NpY0VuZC5vblJlc2l6ZShyID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmJhbm5lckNsYXNzaWNFbmQuc3R5bGUubGVmdCA9IChzY3JlZW5XIC0gdGhpcy5iYW5uZXJDbGFzc2ljRW5kLnN0eWxlLnJlYWxXaWR0aCkgLyAyO1xuICAgICAgICAgICAgICAgIHRoaXMuYmFubmVyQ2xhc3NpY0VuZC5zdHlsZS50b3AgPSBzY3JlZW5IIC0gdGhpcy5iYW5uZXJDbGFzc2ljRW5kLnN0eWxlLnJlYWxIZWlnaHQgLSAxMDtcbiAgICAgICAgICAgICAgICBpZiAoc2NyZWVuSCAvIHNjcmVlblcgPiAyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYmFubmVyQ2xhc3NpY0VuZC5zdHlsZS50b3AgPSB0aGlzLmJhbm5lckNsYXNzaWNFbmQuc3R5bGUudG9wIC0gMjU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHRoaXMucHJlQmFubmVyVGltZV9PdGhlciA9IExheWEudGltZXIuY3VyclRpbWVyO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmJhbm5lckNsYXNzaWNFbmQgIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLmJhbm5lckNsYXNzaWNFbmQuc2hvdygpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGRlc3Ryb3lCYW5uZXJBZEhvbWUoKSB7XG4gICAgICAgIHRoaXMuYmFubmVySG9tZUlzSGlkZSA9IHRydWU7XG4gICAgICAgIGlmICh0aGlzLmJhbm5lckhvbWUpIHtcbiAgICAgICAgICAgIHRoaXMucHJlQmFubmVyVGltZV9Ib21lID0gMDtcbiAgICAgICAgICAgIGlmKENvbmZpZ0RhdGEuY3RybEluZm8uaXNfYmFubmVyID09IDEpe1xuICAgICAgICAgICAgICAgIHRoaXMuYmFubmVySG9tZS5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5iYW5uZXJIb21lID0gbnVsbDtcbiAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgIHRoaXMuYmFubmVySG9tZS5oaWRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgZGVzdHJveUJhbm5lckFkT3RoZXIoKSB7XG4gICAgICAgIHRoaXMuYmFubmVyT3RoZXJJc0hpZGUgPSB0cnVlO1xuICAgICAgICBpZiAodGhpcy5iYW5uZXJPdGhlcikge1xuICAgICAgICAgICAgdGhpcy5wcmVCYW5uZXJUaW1lX090aGVyID0gMDtcbiAgICAgICAgICAgIGlmKENvbmZpZ0RhdGEuY3RybEluZm8uaXNfYmFubmVyID09IDEpe1xuICAgICAgICAgICAgICAgIHRoaXMuYmFubmVyT3RoZXIuZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuYmFubmVyT3RoZXIgPSBudWxsO1xuICAgICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgICAgdGhpcy5iYW5uZXJPdGhlci5oaWRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cblxuICAgIHB1YmxpYyBkZXN0cm95QmFubmVyQWRDbGFzc2ljRW5kKCkge1xuICAgICAgICB0aGlzLmJhbm5lckNsYXNzaWNFbmRJc0hpZGUgPSB0cnVlO1xuICAgICAgICBpZiAodGhpcy5iYW5uZXJDbGFzc2ljRW5kKSB7XG4gICAgICAgICAgICB0aGlzLnByZUJhbm5lclRpbWVfQ2xhc3NpY0VuZCA9IDA7XG4gICAgICAgICAgICBpZihDb25maWdEYXRhLmN0cmxJbmZvLmlzX2Jhbm5lciA9PSAxKXtcbiAgICAgICAgICAgICAgICB0aGlzLmJhbm5lckNsYXNzaWNFbmQuZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuYmFubmVyQ2xhc3NpY0VuZCA9IG51bGw7XG4gICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICB0aGlzLmJhbm5lckNsYXNzaWNFbmQuaGlkZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGRlc3RvcnlBbGxCYW5uZXJBZCgpIHtcbiAgICAgICAgdGhpcy5kZXN0cm95QmFubmVyQWRIb21lKCk7XG4gICAgICAgIHRoaXMuZGVzdHJveUJhbm5lckFkT3RoZXIoKTtcbiAgICAgICAgdGhpcy5kZXN0cm95QmFubmVyQWRDbGFzc2ljRW5kKCk7XG4gICAgfVxuXG5cblxufSIsImltcG9ydCBVc2VyRGF0YSBmcm9tIFwiLi4vLi4vbW9kZWxzL1VzZXJEYXRhXCI7XG5pbXBvcnQgSHR0cE1nciBmcm9tIFwiLi4vLi4vbWdyQ29tbW9uL0h0dHBNZ3JcIjtcbmltcG9ydCBNeVV0aWxzIGZyb20gXCIuLi8uLi90b29scy9NeVV0aWxzXCI7XG5pbXBvcnQgQ29uZmlnRGF0YSBmcm9tIFwiLi4vLi4vbW9kZWxzL0NvbmZpZ0RhdGFcIjtcbmltcG9ydCBFdmVudE1nciBmcm9tIFwiLi4vLi4vbWdyQ29tbW9uL0V2ZW50TWdyXCI7XG5pbXBvcnQgU3RhdGlzdGljc01nciBmcm9tIFwiLi4vLi4vbWdyQ29tbW9uL1N0YXRpc3RpY3NNZ3JcIjtcbmltcG9ydCBNeUxvZyBmcm9tIFwiLi4vLi4vdG9vbHMvTXlMb2dcIjtcbmltcG9ydCBTb3VuZE1nciBmcm9tIFwiLi4vLi4vbWdyQ29tbW9uL1NvdW5kTWdyXCI7XG5pbXBvcnQgVmlld01nciBmcm9tIFwiLi4vLi4vbWdyQ29tbW9uL1ZpZXdNZ3JcIjtcbmltcG9ydCBDb252ZXJnZUFkVmlldyBmcm9tIFwiLi4vLi4vdmlld3MvQ29udmVyZ2VBZFZpZXdcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV1hBUEkge1xuICAgIHB1YmxpYyBfbGF1bmNoOmFueSA9IHt9O1xuICAgIHByaXZhdGUgYnRucyA9IFtdO1xuICAgIHByaXZhdGUgb2Zmc2V0T3BlbkRvbWFpbjogTGF5YS5WZWN0b3IyO1xuICAgIHByaXZhdGUgc3RpbWUgPSAwO1xuICAgIHByaXZhdGUgc2hhcmVCYWNrQXJncyA9IHt9O1xuICAgIHByaXZhdGUgY2FsbGVyID0gbnVsbDtcbiAgICBwcml2YXRlIHNoYXJlQmFjaztcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9sYXVuY2ggPSB3aW5kb3dbXCJ3eFwiXS5nZXRMYXVuY2hPcHRpb25zU3luYygpO1xuICAgICAgICBcbiAgICAgICAgRXZlbnRNZ3IuaW5zdGFuY2Uub25jZShcImdldFN5c3RlbVBhcmFtTGlzdEJhY2tcIix0aGlzLCgpPT57XG4gICAgICAgICAgICB0aGlzLnNob3dTaGFyZU1lbnUoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2V0T3BlbkRvbWFpbk9mZnNldCgpO1xuXG4gICAgICAgIHdpbmRvd1tcInd4XCJdLm9uU2hvdygocmVzKSA9PiB7XG4gICAgICAgICAgICB2YXIgc2hhcmVUaWNrZXQgPSByZXMuc2hhcmVUaWNrZXQ7XG4gICAgICAgICAgICB2YXIgcXVlcnkgPSByZXMucXVlcnkgfHwge307XG4gICAgICAgICAgICBpZiAoc2hhcmVUaWNrZXQgIT0gdW5kZWZpbmVkICYmIHF1ZXJ5LmF2YXRhclVybEdyb3VwXG4gICAgICAgICAgICAgICAgJiYgcXVlcnkubmlja05hbWVHcm91cCkge1xuICAgICAgICAgICAgICAgIC8v5Zyo6L+Z5YGa576k5o6S6KGM55qEXGLlvLnmoYZcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy/liIbkuqvlm57osINcbiAgICAgICAgICAgICAgICB2YXIgX2Q6IGFueSA9IHRoaXMuc2hhcmVCYWNrQXJncyB8fCB7fTtcbiAgICAgICAgICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgbGV0IHRpbWUgPSBMYXlhLkJyb3dzZXIubm93KCkgLSB0aGlzLnN0aW1lO1xuICAgICAgICAgICAgICAgIGlmIChMYXlhLkJyb3dzZXIubm93KCkgLSB0aGlzLnN0aW1lID4gMjAwMCkge1xuICAgICAgICAgICAgICAgICAgICBfZC5zdWNjZXNzID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuc2hhcmVCYWNrICYmIHRoaXMuY2FsbGVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNoYXJlQmFjay5jYWxsKHRoaXMuY2FsbGVyLCBfZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaGFyZUJhY2sgPSBudWxsO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIF9kLnN1Y2Nlc3MgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuc2hhcmVCYWNrICYmIHRoaXMuY2FsbGVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNoYXJlQmFjay5jYWxsKHRoaXMuY2FsbGVyLCBfZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaGFyZUJhY2sgPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8v5pKt5pS+6Z+z5LmQIOWIh+WIsOWQjuWPsOiDjOaZr+mfs+S5kOa2iOWksemcgOimgemHjeaWsOaSreaUvlxuICAgICAgICAgICAgU291bmRNZ3IuaW5zdGFuY2UucGxheUJHTSgpO1xuXG4gICAgICAgICAgICAvL+iBmuWQiOW5v+WRiumhtemdolxuICAgICAgICAgICAgLy/mjqfliLbnu5PmnZ/pobXpnaLnmoTliIbkuqvvvIzkuI3mmL7npLrogZrlkIjlub/lkYrpobXpnaJcbiAgICAgICAgICAgIGxldCBub3RTaG93QWQgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmKHRoaXMuc2hhcmVCYWNrQXJncyl7XG4gICAgICAgICAgICAgICAgbm90U2hvd0FkID0gdGhpcy5zaGFyZUJhY2tBcmdzW1wibm90U2hvd0FkXCJdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgTGF5YS50aW1lci5mcmFtZU9uY2UoMSx0aGlzLCgpPT57XG4gICAgICAgICAgICAgICAgLy/lj6rlnKjnu5PmnZ/nlYzpnaLmmL7npLrogZrlkIjlub/lkYrpobXpnaJcbiAgICAgICAgICAgICAgICBsZXQgZ2FtZU92ZXJWaWV3ID0gVmlld01nci5pbnN0YW5jZS5nZXRWaWV3KFwiR2FtZU92ZXIuc2NlbmVcIik7XG4gICAgICAgICAgICAgICAgbGV0IGNvbnZlcmdlQWRWaWV3ID0gVmlld01nci5pbnN0YW5jZS5nZXRWaWV3KFwiQ29udmVyZ2VBZC5zY2VuZVwiKTtcbiAgICAgICAgICAgICAgICBpZiAoIW5vdFNob3dBZCAmJiBDb25maWdEYXRhLmN0cmxJbmZvLmlzQ29udmVyZ2UgPT0gMSAmJiBnYW1lT3ZlclZpZXcgJiYgIWNvbnZlcmdlQWRWaWV3KSB7XG4gICAgICAgICAgICAgICAgICAgIFZpZXdNZ3IuaW5zdGFuY2Uub3BlblZpZXcoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdmlld05hbWU6IFwiQ29udmVyZ2VBZC5zY2VuZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhczogQ29udmVyZ2VBZFZpZXcsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbG9zZUFsbDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB0aGlzLnNoYXJlQmFja0FyZ3MgPSB7fTtcbiAgICAgICAgfSlcbiAgICAgICAgd2luZG93W1wid3hcIl0ub25IaWRlKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc3RpbWUgPSBMYXlhLkJyb3dzZXIubm93KCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuXG4gICAgb25Hb1NoYXJlKHJlcykge1xuICAgICAgICB0aGlzLmNhbGxlciA9IHJlcy5jYWxsZXI7XG4gICAgICAgIHRoaXMuc2hhcmVCYWNrID0gcmVzLmNhbGxiYWNrO1xuICAgICAgICB0aGlzLnNoYXJlQmFja0FyZ3MgPSByZXMuYXJncyB8fCB7fTtcbiAgICB9XG4gICAgIC8qXG4gICAgICAgIHN1Y2Nlc3Mg5oiQ5Yqf5Zue6LCDXG4gICAgICAgIGZhaWwg5aSx6LSl5Zue6LCDXG4gICAgKi9cbiAgIHB1YmxpYyBkb0xvZ2luKF9kYXRhKXtcbiAgICAgICAgaWYgKCFMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHdpbmRvd1tcInd4XCJdLmxvZ2luKHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IChyZXMpID0+IHtcbiAgICAgICAgICAgICAgICBVc2VyRGF0YS5jb2RlID0gcmVzLmNvZGU7XG4gICAgICAgICAgICAgICAgLy/nmbvlvZXmjqXlj6NcbiAgICAgICAgICAgICAgICB2YXIgbGF1bmNoID0gdGhpcy5nZXRMYXVuY2hEYXRhKCk7XG4gICAgICAgICAgICAgICAgdmFyIF9kOiBhbnkgPSB7fVxuICAgICAgICAgICAgICAgIF9kLmNvZGUgPSByZXMuY29kZTtcbiAgICAgICAgICAgICAgICBpZihsYXVuY2gucXVlcnkpe1xuICAgICAgICAgICAgICAgICAgICBfZC5pbnZpdGVJZCA9IGxhdW5jaC5xdWVyeS5pbnZpdGVfdWlkIHx8ICcnO1xuICAgICAgICAgICAgICAgICAgICBfZC5jaGFubmVsSWQgPSBsYXVuY2gucXVlcnkuY2hhbm5lbCB8fCBcIlwiO1xuICAgICAgICAgICAgICAgICAgICBVc2VyRGF0YS5mcm9tQXBwaWQgPSBsYXVuY2gucXVlcnkuY3VyX3NoYXJlX2lkfHxcIlwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZihsYXVuY2gucmVmZXJyZXJJbmZvKXtcbiAgICAgICAgICAgICAgICAgICAgVXNlckRhdGEuZnJvbUltZ2lkID0gbGF1bmNoLnJlZmVycmVySW5mby5hcHBJZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgX2Quc3VjY2VzcyA9IF9kYXRhLnN1Y2Nlc3M7XG4gICAgICAgICAgICAgICAgX2QuZmFpbCA9IF9kYXRhLmZhaWw7XG4gICAgICAgICAgICAgICAgSHR0cE1nci5pbnN0YW5jZS5sb2dpbihfZClcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgZ2V0T2Zmc2V0T3BlbkRvbWFpbigpOmFueXtcbiAgICAgICAgcmV0dXJuIHRoaXMub2Zmc2V0T3BlbkRvbWFpbjtcbiAgICB9XG5cbiAgICBnZXRMYXVuY2hEYXRhKCk6YW55e1xuICAgICAgICByZXR1cm4gdGhpcy5fbGF1bmNoO1xuICAgIH1cblxuICAgIGdldFF1ZXJ5KCk6YW55e1xuICAgICAgICByZXR1cm4gdGhpcy5fbGF1bmNoLnF1ZXJ5O1xuICAgIH1cblxuICAgIGdldFJlZmVycmVySW5mbygpe1xuICAgICAgICByZXR1cm4gdGhpcy5fbGF1bmNoLnJlZmVycmVySW5mbztcbiAgICB9XG5cblxuICAgIHB1YmxpYyAgdXBsb2FkUmFua0RhdGUoX2RhdGEpIHtcbiAgICAgICAgaWYgKCFMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBkID0gW107XG4gICAgICAgIGlmICghTXlVdGlscy5pc051bGwoX2RhdGEubGV2ZWwpKSB7XG4gICAgICAgICAgICBkLnB1c2goeyBrZXk6IFwibGV2ZWxcIiwgdmFsdWU6IF9kYXRhLmxldmVsICsgXCJcIiB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIU15VXRpbHMuaXNOdWxsKF9kYXRhLnNjb3JlKSkge1xuICAgICAgICAgICAgZC5wdXNoKHsga2V5OiBcInNjb3JlXCIsIHZhbHVlOiBfZGF0YS5zY29yZSArIFwiXCIgfSk7XG4gICAgICAgIH1cbiAgICAgICAgd2luZG93W1wid3hcIl0uc2V0VXNlckNsb3VkU3RvcmFnZSh7XG4gICAgICAgICAgICBLVkRhdGFMaXN0OiBkLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwi5LiK5Lyg5pWw5o2u5Yiw5b6u5L+h5pyN5Yqh5ZmoOlwiICsgSlNPTi5zdHJpbmdpZnkocmVzKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHB1YmxpYyBzaG93U2hhcmVNZW51KCkge1xuICAgICAgICBpZiAoIUxheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgd2luZG93W1wid3hcIl0uc2hvd1NoYXJlTWVudSh7IHdpdGhTaGFyZVRpY2tldDogdHJ1ZSB9KTtcbiAgICAgICAgXG4gICAgICAgIGxldCBzaGFyZUluZm8gPSB0aGlzLmNyZWF0ZVNoYXJlSW5mbygpO1xuICAgICAgICB3aW5kb3dbXCJ3eFwiXS5vblNoYXJlQXBwTWVzc2FnZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gc2hhcmVJbmZvO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGNyZWF0ZVNoYXJlSW5mbyhfZD86YW55KTphbnl7XG4gICAgICAgIHZhciBzZCA9IEpTT04ucGFyc2UoQ29uZmlnRGF0YS5nZXRDb25maWdEYXRhKFwic2hhcmVJbmZvXCIpKTtcbiAgICAgICAgaWYoIXNkKXtyZXR1cm4gbnVsbH1cbiAgICAgICAgdmFyIHJhbmRfdCA9IE15VXRpbHMucmFuZG9tKDAsIHNkLmxlbmd0aCAtIDEpO1xuICAgICAgICB2YXIgdGl0bGUgPSBzZFtyYW5kX3RdLnRpdGxlO1xuICAgICAgICB2YXIgaW1hZ2VVcmwgPSBzZFtyYW5kX3RdLmltZztcbiAgICAgICAgdmFyIHF1ZXJ5ID0gXCJpbnZpdGVfdWlkPVwiICsgKFVzZXJEYXRhLnVzZXJJZCA/IFVzZXJEYXRhLnVzZXJJZCA6IFwiXCIpO1xuICAgICAgICBxdWVyeSArPSBcIiZjdXJfc2hhcmVfaWQ9XCIgKyBzZFtyYW5kX3RdLmlkO1xuICAgICAgICBxdWVyeSArPSBcIiZhdmF0YXJVcmxHcm91cD1cIiArIChVc2VyRGF0YS5hdmF0YXJVcmwgPyBVc2VyRGF0YS5hdmF0YXJVcmwgOiBcIlwiKTtcbiAgICAgICAgcXVlcnkgKz0gXCImbmlja05hbWVHcm91cD1cIiArIChVc2VyRGF0YS5uaWNrTmFtZSA/IFVzZXJEYXRhLm5pY2tOYW1lIDogXCJcIik7XG4gICAgICAgIHF1ZXJ5ICs9IFwiJmNoYW5uZWw9XCIgKyAoVXNlckRhdGEuY2hhbm5lbElkID8gVXNlckRhdGEuY2hhbm5lbElkIDogXCJcIik7XG4gICAgICAgIGlmIChfZCkge1xuICAgICAgICAgICAgaWYgKF9kLmlkKSB7XG4gICAgICAgICAgICAgICAgcXVlcnkgKz0gXCImc2NlbmU9XCIgKyBfZC5pZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfZC5pdGVtSWQpIHtcbiAgICAgICAgICAgICAgICBxdWVyeSArPSBcIiZpdGVtSWQ9XCIgKyBfZC5pdGVtSWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoX2QudHlwZSkge1xuICAgICAgICAgICAgICAgIHF1ZXJ5ICs9IFwiJnR5cGU9XCIgKyBfZC50eXBlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKF9kLnNoYXJlX3RpdGxlKSB7XG4gICAgICAgICAgICAgICAgdGl0bGUgPSBfZC5zaGFyZV90aXRsZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChfZC5zaGFyZV9pbWcpIHtcbiAgICAgICAgICAgICAgICBpbWFnZVVybCA9IF9kLnNoYXJlX2ltZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgICAgICBpbWFnZVVybDogaW1hZ2VVcmwsXG4gICAgICAgICAgICBxdWVyeTogcXVlcnksXG4gICAgICAgIH0gXG4gICAgfVxuICAgIFxuICAgIHB1YmxpYyBzaGFyZUFwcE1lc3NhZ2UoX2QsIHR5cGU6IG51bWJlcikge1xuICAgICAgICBpZiAoIUxheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKF9kLmNhbGxiYWNrKSB7XG4gICAgICAgICAgICB0aGlzLm9uR29TaGFyZShfZCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFDb25maWdEYXRhLmdldENvbmZpZ0RhdGEoXCJzaGFyZUluZm9cIikpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBTdGF0aXN0aWNzTWdyLmluc3RhbmNlLnNoYXJlU3RhdGlzdGljcyh0eXBlKTtcbiAgICAgICAgbGV0IHNoYXJlSW5mbyA9IHRoaXMuY3JlYXRlU2hhcmVJbmZvKF9kKTtcbiAgICAgICAgd2luZG93W1wid3hcIl0uc2hhcmVBcHBNZXNzYWdlKHNoYXJlSW5mbyk7XG4gICAgfVxuXG4gICAgcHVibGljIG5hdmlnYXRlVG9NaW5pUHJvZ3JhbShfZCkge1xuICAgICAgICBpZiAoIV9kIHx8ICFfZC5hcHBJZCB8fCAhTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBTdGF0aXN0aWNzTWdyLmluc3RhbmNlLm5hdmlnYXRlVG9NaW5pUHJvZ3JhbVN0YXRpc3RpY3MoX2QpO1xuICAgICAgICB3aW5kb3dbXCJ3eFwiXS5uYXZpZ2F0ZVRvTWluaVByb2dyYW0oe1xuICAgICAgICAgICAgYXBwSWQ6IF9kLmFwcGlkLFxuICAgICAgICAgICAgcGF0aDogX2QucGF0aCxcbiAgICAgICAgICAgIGV4dHJhRGF0YToge1xuICAgICAgICAgICAgICAgIGZvbzogJ2JhcicsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy8gZW52VmVyc2lvbjogJ2RldmVsb3AnLFxuICAgICAgICAgICAgY29tcGxldGU6KHJlcyk9PiB7XG4gICAgICAgICAgICAgICAgaWYoX2QuY29tcGxldGUpe1xuICAgICAgICAgICAgICAgICAgICBfZC5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBfZC5jb21wbGV0ZSA9IG51bGw7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFpbDoocmVzKT0+IHtcbiAgICAgICAgICAgICAgICB3aW5kb3dbXCJ3eFwiXS5zaG93VG9hc3Qoe3RpdGxlOlwi6Lez6L2s5aSx6LSlXCJ9KTtcbiAgICAgICAgICAgICAgICBpZihfZC5mYWlsKXtcbiAgICAgICAgICAgICAgICAgICAgX2QuZmFpbCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBfZC5mYWlsID0gbnVsbDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdWNjZXNzOihyZXMpPT4ge1xuICAgICAgICAgICAgICAgIFN0YXRpc3RpY3NNZ3IuaW5zdGFuY2UubmF2aWdhdGVUb01pbmlQcm9ncmFtQmFja1N0YXRpc3RpY3MoX2QpO1xuICAgICAgICAgICAgICAgIGlmIChfZC5jYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICBfZC5jYWxsYmFjayhcInN1Y2Nlc3NcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF9kLmNhbGxiYWNrID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAgLyoqXG4gICAgICog6K6+572u5a2Q5Z+f55WM6Z2i5YGP56e777yM6YCC6YWN5LiN5ZCM55qE5bGP5bmV55WM6Z2iXG4gICAgICovXG4gICAgcHVibGljIHNldE9wZW5Eb21haW5PZmZzZXQoKSB7XG4gICAgICAgIGxldCBvZmZzZXRYID0gTGF5YS5zdGFnZS53aWR0aCAtIDc1MDtcbiAgICAgICAgaWYgKG9mZnNldFggPCAwKSB7XG4gICAgICAgICAgICBvZmZzZXRYID0gMDtcbiAgICAgICAgfVxuICAgICAgICBsZXQgb2Zmc2V0WSA9IExheWEuc3RhZ2UuaGVpZ2h0IC0gMTMzNDtcbiAgICAgICAgaWYgKG9mZnNldFkgPCAwKSB7XG4gICAgICAgICAgICBvZmZzZXRZID0gMDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm9mZnNldE9wZW5Eb21haW4gPSBuZXcgTGF5YS5WZWN0b3IyKG9mZnNldFgsIG9mZnNldFkpO1xuICAgIH1cblxuICAgIHB1YmxpYyBjcmVhdGVBdXRob3JpemF0aW9uQnV0dG9uKF9kYXRhKSB7XG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xuICAgICAgICAgICAgd3guZ2V0U2V0dGluZyh7XG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmF1dGhTZXR0aW5nICYmIHJlcy5hdXRoU2V0dGluZ1tcInNjb3BlLnVzZXJJbmZvXCJdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBNeUxvZy5sb2coXCLlt7Lnu4/mjojmnYNcIik7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgc1dpZHRoID0gTGF5YS5zdGFnZS53aWR0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBzSGVpZ2h0ID0gTGF5YS5zdGFnZS5oZWlnaHQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgeGIgPSAoTGF5YS5Ccm93c2VyLndpZHRoIC8gTGF5YS5Ccm93c2VyLnBpeGVsUmF0aW8pIC8gc1dpZHRoO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHliID0gKExheWEuQnJvd3Nlci5oZWlnaHQgLyBMYXlhLkJyb3dzZXIucGl4ZWxSYXRpbykgLyBzSGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGxlZnQgPSAoX2RhdGEueCAtIF9kYXRhLndpZHRoIC8gMikgKiB4YjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB0b3AgPSAoX2RhdGEueSArIHRoaXMub2Zmc2V0T3BlbkRvbWFpbi55IC0gX2RhdGEuaGVpZ2h0IC8gMikgKiB5YjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB3aWR0aCA9IF9kYXRhLndpZHRoICogeGI7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgaGVpZ2h0ID0gKF9kYXRhLmhlaWdodCkgKiB5YjtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxldCBiYWNrZ3JvdW5kQ29sb3IgPSBcIiNmZmZmZmZcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfZGF0YS5pc0Z1bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3AgPSAoX2RhdGEueSArIHRoaXMub2Zmc2V0T3BlbkRvbWFpbi55IC8gMikgKiB5YjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aCA9IHdpZHRoO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodCA9IGhlaWdodDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBiYWNrZ3JvdW5kQ29sb3IgPSBcIiNmZjA3MDNcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBidXR0b24gPSB3aW5kb3dbXCJ3eFwiXS5jcmVhdGVVc2VySW5mb0J1dHRvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IGxlZnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogdG9wLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogd2lkdGgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogaGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBiYWNrZ3JvdW5kQ29sb3I6IGJhY2tncm91bmRDb2xvcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5idG5zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5idG5zLnB1c2goeyBcImJ1dHRvblwiOiBidXR0b24sIFwiaXNGdWxsXCI6IF9kYXRhLmlzRnVsbCB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1dHRvbi5vblRhcCgocmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcyAmJiByZXMudXNlckluZm8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVXNlckRhdGEubmlja05hbWUgPSByZXMudXNlckluZm8ubmlja05hbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVzZXJEYXRhLmdlbmRlciA9IHJlcy51c2VySW5mby5nZW5kZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVzZXJEYXRhLmF2YXRhclVybCA9IHJlcy51c2VySW5mby5hdmF0YXJVcmw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdGF0aXN0aWNzTWdyLmluc3RhbmNlLmF1dGhvclN0YXRpc3RpY3MoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSHR0cE1nci5pbnN0YW5jZS51cGRhdGVVc2VySW5mbygpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmJ0bnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnRucy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuYnV0dG9uLmRlc3Ryb3koKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJ0bnMgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidXR0b24uZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoX2RhdGEuc3VjY2Vzc0JhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9kYXRhLnN1Y2Nlc3NCYWNrLm1ldGhvZC5jYWxsKF9kYXRhLnN1Y2Nlc3NCYWNrLmNhbGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRlc3RvcnlBdXRob3JpemF0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfZGF0YS5mYWlsQmFjaykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2RhdGEuZmFpbEJhY2subWV0aG9kLmNhbGwoX2RhdGEuZmFpbEJhY2suY2FsbGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgICAgICAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uICgpIHsgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBkZXN0b3J5QXV0aG9yaXphdGlvbigpe1xuICAgICAgICBpZighQ29uZmlnRGF0YS5yZXBlYXRBdXRob3JpemF0aW9uKXsgLy/lpoLmnpzkuI3pnIDopoHph43lpI3lvLnmjojmnYNcbiAgICAgICAgICAgIENvbmZpZ0RhdGEuaXNDcmVhdGVBdXRob3JpemF0aW9uID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmKHRoaXMuYnRucyl7XG4gICAgICAgICAgICAgICAgdGhpcy5idG5zLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmJ1dHRvbi5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICB0aGlzLnNldEF1dGhvcml6YXRpb25DaGVjayhmYWxzZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0QXV0aG9yaXphdGlvbkNoZWNrKGZsYWcpIHtcbiAgICAgICAgaWYgKHRoaXMuYnRucykge1xuICAgICAgICAgICAgdGhpcy5idG5zLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZsYWcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuYnV0dG9uLnNob3coKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuYnV0dG9uLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHZpYnJhdGVTaG9ydCgpIHtcbiAgICAgICAgaWYgKCFMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChDb25maWdEYXRhLmlzVmlyYm9ydCkge1xuICAgICAgICAgICAgd2luZG93W1wid3hcIl0udmlicmF0ZVNob3J0KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgdmlicmF0ZUxvbmcoKSB7XG4gICAgICAgIGlmICghTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQ29uZmlnRGF0YS5pc1ZpcmJvcnQpIHtcbiAgICAgICAgICAgIHdpbmRvd1tcInd4XCJdLnZpYnJhdGVMb25nKCk7XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IENvbmZpZ0RhdGEgZnJvbSBcIi4uLy4uL21vZGVscy9Db25maWdEYXRhXCI7XHJcbmltcG9ydCBTb3VuZE1nciBmcm9tIFwiLi4vLi4vbWdyQ29tbW9uL1NvdW5kTWdyXCI7XHJcbmltcG9ydCBHYW1lTWdyIGZyb20gXCIuLi8uLi9tZ3IzZC9HYW1lTWdyXCI7XHJcbmltcG9ydCBWaWV3TWdyIGZyb20gXCIuLi8uLi9tZ3JDb21tb24vVmlld01nclwiO1xyXG5pbXBvcnQgTWFpblZpZXcgZnJvbSBcIi4uLy4uL3ZpZXdzL01haW5WaWV3XCI7XHJcbmltcG9ydCBNeVV0aWxzIGZyb20gXCIuLi8uLi90b29scy9NeVV0aWxzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBXWExhdW5jaCBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIHByaXZhdGUgdG9Qcm9jZXNzOiBudW1iZXIgPSAxO1xyXG4gICAgcHJpdmF0ZSBwcm9ncmVzczogbnVtYmVyID0gMDtcclxuICAgIHByaXZhdGUgcHJvTGFiZWw6IExheWEuTGFiZWw7XHJcbiAgICBwcml2YXRlIHRpcExhYmxlOiBMYXlhLkxhYmVsO1xyXG4gICAgcHJpdmF0ZSBwcm86IExheWEuSW1hZ2U7XHJcbiAgICBwcml2YXRlIHNjZW5lM2RVcmw6c3RyaW5nID0gXCJMYXlhU2NlbmVfRWF0aXR1cC9Db252ZW50aW9uYWwvRWF0aXR1cC5sc1wiXHJcblxyXG4gICAgZ2V0TGF1bmNoVGlwTXNnKCkge1xyXG4gICAgICAgIGxldCB0aXBzID0gW1xyXG4gICAgICAgICAgICBcIuaMieS9j+Wxj+W5leiIjOWktOS8muS8uOmVv+WTplwiLFxyXG4gICAgICAgICAgICBcIuaVsuWlveeOqe+8jOWAvOW+l+etieW+he+8jOWRsX5cIlxyXG4gICAgICAgIF1cclxuICAgICAgICByZXR1cm4gdGlwc1tNeVV0aWxzLnJhbmRvbSgwLCB0aXBzLmxlbmd0aCAtIDEpXTtcclxuICAgIH1cclxuXHJcbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgdmFyIHhocjogTGF5YS5IdHRwUmVxdWVzdCA9IG5ldyBMYXlhLkh0dHBSZXF1ZXN0KCk7XHJcbiAgICAgICAgICAgIHhoci5vbmNlKExheWEuRXZlbnQuQ09NUExFVEUsIHRoaXMsIChkYXRhKT0+e1xyXG4gICAgICAgICAgICAgICAgaWYoZGF0YSAmJiB0eXBlb2YgZGF0YSAhPSBcInN0cmluZ1wiICYmIHR5cGVvZiBkYXRhID09IFwib2JqZWN0XCIpe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKENvbmZpZ0RhdGEuanNvblZlcnNpb24gIT0gZGF0YS52aXNpb24pe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB4aHIgPSBuZXcgTGF5YS5IdHRwUmVxdWVzdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB4aHIub25jZShMYXlhLkV2ZW50LkNPTVBMRVRFLCB0aGlzLCAocmVzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzICYmIHR5cGVvZiByZXMgIT0gXCJzdHJpbmdcIiAmJiB0eXBlb2YgcmVzID09IFwib2JqZWN0XCIpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbmZpZ0RhdGEuaW5pdENvbmZpZ0RhdGEocmVzLHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeGhyLnNlbmQoZGF0YS5wYXRoLG51bGwsXCJnZXRcIixcImpzb25cIixbXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCJdKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB4aHIuc2VuZChDb25maWdEYXRhLmpzb25WZXJzaW9uVXJsLG51bGwsXCJnZXRcIixcImpzb25cIixbXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCJdKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBncm91cDogTGF5YS5Ob2RlID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcInByb2dyZXNzR3JvdXBcIik7XHJcbiAgICAgICAgdGhpcy5wcm8gPSBncm91cC5nZXRDaGlsZEJ5TmFtZShcInByb2dyZXNzXCIpIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgdGhpcy5wcm9MYWJlbCA9IGdyb3VwLmdldENoaWxkQnlOYW1lKFwicHJvTGFiZWxcIikgYXMgTGF5YS5MYWJlbDtcclxuICAgICAgICB0aGlzLnRpcExhYmxlID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcInRpcEJnXCIpLmdldENoaWxkQnlOYW1lKFwibGJsX3RpcFwiKSBhcyBMYXlhLkxhYmVsO1xyXG4gICAgICAgIHRoaXMudGlwTGFibGUudGV4dCA9IHRoaXMuZ2V0TGF1bmNoVGlwTXNnKCk7XHJcbiAgICAgICAgdGhpcy5sb2FkUmVzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBsb2FkUmVzKCkge1xyXG4gICAgICAgIHZhciByZXNvdXJjZTogQXJyYXk8YW55PiA9IFtcclxuICAgICAgICAgICAgeyB1cmw6IFwicmVzL2F0bGFzL3JhbmsuYXRsYXNcIiwgdHlwZTogTGF5YS5Mb2FkZXIuQVRMQVMgfSxcclxuICAgICAgICAgICAgeyB1cmw6IFwicmVzL2pzb24vY29uZmlnLmpzb25cIiwgdHlwZTogTGF5YS5Mb2FkZXIuSlNPTiB9LFxyXG4gICAgICAgICAgICB7IHVybDogXCJyZXMvanNvbi9cIiArIENvbmZpZ0RhdGEubGFuZ3VhZ2UgKyBcIi5qc29uXCIsIHR5cGU6IExheWEuTG9hZGVyLkpTT04gfSxcclxuICAgICAgICBdO1xyXG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgdmFyIGxvYWRUYXNrOiBhbnkgPSB3aW5kb3dbXCJ3eFwiXS5sb2FkU3VicGFja2FnZSh7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiAncmVzM2QnLCAvLyBuYW1lIOWPr+S7peWhqyBuYW1lIOaIluiAhSByb290XHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiAocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8g5YiG5YyF5Yqg6L295oiQ5Yqf5ZCO6YCa6L+HIHN1Y2Nlc3Mg5Zue6LCDXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxvYWRUYXNrMTogYW55ID0gd2luZG93W1wid3hcIl0ubG9hZFN1YnBhY2thZ2Uoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAncmVzJywgLy8gbmFtZSDlj6/ku6XloasgbmFtZSDmiJbogIUgcm9vdFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiAocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDliIbljIXliqDovb3miJDlip/lkI7pgJrov4cgc3VjY2VzcyDlm57osINcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIExheWEubG9hZGVyLmxvYWQocmVzb3VyY2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYudXBkYXRlUHJvZ3Jlc3MoMC45OSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkUmVzQ29tcGxldGUoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYudXBkYXRlUHJvZ3Jlc3MoMC42ICsgcmVzICogMC40KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmYWlsOiAocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDliIbljIXliqDovb3lpLHotKXpgJrov4cgZmFpbCDlm57osINcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZFJlcygpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgbG9hZFRhc2sxLm9uUHJvZ3Jlc3NVcGRhdGUocmVzID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi51cGRhdGVQcm9ncmVzcygwLjMgKyByZXMucHJvZ3Jlc3MgKiAwLjAwMylcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBmYWlsOiAocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8g5YiG5YyF5Yqg6L295aSx6LSl6YCa6L+HIGZhaWwg5Zue6LCDXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkUmVzKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgbG9hZFRhc2sub25Qcm9ncmVzc1VwZGF0ZShyZXMgPT4ge1xyXG4gICAgICAgICAgICAgICAgc2VsZi51cGRhdGVQcm9ncmVzcyhyZXMucHJvZ3Jlc3MgKiAwLjAwMylcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgTGF5YS5sb2FkZXIubG9hZChyZXNvdXJjZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLnVwZGF0ZVByb2dyZXNzKDAuOTkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkUmVzQ29tcGxldGUoKVxyXG4gICAgICAgICAgICB9KSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLnVwZGF0ZVByb2dyZXNzKHJlcylcclxuICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGxvYWRSZXNDb21wbGV0ZSgpIHtcclxuICAgICAgICAvL+acrOWcsOa4uOaIj+aVsOaNrumFjee9rlxyXG4gICAgICAgIENvbmZpZ0RhdGEuaW5pdENvbmZpZ0RhdGEoXHJcbiAgICAgICAgICAgIExheWEuTG9hZGVyLmdldFJlcyhcInJlcy9qc29uL2NvbmZpZy5qc29uXCIpLFxyXG4gICAgICAgICk7XHJcbiAgICAgICAgLy/or63oqIDmlofku7ZcclxuICAgICAgICBDb25maWdEYXRhLmxhbmd1YWdlRGF0YSA9IExheWEuTG9hZGVyLmdldFJlcyhcInJlcy9qc29uL1wiICsgQ29uZmlnRGF0YS5sYW5ndWFnZSArIFwiLmpzb25cIik7XHJcbiAgICAgICAgTGF5YS5TY2VuZTNELmxvYWQodGhpcy5zY2VuZTNkVXJsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMuT24zRFJlc0xvYWRDb21wbGV0ZSkpO1xyXG4gICAgICAgIC8vIHRoaXMuT24zRFJlc0xvYWRDb21wbGV0ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgT24zRFJlc0xvYWRDb21wbGV0ZShzY2VuZT86IExheWEuU2NlbmUzRCkge1xyXG4gICAgICAgIHRoaXMudXBkYXRlUHJvZ3Jlc3MoMSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7IFxyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIuWtkOWfn+WKoOi9vXJlcy9hdGxhcy9yYW5rLmF0bGFzXCIpO1xyXG4gICAgICAgICAgICBMYXlhLk1pbmlBZHB0ZXIuc2VuZEF0bGFzVG9PcGVuRGF0YUNvbnRleHQoXCJyZXMvYXRsYXMvcmFuay5hdGxhc1wiKTsgLy/kvb/nlKjmjqXlj6PlsIblm77pm4bpgI/kvKDliLDlrZDln59cclxuICAgICAgICB9XHJcbiAgICAgICAgU291bmRNZ3IuaW5zdGFuY2UucGxheUJHTSgpO1xyXG5cclxuICAgICAgICBzY2VuZS5hZGRDb21wb25lbnQoR2FtZU1ncik7XHJcbiAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZChzY2VuZSk7XHJcbiAgICAgICAgTGF5YS5TY2VuZS5vcGVuKFwiTWFpblZpZXcuc2NlbmVcIik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcblx0XHQgKiDmm7TmlrDotYTmupDliqDovb3ov5vluqZcclxuXHRcdCAqL1xyXG4gICAgcHVibGljIHVwZGF0ZVByb2dyZXNzKHByb2dyZXNzKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5wcm9ncmVzcyA9IHByb2dyZXNzO1xyXG4gICAgICAgIHRoaXMucHJvZ3Jlc3MgPiB0aGlzLnRvUHJvY2VzcyA/IHRoaXMudG9Qcm9jZXNzIDogdGhpcy5wcm9ncmVzcztcclxuICAgICAgICAvL+acgOmrmDEwMCXov5vluqZcclxuICAgICAgICBpZiAodGhpcy5wcm9ncmVzcyA+PSAxKSB7XHJcbiAgICAgICAgICAgIC8vIExheWEuVHdlZW4uY2xlYXJBbGwodGhpcy5wcm8pO1xyXG4gICAgICAgICAgICB0aGlzLnByb0xhYmVsLnRleHQgPSBcIua4uOaIj+WKoOi9veWujOavle+8jOWNs+Wwhui/m+WFpea4uOaIjy4uLlwiXHJcbiAgICAgICAgICAgIHRoaXMucHJvLndpZHRoID0gNTAwO1xyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLmZyYW1lT25jZSgyLCB0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm93bmVyLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgICAgIExheWEubG9hZGVyLmNsZWFyUmVzKFwicmVzL2F0bGFzL2xvYWRpbmcuYXRsYXNcIik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5wcm8ud2lkdGggPSA1MDAgKiB0aGlzLnByb2dyZXNzO1xyXG4gICAgICAgICAgICAvLyBMYXlhLlR3ZWVuLmNsZWFyQWxsKHRoaXMucHJvKTtcclxuICAgICAgICAgICAgLy8gTGF5YS5Ud2Vlbi50byh0aGlzLnBybyx7d2lkdGg6NTAwICogdGhpcy5wcm9ncmVzc30sMTAwLExheWEuRWFzZS5saW5lYXJOb25lKVxyXG4gICAgICAgICAgICAvL+i/m+W6puWinuWKoFxyXG4gICAgICAgICAgICB0aGlzLnByb0xhYmVsLnRleHQgPSBcIui1hOa6kOWKoOi9veS4rS4uLlwiICsgTWF0aC5mbG9vcih0aGlzLnByb2dyZXNzICogMTAwKSArIFwiJVwiO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFdYU3ViRG9tYWluIHtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgaW5zdGFuY2U6IFdYU3ViRG9tYWluID0gbmV3IFdYU3ViRG9tYWluKCk7XHJcbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSB3eE9wZW5EYXRhVmlldzogTGF5YS5XWE9wZW5EYXRhVmlld2VyO1xyXG4gICAgXHJcbiAgICBzZXRPcGVuVmlldyhfdik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMud3hPcGVuRGF0YVZpZXcgPSBfdjtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZUZyaWVuZFJhbmsoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCFMYXlhLkJyb3dzZXIub25NaW5pR2FtZSB8fCAhdGhpcy53eE9wZW5EYXRhVmlldykge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMud3hPcGVuRGF0YVZpZXcucG9zdE1zZyh7IHR5cGU6IFwiY2xvc2VGcmllbmRSYW5rXCIgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgb3BlbkZyaWVuZFJhbmsoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCFMYXlhLkJyb3dzZXIub25NaW5pR2FtZSB8fCAhdGhpcy53eE9wZW5EYXRhVmlldykge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIExheWEudGltZXIuZnJhbWVPbmNlKDEsIHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5XWE9wZW5EYXRhVmlldy5wb3N0TXNnKHsgdHlwZTogXCJvcGVuRnJpZW5kUmFua1wiIH0pO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgTXlVdGlscyBmcm9tIFwiLi4vdG9vbHMvTXlVdGlsc1wiO1xuaW1wb3J0IENvbmZpZ0RhdGEgZnJvbSBcIi4uL21vZGVscy9Db25maWdEYXRhXCI7XG5pbXBvcnQgVXNlckRhdGEgZnJvbSBcIi4uL21vZGVscy9Vc2VyRGF0YVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIdHRwVXRpbHMge1xuICAgIHB1YmxpYyByZXF1ZXN0KF9kKSB7XG4gICAgICAgIHZhciBtZXRoID0gX2QubWV0aCB8fCBcInBvc3RcIlxuICAgICAgICB2YXIgZGF0YSA9IF9kLmRhdGEgfHwge307XG4gICAgICAgIHZhciB1cmwgPSBcIlwiO1xuICAgICAgICBpZiAoX2QudXJsLmluZGV4T2YoXCJodHRwczovL1wiKSA+IC0xIHx8XG4gICAgICAgICAgICBfZC51cmwuaW5kZXhPZihcImh0dHA6Ly9cIikgPiAtMSkge1xuICAgICAgICAgICAgdXJsID0gX2QudXJsO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdXJsID0gQ29uZmlnRGF0YS5zZXJ2ZXJVcmwgKyBfZC51cmw7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGNvbXBsZXRlRnVuYyA9IChyZXMpID0+IHtcbiAgICAgICAgICAgIGlmIChfZC5jYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwidXJsOlwiICsgdXJsICtcIiByZXM6XCIgKyBKU09OLnN0cmluZ2lmeShyZXMpKTtcbiAgICAgICAgICAgICAgICBfZC5jYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX2QuY2FsbGJhY2sgPSBudWxsO1xuICAgICAgICAgICAgX2QgPSBudWxsO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgZXJyb3JGdW5jID0gKHJlcykgPT4ge1xuICAgICAgICAgICAgaWYgKF9kLmZhaWwpICB7XG4gICAgICAgICAgICAgICAgX2QuZmFpbChyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX2QuZmFpbCA9IG51bGw7XG4gICAgICAgICAgICBfZCA9IG51bGw7XG4gICAgICAgIH07XG4gICAgICAgIGlmKFVzZXJEYXRhLnNlc3Npb25JZCl7XG4gICAgICAgICAgICBkYXRhLnNlc3Npb25JZCA9IFVzZXJEYXRhLnNlc3Npb25JZDtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwic2Vzc2lvbklk77yaXCIgKyBVc2VyRGF0YS5zZXNzaW9uSWQpO1xuICAgICAgICB9XG4gICAgICAgIHZhciB4aHI6IExheWEuSHR0cFJlcXVlc3QgPSBuZXcgTGF5YS5IdHRwUmVxdWVzdCgpO1xuICAgICAgICB4aHIub25jZShMYXlhLkV2ZW50LkNPTVBMRVRFLCB0aGlzLCBjb21wbGV0ZUZ1bmMpO1xuICAgICAgICB4aHIub25jZShMYXlhLkV2ZW50LkVSUk9SLCB0aGlzLCBlcnJvckZ1bmMpO1xuICAgICAgICB4aHIuc2VuZCh1cmwsIEpTT04uc3RyaW5naWZ5KGRhdGEpLCBtZXRoLCBcImpzb25cIiwgW1wiQ29udGVudC1UeXBlXCIsIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCJdKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVxdWVzdFN0YXRpc3RpY3MoX2QpIHtcbiAgICAgICAgdmFyIG1ldGggPSBfZC5tZXRoIHx8IFwicG9zdFwiXG4gICAgICAgIHZhciBkYXRhID0gX2QuZGF0YSB8fCB7fTtcbiAgICAgICAgX2QudXJsID0gX2QudXJsIHx8IFwiXCJcbiAgICAgICAgdmFyIHVybCA9IENvbmZpZ0RhdGEuc3RhdGlzdGljc1VybCArIF9kLnVybDtcbiAgICAgICAgLy8gdmFyIGNvbXBsZXRlRGVsID0gKHJlcykgPT4ge1xuICAgICAgICAvLyAgICAgaWYgKF9kLmNhbGxiYWNrKSB7XG4gICAgICAgIC8vICAgICAgICAgLy8gY29uc29sZS5sb2coXCJ1cmw6XCIgKyB1cmwgK1wiIHJlczpcIiArIEpTT04uc3RyaW5naWZ5KHJlcykpO1xuICAgICAgICAvLyAgICAgICAgIF9kLmNhbGxiYWNrKHJlcyk7XG4gICAgICAgIC8vICAgICB9XG4gICAgICAgIC8vIH07XG4gICAgICAgIC8vIHZhciBlcnJvckRlbCA9IChyZXMpID0+IHtcbiAgICAgICAgLy8gICAgIGlmIChfZC5mYWlsKSAge1xuICAgICAgICAvLyAgICAgICAgIF9kLmZhaWwocmVzKTtcbiAgICAgICAgLy8gICAgIH1cbiAgICAgICAgLy8gfTtcbiAgICAgICAgaWYoVXNlckRhdGEuc2Vzc2lvbklkKXtcbiAgICAgICAgICAgIGRhdGEuc2Vzc2lvbklkID0gVXNlckRhdGEuc2Vzc2lvbklkO1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJzZXNzaW9uSWTvvJpcIiArIFVzZXJEYXRhLnNlc3Npb25JZCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHhocjogTGF5YS5IdHRwUmVxdWVzdCA9IG5ldyBMYXlhLkh0dHBSZXF1ZXN0KCk7XG4gICAgICAgIC8vIHhoci5vbmNlKExheWEuRXZlbnQuQ09NUExFVEUsIHRoaXMsIGNvbXBsZXRlRGVsKTtcbiAgICAgICAgLy8geGhyLm9uY2UoTGF5YS5FdmVudC5FUlJPUiwgdGhpcywgZXJyb3JEZWwpO1xuICAgICAgICB4aHIuc2VuZCh1cmwsIFwicGFyYW09XCIgKyBKU09OLnN0cmluZ2lmeShkYXRhKSwgbWV0aCwgXCJqc29uXCIsIFtcIkNvbnRlbnQtVHlwZVwiLCBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiXSk7XG4gICAgfVxufSIsImltcG9ydCBDb25maWdEYXRhIGZyb20gXCIuLi9tb2RlbHMvQ29uZmlnRGF0YVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTXlMb2cge1xyXG4gICBcclxuICAgIHB1YmxpYyBzdGF0aWMgbG9nKGFyZzE/OiBhbnksYXJnMj86YW55KSB7XHJcbiAgICAgICAgaWYgKENvbmZpZ0RhdGEuaXNMb2cpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coYXJnMSxhcmcyKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgQ29uZmlnRGF0YSBmcm9tIFwiLi4vbW9kZWxzL0NvbmZpZ0RhdGFcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTXlVdGlscyB7XG5cbiAgICBwdWJsaWMgc3RhdGljIGlzTnVsbChvYmo6IGFueSk6IGJvb2xlYW4ge1xuICAgICAgICBpZiAob2JqICE9IDAgJiYgKG9iaiA9PSBudWxsIHx8IG9iaiA9PSBcIlwiIHx8IG9iaiA9PSB1bmRlZmluZWQpKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG5cbiAgICBwdWJsaWMgc3RhdGljIHJhbmRvbShtaW4sIG1heCkge1xuICAgICAgICB2YXIgcmFuZ2UgPSBtYXggLSBtaW47XG4gICAgICAgIHZhciByYW5kID0gTWF0aC5yYW5kb20oKTtcbiAgICAgICAgdmFyIG51bSA9IG1pbiArIE1hdGgucm91bmQocmFuZCAqIHJhbmdlKTsgLy/lm5voiI3kupTlhaVcbiAgICAgICAgcmV0dXJuIG51bTtcbiAgICB9XG5cbiAgICBcdFx0LyoqXG5cdFx0ICog5q+U6L6D54mI5pys5Y+377yM5qC85byPeHgueHgueHhcblx0XHQgKiBAcGFyYW0gdjEg5b2T5YmN54mI5pys5Y+3XG5cdFx0ICogQHBhcmFtIHYyIOebruagh+eJiOacrOWPt1xuICAgICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgY29tcGFyZVZlcnNpb24odjEsIHYyKTogbnVtYmVyIHtcbiAgICAgICAgdjEgPSB2MS5zcGxpdCgnLicpXG4gICAgICAgIHYyID0gdjIuc3BsaXQoJy4nKVxuICAgICAgICBjb25zdCBsZW4gPSBNYXRoLm1heCh2MS5sZW5ndGgsIHYyLmxlbmd0aClcblxuICAgICAgICB3aGlsZSAodjEubGVuZ3RoIDwgbGVuKSB7XG4gICAgICAgICAgICB2MS5wdXNoKCcwJylcbiAgICAgICAgfVxuICAgICAgICB3aGlsZSAodjIubGVuZ3RoIDwgbGVuKSB7XG4gICAgICAgICAgICB2Mi5wdXNoKCcwJylcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IG51bTEgPSBwYXJzZUludCh2MVtpXSlcbiAgICAgICAgICAgIGNvbnN0IG51bTIgPSBwYXJzZUludCh2MltpXSlcblxuICAgICAgICAgICAgaWYgKG51bTEgPiBudW0yKSB7XG4gICAgICAgICAgICByZXR1cm4gMVxuICAgICAgICAgICAgfSBlbHNlIGlmIChudW0xIDwgbnVtMikge1xuICAgICAgICAgICAgcmV0dXJuIC0xXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gMFxuICAgIH1cblxuICAgIC8v6aG26YOo5oyJ6ZKu5a+56b2Q77yM5aSn5L2T6YCC6YWN5pivb2vnmoRcbiAgICBwdWJsaWMgc3RhdGljIGF1dG9TY3JlZW5TaXplKG5vZGU6IGFueVtdKSB7XG4gICAgICAgIGlmICghTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgICAgIGxldCBpbmZvID0gQ29uZmlnRGF0YS5zeXN0ZW1JbmZvO1xuICAgICAgICBsZXQgWSA9IDYwO1xuICAgICAgICBpZiAoaW5mby5zdGF0dXNCYXJIZWlnaHQgPCAyMCkgeyAvLzE4XG4gICAgICAgICAgICBZICs9IDEwO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGluZm8uc3RhdHVzQmFySGVpZ2h0ID49IDMwKSB7IC8vNDRcbiAgICAgICAgICAgIFkgKz0gNjA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaW5mby5zdGF0dXNCYXJIZWlnaHQgPiAyMCAmJiBpbmZvLnN0YXR1c0JhckhlaWdodCA8IDMwKSB7IC8vMjdcbiAgICAgICAgICAgIFkgKz0gNzQ7XG4gICAgICAgIH1cbiAgICAgICAgbm9kZS5mb3JFYWNoKGUgPT4geyAvLyAyMCAgXG4gICAgICAgICAgICBlLnkgPSBZO1xuICAgICAgICB9KVxuICAgIH1cblxuXG59IiwiaW1wb3J0IE15VXRpbHMgZnJvbSBcIi4uL3Rvb2xzL015VXRpbHNcIjtcbmltcG9ydCBWaWV3TWdyIGZyb20gXCIuLi9tZ3JDb21tb24vVmlld01nclwiO1xuaW1wb3J0IFBsYXRmb3JtTWdyIGZyb20gXCIuLi9tZ3JDb21tb24vUGxhdGZvcm1NZ3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzZVZpZXcgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XG4gICAgcHJvdGVjdGVkIF9kYXRhO1xuICAgIHByb3RlY3RlZCBfaXNDbGljaztcblxuICAgIG9uQXdha2UoKTogdm9pZCB7XG4gICAgICAgIC8v5Yig6Zmk5pe26Ieq5Yqo6YeK5pS+XG4gICAgICAgICh0aGlzLm93bmVyIGFzIExheWEuVmlldykuYXV0b0Rlc3Ryb3lBdENsb3NlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgb25FbmFibGUoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYWRkRXZlbnQoKTtcbiAgICB9XG5cbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnQoKTtcbiAgICB9XG4gICAgXG4gICAgcHVibGljIG9wZW5WaWV3KGRhdGE/OiBhbnkpOiB2b2lkIHtcbiAgICAgICAgKHRoaXMub3duZXIgYXMgTGF5YS5WaWV3KS5oZWlnaHQgPSBMYXlhLnN0YWdlLmhlaWdodDtcbiAgICAgICAgdGhpcy5fZGF0YSA9IGRhdGEgfHwge307XG4gICAgfVxuXG4gICAgcHVibGljIGFkZEV2ZW50KCkge1xuICAgIH1cblxuICAgIHB1YmxpYyByZW1vdmVFdmVudCgpIHtcbiAgICAgICAgTGF5YS50aW1lci5jbGVhckFsbCh0aGlzKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2xvc2VWaWV3KF9kOmFueSA9IG51bGwpIHtcbiAgICAgICAgdmFyIF92aWV3TmFtZTpzdHJpbmcgPSAodGhpcy5vd25lciBhcyBMYXlhLlZpZXcpLnVybDtcbiAgICAgICAgaWYoX2Qubm90RGVzdHJveSl7XG4gICAgICAgICAgICBWaWV3TWdyLmluc3RhbmNlLmhpZGVWaWV3KF92aWV3TmFtZSk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgVmlld01nci5pbnN0YW5jZS5jbG9zZVZpZXcoX3ZpZXdOYW1lKTtcbiAgICAgICAgfVxuICAgICAgICBpZihfdmlld05hbWUgPT0gXCJSYW5rVmlldy5zY2VuZVwiKXtcbiAgICAgICAgICAgIFBsYXRmb3JtTWdyLnB0QVBJLnNldEF1dGhvcml6YXRpb25DaGVjayh0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fZGF0YSAmJiB0aGlzLl9kYXRhLmNhbGxiYWNrKSB7XG4gICAgICAgICAgICB0aGlzLl9kYXRhLmNhbGxiYWNrKF9kKVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2RhdGEgPSBudWxsO1xuICAgIH1cblxuICAgIFxuXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnV0dG9uQW5pbSBleHRlbmRzIExheWEuU2NyaXB0IHtcbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxuXG4gICAgb25Bd2FrZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5vd25lci5vbihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMub25Eb3duKTtcbiAgICAgICAgdGhpcy5vd25lci5vbihMYXlhLkV2ZW50Lk1PVVNFX1VQLCB0aGlzLCB0aGlzLm9uVXApO1xuICAgICAgICB0aGlzLm93bmVyLm9uKExheWEuRXZlbnQuTU9VU0VfT1VULCB0aGlzLCB0aGlzLm9uVXApO1xuICAgIH1cblxuICAgIG9uRGlzYWJsZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5vd25lci5vZmZBbGwoKTtcbiAgICAgICAgTGF5YS5Ud2Vlbi5jbGVhckFsbCh0aGlzKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgb25Eb3duKCk6IHZvaWQge1xuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMub3duZXIsIHsgc2NhbGVYOiAwLjgsIHNjYWxlWTogMC44IH0sIDEwMCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvblVwKCk6IHZvaWQge1xuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMub3duZXIsIHsgc2NhbGVYOiAxLCBzY2FsZVk6IDEgfSwgMTAwKTtcbiAgICB9XG59IiwiaW1wb3J0IEJhc2VWaWV3IGZyb20gXCIuL0Jhc2VWaWV3XCI7XG5pbXBvcnQgVGlwVmlldyBmcm9tIFwiLi9UaXBWaWV3XCI7XG5pbXBvcnQgTWFpblZpZXcgZnJvbSBcIi4vTWFpblZpZXdcIjtcbmltcG9ydCBNeVV0aWxzIGZyb20gXCIuLi90b29scy9NeVV0aWxzXCI7XG5pbXBvcnQgUGxhdGZvcm1NZ3IgZnJvbSBcIi4uL21nckNvbW1vbi9QbGF0Zm9ybU1nclwiO1xuaW1wb3J0IENvbmZpZ0RhdGEgZnJvbSBcIi4uL21vZGVscy9Db25maWdEYXRhXCI7XG5pbXBvcnQgVmlld01nciBmcm9tIFwiLi4vbWdyQ29tbW9uL1ZpZXdNZ3JcIjtcbmltcG9ydCBFdmVudE1nciBmcm9tIFwiLi4vbWdyQ29tbW9uL0V2ZW50TWdyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbnZlcmdlQWRWaWV3IGV4dGVuZHMgQmFzZVZpZXcge1xuICAgIHByaXZhdGUgYXBwaWQgPSBcIlwiOy8v6ZyA6KaB6LCD6L2s55qEQVBQSURcbiAgICBwcml2YXRlIGFkTGlzdDogTGF5YS5MaXN0O1xuICAgIHByaXZhdGUgYWdhaW5DaGFsbGVuZ2VCdG46IExheWEuQnV0dG9uO1xuICAgIHByaXZhdGUgc2hhcmVCdG46IExheWEuQnV0dG9uO1xuICAgIHByaXZhdGUgSG9tZUJ0bjogTGF5YS5CdXR0b247XG5cbiAgICBvbkF3YWtlKCl7XG4gICAgICAgIHRoaXMuSG9tZUJ0biA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJidG5fY2xvc2VcIikgYXMgTGF5YS5CdXR0b247XG4gICAgICAgIE15VXRpbHMuYXV0b1NjcmVlblNpemUoW3RoaXMuSG9tZUJ0bl0pO1xuICAgICAgICBsZXQgYW5jaG9yUyA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJhbmNob3JTXCIpIGFzIExheWEuSW1hZ2U7XG4gICAgICAgIGxldCBvZmZzZXRZOm51bWJlciA9IFBsYXRmb3JtTWdyLnB0QVBJLmdldE9mZnNldE9wZW5Eb21haW4oKTtcbiAgICAgICAgYW5jaG9yUy55ID0gYW5jaG9yUy55ICsgb2Zmc2V0WTtcblxuICAgICAgICB0aGlzLnNoYXJlQnRuID0gYW5jaG9yUy5nZXRDaGlsZEJ5TmFtZShcInNoYXJlQnRuXCIpIGFzIExheWEuQnV0dG9uO1xuICAgICAgICB0aGlzLmFnYWluQ2hhbGxlbmdlQnRuID0gYW5jaG9yUy5nZXRDaGlsZEJ5TmFtZShcImJ0bl9hZ2FpblwiKSBhcyBMYXlhLkJ1dHRvbjtcblxuICAgICAgICB0aGlzLmFnYWluQ2hhbGxlbmdlQnRuLnkgPSB0aGlzLmFnYWluQ2hhbGxlbmdlQnRuLnkgKyBvZmZzZXRZO1xuXG4gICAgICAgIHRoaXMuYWRMaXN0ID0gYW5jaG9yUy5nZXRDaGlsZEJ5TmFtZShcIkxpc3RcIikgYXMgTGF5YS5MaXN0O1xuICAgICAgICB0aGlzLmFkTGlzdC52U2Nyb2xsQmFyU2tpbiA9ICcnO1xuICAgICAgICB0aGlzLmFkTGlzdC5zZWxlY3RFbmFibGUgPSB0cnVlO1xuXG4gICAgICAgIFBsYXRmb3JtTWdyLnB0QWRNZ3IuaW5zdGFuY2Uuc2hvd0Jhbm5lckFkT3RoZXIoKTtcbiAgICB9XG5cbiAgICBvbkRpc2FibGUoKXtcbiAgICAgICAgUGxhdGZvcm1NZ3IucHRBZE1nci5pbnN0YW5jZS5kZXN0b3J5QWxsQmFubmVyQWQoKTtcbiAgICB9XG4gICAgXG4gICAgcHVibGljIGFkZEV2ZW50KCkge1xuICAgICAgICB0aGlzLmFkTGlzdC5yZW5kZXJIYW5kbGVyID0gbmV3IExheWEuSGFuZGxlcih0aGlzLCB0aGlzLm9uUmVuZGVyKTtcbiAgICAgICAgdGhpcy5hZExpc3QubW91c2VIYW5kbGVyID0gbmV3IExheWEuSGFuZGxlcih0aGlzLCB0aGlzLm9uQ2xpY2tJdGVtKTtcbiAgICAgICAgdGhpcy5hZ2FpbkNoYWxsZW5nZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uQ2xpY2tIb21lKTtcbiAgICAgICAgdGhpcy5zaGFyZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uQ2xpY2tTaGFyZSk7XG4gICAgICAgIHRoaXMuSG9tZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uQ2xpY2tIb21lKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVtb3ZlRXZlbnQoKSB7XG4gICAgICAgIHN1cGVyLnJlbW92ZUV2ZW50KCk7XG4gICAgICAgIHRoaXMuYWRMaXN0LnJlbmRlckhhbmRsZXIgPSBudWxsO1xuICAgICAgICB0aGlzLmFkTGlzdC5tb3VzZUhhbmRsZXIgPSBudWxsO1xuICAgICAgICB0aGlzLmFnYWluQ2hhbGxlbmdlQnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uQ2xpY2tIb21lKTtcbiAgICAgICAgdGhpcy5zaGFyZUJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkNsaWNrU2hhcmUpO1xuICAgICAgICB0aGlzLkhvbWVCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25DbGlja0hvbWUpO1xuICAgIH1cblxuICAgIHB1YmxpYyBvcGVuVmlldyhkYXRhPzogYW55KSB7XG4gICAgICAgIHN1cGVyLm9wZW5WaWV3KGRhdGEpO1xuICAgICAgICB0aGlzLkhvbWVCdG4udmlzaWJsZSA9IGZhbHNlO1xuXG4gICAgICAgIGxldCBpbmZvID0gQ29uZmlnRGF0YS5zeXN0ZW1JbmZvO1xuICAgICAgICB2YXIgeSA9IDUwICsgKGluZm8uc3RhdHVzQmFySGVpZ2h0ID4gMjAgPyA3NCA6IDApO1xuICAgICAgICB0aGlzLkhvbWVCdG4ueSA9IHk7XG5cbiAgICAgICAgbGV0IGFsbGxsID0gW107XG4gICAgICAgIGlmICh0aGlzLmFkTGlzdC5hcnJheSA9PSBudWxsKSB7XG4gICAgICAgICAgICBhbGxsbCA9IENvbmZpZ0RhdGEuZ2V0QUREYXRhKDEwMDQpO1xuICAgICAgICAgICAgdGhpcy5hZExpc3QuYXJyYXkgPSBhbGxsbDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmFkTGlzdC5yZWZyZXNoKCk7Ly/liLfmlrDmlbDmja7mupBcbiAgICAgICAgdGhpcy5hZExpc3Quc2Nyb2xsVG8oMCk7IC8v56ys5LiA5Liq5pi+56S655qEIOS9jee9rlxuICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMTAwMCwgdGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMgJiYgdGhpcy5Ib21lQnRuKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5Ib21lQnRuLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHB1YmxpYyBvbkNsaWNrSG9tZSgpIHtcbiAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcbiAgICAgICAgVmlld01nci5pbnN0YW5jZS5vcGVuVmlldyh7XG4gICAgICAgICAgICB2aWV3TmFtZTogXCJNYWluVmlldy5zY2VuZVwiLFxuICAgICAgICAgICAgY2xhczogTWFpblZpZXcsXG4gICAgICAgICAgICBjbG9zZUFsbDogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICAgIEV2ZW50TWdyLmluc3RhbmNlLmVtaXQoXCJnb0hvbWVcIik7XG4gICAgfVxuXG4gICAgcHVibGljIG9uQ2xpY2tBZ2FpbigpIHtcbiAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHNoYXJlQmFjayhyZXMpIHtcbiAgICAgICAgbGV0IG1zZyA9IFwiXCI7XG4gICAgICAgIGlmIChyZXMuc3VjY2Vzcykge1xuICAgICAgICAgICAgbXNnID0gXCLliIbkuqvmiJDlip9cIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG1zZyA9IFwi5YiG5Lqr5aSx6LSlXCI7XG4gICAgICAgIH1cbiAgICAgICAgVmlld01nci5pbnN0YW5jZS5vcGVuVmlldyh7XG4gICAgICAgICAgICB2aWV3TmFtZTogXCJUaXBWaWV3LnNjZW5lXCIsXG4gICAgICAgICAgICBjbGFzOiBUaXBWaWV3LFxuICAgICAgICAgICAgY2xvc2VBbGw6IGZhbHNlLFxuICAgICAgICAgICAgZGF0YTogbXNnLFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBvbkNsaWNrU2hhcmUoKSB7XG4gICAgICAgIFBsYXRmb3JtTWdyLnB0QVBJLnNoYXJlQXBwTWVzc2FnZSh7XG4gICAgICAgICAgICBjYWxsZXI6IHRoaXMsXG4gICAgICAgICAgICBjYWxsYmFjazogdGhpcy5zaGFyZUJhY2ssXG4gICAgICAgIH0sIDApXG4gICAgfVxuXG4gICAgLyoqXG4gICAgKiDljZXkuKogYm94IOeCueWHu+S6i+S7tlxuICAgICovXG4gICAgcHJpdmF0ZSBvbkNsaWNrSXRlbShlOiBMYXlhLkV2ZW50LCBpbmRleDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIGlmIChlLnR5cGUgPT0gTGF5YS5FdmVudC5DTElDSykge1xuICAgICAgICAgICAgaWYgKChlLnRhcmdldCkgaW5zdGFuY2VvZiBMYXlhLkJveCkge1xuICAgICAgICAgICAgICAgIGxldCBvYmogPSB7XG4gICAgICAgICAgICAgICAgICAgIHBhdGg6IHRoaXMuYWRMaXN0LmFycmF5W2luZGV4XS50b0xpbmtzLFxuICAgICAgICAgICAgICAgICAgICBhcHBpZDogdGhpcy5hZExpc3QuYXJyYXlbaW5kZXhdLmFwcGlkLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgUGxhdGZvcm1NZ3IucHRBUEkubmF2aWdhdGVUb01pbmlQcm9ncmFtKG9iaik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcHJpdmF0ZSBvblJlbmRlcihjZWxsOiBMYXlhLkJveCwgaW5kZXg6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBpZiAoaW5kZXggPiB0aGlzLmFkTGlzdC5hcnJheS5sZW5ndGggJiYgdGhpcy5hZExpc3QuYXJyYXkubGVuZ3RoID09IDApIHJldHVybjtcbiAgICAgICAgaWYgKHRoaXMuYWRMaXN0LmFycmF5W2luZGV4XSAhPSBudWxsKSB7XG4gICAgICAgICAgICB2YXIgaW1nID0gY2VsbC5nZXRDaGlsZEJ5TmFtZShcImltZ1wiKSBhcyBMYXlhLkltYWdlO1xuICAgICAgICAgICAgaW1nLnNraW4gPSB0aGlzLmFkTGlzdC5hcnJheVtpbmRleF0ucGFyYW07XG4gICAgICAgIH1cbiAgICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWFpblZpZXcgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XHJcbiAgICBcclxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xyXG4gICAgfVxyXG5cclxuICAgIG9uRGlzYWJsZSgpOiB2b2lkIHtcclxuICAgIH1cclxufSIsImltcG9ydCBDb25maWdEYXRhIGZyb20gXCIuLi9tb2RlbHMvQ29uZmlnRGF0YVwiO1xuaW1wb3J0IFVzZXJEYXRhIGZyb20gXCIuLi9tb2RlbHMvVXNlckRhdGFcIjtcbmltcG9ydCBQbGF0Zm9ybU1nciBmcm9tIFwiLi4vbWdyQ29tbW9uL1BsYXRmb3JtTWdyXCI7XG5pbXBvcnQgU3RhdGlzdGljc01nciBmcm9tIFwiLi4vbWdyQ29tbW9uL1N0YXRpc3RpY3NNZ3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2lkZUFkVmlldyBleHRlbmRzIExheWEuU2NyaXB0IHtcbiAgICBwcml2YXRlIGlzQ2xpY2sgPSBmYWxzZTtcbiAgICBwcml2YXRlIHRvTGlua3MgPSBcIlwiO1xuICAgIHByaXZhdGUgdG9BcHBJZCA9IFwiXCI7XG4gICAgcHJpdmF0ZSB0aGVQb3NpdGlvbiA9IDE7Ly/mjqjlub/kvY3nva5cbiAgICBwcml2YXRlIG5vd2lkeCA9IDA7XG4gICAgcHJpdmF0ZSBtYXhkaXggPSAwO1xuICAgIHByaXZhdGUgaXNBbmltID0gdHJ1ZTtcbiAgICBwcml2YXRlIGlzQ2hhbmdlID0gZmFsc2U7XG5cbiAgICBwcml2YXRlIGltZzpMYXlhLkltYWdlO1xuXG5cbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxuICAgIG9uQXdha2UoKSB7XG4gICAgICAgIHRoaXMub3duZXIub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5qdW1wT3RoZXJHYW1lKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhcnQoaXNBbmltOiBib29sZWFuLCBpc0NoYW5nZTogYm9vbGVhbiwgdGhlUG9zaXRpb246IG51bWJlcikge1xuICAgICAgICBMYXlhLlR3ZWVuLmNsZWFyQWxsKHRoaXMpO1xuICAgICAgICBsZXQgYWRzID0gQ29uZmlnRGF0YS5nZXRBRERhdGEodGhlUG9zaXRpb24pO1xuICAgICAgICBpZiAoIWFkcyB8fCBhZHMubGVuZ3RoIDw9IDApIHtcbiAgICAgICAgICAgICh0aGlzLm93bmVyIGFzIExheWEuSW1hZ2UpLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAodGhpcy5vd25lciBhcyBMYXlhLkltYWdlKS5yb3RhdGlvbiA9IDA7XG4gICAgICAgICh0aGlzLm93bmVyIGFzIExheWEuSW1hZ2UpLnNjYWxlKDEsIDEpO1xuICAgICAgICB0aGlzLmlzQW5pbSA9IGlzQW5pbTtcbiAgICAgICAgdGhpcy5pc0NoYW5nZSA9IGlzQ2hhbmdlO1xuICAgICAgICB0aGlzLnRoZVBvc2l0aW9uID0gdGhlUG9zaXRpb247XG4gICAgICAgIHRoaXMubm93aWR4ID0gMDtcbiAgICAgICAgdGhpcy5tYXhkaXggPSBhZHMubGVuZ3RoIC0gMTtcbiAgICAgICAgdGhpcy5yYW5kb21BRCgpO1xuICAgICAgICBpZiAodGhpcy5pc0FuaW0pIHtcbiAgICAgICAgICAgIHRoaXMuYWRBbmltKCk7XG4gICAgICAgIH1cbiAgICAgICAgTGF5YS50aW1lci5jbGVhckFsbCh0aGlzKTtcbiAgICAgICAgdGhpcy5zdGFydEFuaW0oKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhcnRBbmltKCkge1xuICAgICAgICBsZXQgYWRJbmZvcyA9IENvbmZpZ0RhdGEuZ2V0QUREYXRhKHRoaXMudGhlUG9zaXRpb24pO1xuICAgICAgICBMYXlhLnRpbWVyLmxvb3AoMTAwMDAsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgIGlmIChhZEluZm9zICE9IG51bGwpIHsgLy/ov5nkuKrkvY3nva7nmoTlub/lkYrlpKfkuo7kuIAg5omN5Lya5Y675YiH5o2iICDkuZ/lsLHmmK/or7TmiY3kvJrmnInliqjnlLtcbiAgICAgICAgICAgICAgICBpZiAoYWRJbmZvcy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzQ2hhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUFEKCk7XG4gICAgICAgICAgICAgICAgICAgIH1lbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmFuZG9tQUQoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1lbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yYW5kb21BRCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzQ2hhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlQUQoKTtcbiAgICAgICAgICAgICAgICB9ZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmFuZG9tQUQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJhbmRvbUFEKCkge1xuICAgICAgICBsZXQgYWRzID0gQ29uZmlnRGF0YS5nZXRBRERhdGEodGhpcy50aGVQb3NpdGlvbik7XG4gICAgICAgIGlmIChhZHMpIHtcbiAgICAgICAgICAgIHZhciBsZW5nID0gYWRzLmxlbmd0aDtcbiAgICAgICAgICAgICh0aGlzLm93bmVyIGFzIExheWEuSW1hZ2UpLnNraW4gPSBhZHNbdGhpcy5ub3dpZHhdLnBhcmFtO1xuICAgICAgICAgICAgdGhpcy50b0FwcElkID0gYWRzW3RoaXMubm93aWR4XS5hcHBpZDtcbiAgICAgICAgICAgIHRoaXMudG9MaW5rcyA9IGFkc1t0aGlzLm5vd2lkeF0udG9MaW5rcztcbiAgICAgICAgICAgIHRoaXMubm93aWR4ID0gdGhpcy5ub3dpZHggKyAxO1xuICAgICAgICAgICAgaWYgKHRoaXMubm93aWR4ID4gdGhpcy5tYXhkaXgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm5vd2lkeCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgY2hhbmdlQUQoKSB7XG4gICAgICAgIGxldCBpbWcgPSB0aGlzLm93bmVyIGFzIExheWEuSW1hZ2U7XG4gICAgICAgIGltZy5zY2FsZSgxLDEpO1xuICAgICAgICBMYXlhLlR3ZWVuLnRvKGltZywgeyBzY2FsZVg6IDAsIHNjYWxlWTogMCB9LCAzMDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5yYW5kb21BRCgpO1xuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhpbWcsIHsgc2NhbGVYOiAwLCBzY2FsZVk6IDAgfSwgMTAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKGltZywgeyBzY2FsZVg6IDEsIHNjYWxlWTogMSB9LCAzMDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLmFkQW5pbSgpO1xuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfSkpO1xuXG4gICAgfVxuXG4gICAgcHVibGljIGFkQW5pbSgpOiB2b2lkIHtcbiAgICAgICAgbGV0IGltZyA9IHRoaXMub3duZXIgYXMgTGF5YS5JbWFnZTtcbiAgICAgICAgaW1nLnJvdGF0aW9uID0gMDtcbiAgICAgICAgTGF5YS5Ud2Vlbi50byhpbWcsIHsgcm90YXRpb246IDEwIH0sIDMwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKGltZywgeyByb3RhdGlvbjogMCB9LCAzMDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIExheWEuVHdlZW4udG8oaW1nLCB7IHJvdGF0aW9uOiAtMTAgfSwgMzAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhpbWcsIHsgcm90YXRpb246IDAgfSwgMzAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRBbmltKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH0pKTtcblxuICAgIH1cblxuXG5cbiAgICBqdW1wT3RoZXJHYW1lKCkge1xuICAgICAgICBpZiAodGhpcy5pc0NsaWNrKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pc0NsaWNrID0gdHJ1ZTtcbiAgICAgICAgdmFyIF9kOiBhbnkgPSB7XG4gICAgICAgICAgICBteV9hcHBpZDogQ29uZmlnRGF0YS5teUFwcGlkLFxuICAgICAgICAgICAgbXlfdXVpZDogdGhpcy50aGVQb3NpdGlvbixcbiAgICAgICAgICAgIHRvX2FwcGlkOiB0aGlzLnRvQXBwSWQsXG5cbiAgICAgICAgICAgIHBhdGg6dGhpcy50b0xpbmtzLFxuICAgICAgICAgICAgYXBwSWQ6dGhpcy50b0FwcElkLFxuICAgICAgICB9O1xuICAgICAgICBQbGF0Zm9ybU1nci5wdEFQSS5uYXZpZ2F0ZVRvTWluaVByb2dyYW0oX2QpO1xuICAgICAgICB0aGlzLmNsaWNrZWRBZCgpO1xuICAgIH1cblxuICAgIGNsaWNrZWRBZCgpe1xuICAgICAgICBMYXlhLnRpbWVyLmNsZWFyQWxsKHRoaXMpO1xuICAgICAgICBMYXlhLlR3ZWVuLmNsZWFyQWxsKHRoaXMub3duZXIpO1xuICAgICAgICBMYXlhLnRpbWVyLm9uY2UoNTAwLHRoaXMsKCk9PntcbiAgICAgICAgICAgIHRoaXMuaXNDbGljayA9IGZhbHNlO1xuICAgICAgICB9KVxuICAgICAgICB0aGlzLmFkQW5pbSgpO1xuICAgICAgICB0aGlzLmNoYW5nZUFEKCk7XG4gICAgfVxufSIsImltcG9ydCBCYXNlVmlldyBmcm9tIFwiLi9CYXNlVmlld1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUaXBWaWV3IGV4dGVuZHMgIEJhc2VWaWV3IHtcbiAgICBwcml2YXRlIHRpcExibDpMYXlhLkxhYmVsO1xuICAgIFxuICAgIFxuICAgIG9uQXdha2UoKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLm9uQXdha2UoKTtcbiAgICAgICAgdGhpcy50aXBMYmwgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiaW1hZ2VcIikuZ2V0Q2hpbGRCeU5hbWUoXCJMYWJlbFwiKSBhcyBMYXlhLkxhYmVsO1xuICAgIH1cbiAgICBcbiAgICBwdWJsaWMgYWRkRXZlbnQoKSB7XG4gICAgICAgIHRoaXMub3duZXIub24oTGF5YS5FdmVudC5DTElDSyx0aGlzLCgpPT57XG4gICAgICAgICAgICB0aGlzLmNsb3NlVmlldygpO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIG9wZW5WaWV3KHN0cj86IGFueSl7XG4gICAgICAgIHN1cGVyLm9wZW5WaWV3KHN0cik7XG4gICAgICAgIHRoaXMudGlwTGJsLnRleHQgPSBzdHI7XG4gICAgICAgIExheWEudGltZXIub25jZSgyMDAwLHRoaXMsKCk9PntcbiAgICAgICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn0iLCJpbXBvcnQgTXlVdGlscyBmcm9tIFwiLi4vLi4vdG9vbHMvTXlVdGlsc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSYW5rSXRlbSBleHRlbmRzIExheWEuQm94IHtcbiAgICBwcml2YXRlIGJnSW1nOiBMYXlhLkltYWdlO1xuICAgIHByaXZhdGUgcmFua0ltZzogTGF5YS5JbWFnZTtcbiAgICBwcml2YXRlIHJhbmtMYmw6IExheWEuTGFiZWw7XG5cbiAgICBwcml2YXRlIGF2YXRhckltZzogTGF5YS5JbWFnZTtcbiAgICBwcml2YXRlIG5hbWVMYmw6IExheWEuTGFiZWw7XG5cbiAgICBwcml2YXRlIHNjb3JlSWNvbkltZzogTGF5YS5JbWFnZTtcbiAgICBwcml2YXRlIHNjb3JlOiBMYXlhLkxhYmVsO1xuXG4gICAgY29uc3RydWN0b3IoKSB7IFxuICAgICAgICBzdXBlcigpOyBcbiAgICAgICAgdGhpcy5iZ0ltZyA9IHRoaXMuZ2V0Q2hpbGRCeU5hbWUoXCJpbWdCZ1wiKSBhcyBMYXlhLkltYWdlO1xuICAgICAgICB0aGlzLnJhbmtJbWcgPSB0aGlzLmdldENoaWxkQnlOYW1lKFwicmFua0ltZ1wiKSBhcyBMYXlhLkltYWdlO1xuICAgICAgICB0aGlzLnJhbmtMYmwgPSB0aGlzLmdldENoaWxkQnlOYW1lKFwicmFua0xibFwiKSBhcyBMYXlhLkxhYmVsO1xuXG4gICAgICAgIHRoaXMuYXZhdGFySW1nID0gdGhpcy5nZXRDaGlsZEJ5TmFtZShcImF2YXRhckltZ1wiKSBhcyBMYXlhLkltYWdlO1xuICAgICAgICB0aGlzLm5hbWVMYmwgPSB0aGlzLmdldENoaWxkQnlOYW1lKFwibGJsTmFtZVwiKSBhcyBMYXlhLkxhYmVsO1xuXG4gICAgICAgIHRoaXMuc2NvcmVJY29uSW1nID0gdGhpcy5nZXRDaGlsZEJ5TmFtZShcInNjb3JlSWNvbkltZ1wiKSBhcyBMYXlhLkltYWdlO1xuICAgICAgICB0aGlzLnNjb3JlID0gdGhpcy5nZXRDaGlsZEJ5TmFtZShcInNjb3JlXCIpIGFzIExheWEuTGFiZWw7XG4gICAgfVxuXG4gICAgdXBkYXRlSXRlbShpdGVtRGF0YSl7XG4gICAgICAgIHRoaXMucmFua0ltZy5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5yYW5rTGJsLnRleHQgPSBpdGVtRGF0YS5pbmRleDtcbiAgICAgICAgc3dpdGNoKGl0ZW1EYXRhLmluZGV4KXtcbiAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgICAgICB0aGlzLnJhbmtMYmwudGV4dCA9IFwiXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5yYW5rSW1nLnNraW4gPSBcInJhbmsvXCIrIGl0ZW1EYXRhLmluZGV4ICtcIi5wbmdcIjtcbiAgICAgICAgICAgICAgICB0aGlzLnJhbmtJbWcuYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFNeVV0aWxzLmlzTnVsbChpdGVtRGF0YS5oZWFkSW1hZ2UpJiZpdGVtRGF0YS5oZWFkSW1hZ2UhPVwieW91a2VcIikge1xuICAgICAgICAgICAgbGV0IGF2YXRhclVybCA9IGl0ZW1EYXRhLmhlYWRJbWFnZS5yZXBsYWNlKFwiLzEzMlwiLCBcIi80NlwiKTtcbiAgICAgICAgICAgIHRoaXMuYXZhdGFySW1nLnNraW4gPSBhdmF0YXJVcmw7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IG5hbWUgPSBpdGVtRGF0YS51c2VyX25pY2tuYW1lLmxlbmd0aCA+IDYgPyBpdGVtRGF0YS51c2VyX25pY2tuYW1lLnN1YnN0cigwLCA4KSA6IGl0ZW1EYXRhLnVzZXJfbmlja25hbWU7XG4gICAgICAgIHRoaXMubmFtZUxibC50ZXh0ID0gbmFtZSE9XCJcIj9uYW1lOlwi56We56eY546p5a62XCI7XG5cbiAgICAgICAgdGhpcy5zY29yZS50ZXh0ID0gaXRlbURhdGEuc2NvcmU7XG4gICAgfVxuXG59IiwiaW1wb3J0IEJhc2VWaWV3IGZyb20gXCIuLi9CYXNlVmlld1wiO1xuaW1wb3J0IFBsYXRmb3JtTWdyIGZyb20gXCIuLi8uLi9tZ3JDb21tb24vUGxhdGZvcm1NZ3JcIjtcbmltcG9ydCBNeVV0aWxzIGZyb20gXCIuLi8uLi90b29scy9NeVV0aWxzXCI7XG5pbXBvcnQgV1hTdWJEb21haW4gZnJvbSBcIi4uLy4uL3BsYXRmb3JtL3d4L1dYU3ViRG9tYWluXCI7XG5pbXBvcnQgSHR0cE1nciBmcm9tIFwiLi4vLi4vbWdyQ29tbW9uL0h0dHBNZ3JcIjtcbmltcG9ydCBSYW5rSXRlbSBmcm9tIFwiLi9SYW5rSXRlbVwiO1xuaW1wb3J0IFVzZXJEYXRhIGZyb20gXCIuLi8uLi9tb2RlbHMvVXNlckRhdGFcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmFua1ZpZXcgZXh0ZW5kcyBCYXNlVmlldyB7XG5cbiAgICBwcml2YXRlIGZyaWVuZEJ0bjpMYXlhLkltYWdlO1xuICAgIHByaXZhdGUgd29ybGRCdG46TGF5YS5JbWFnZTtcbiAgICBwcml2YXRlIGNsb3NlQnRuOkxheWEuSW1hZ2U7XG4gICAgXG4gICAgcHJpdmF0ZSB3b3JsZFJhbms6TGF5YS5JbWFnZTtcbiAgICBwcml2YXRlIHdvcmxkRGF0YTpBcnJheTxhbnk+O1xuICAgIHByaXZhdGUgd3hPcGVuRGF0YVZpZXc6IExheWEuV1hPcGVuRGF0YVZpZXdlcjtcbiAgICBcbiAgICBwcml2YXRlIHdvcmxkUmFua0xpc3Q6IExheWEuTGlzdDtcblxuICAgIHByaXZhdGUgc2VsZlJhbmtJVGVtOlJhbmtJdGVtO1xuICAgIHByaXZhdGUgc2VsZlJhbmtEYXRhO1xuICAgIFxuICAgIG9uQXdha2UoKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLm9uQXdha2UoKTtcbiAgICAgICAgbGV0IG5vZGUgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiY29udGVudFwiKVxuICAgICAgICB0aGlzLmNsb3NlQnRuID0gbm9kZS5nZXRDaGlsZEJ5TmFtZShcImJ0bl9jbG9zZVwiKSBhcyBMYXlhLkltYWdlO1xuXG4gICAgICAgIHRoaXMuZnJpZW5kQnRuID0gbm9kZS5nZXRDaGlsZEJ5TmFtZShcImZyaWVuZEJ0blwiKSBhcyBMYXlhLkltYWdlO1xuICAgICAgICB0aGlzLndvcmxkQnRuID0gbm9kZS5nZXRDaGlsZEJ5TmFtZShcIndvcmxkQnRuXCIpIGFzIExheWEuSW1hZ2U7XG4gICAgICAgIHRoaXMud3hPcGVuRGF0YVZpZXcgPSBub2RlLmdldENoaWxkQnlOYW1lKFwid3hPcGVuRGF0YVZpZXdcIikgYXMgTGF5YS5XWE9wZW5EYXRhVmlld2VyO1xuICAgICAgICB0aGlzLnd4T3BlbkRhdGFWaWV3LnkgPSB0aGlzLnd4T3BlbkRhdGFWaWV3LnkgICsgUGxhdGZvcm1NZ3IucHRBUEkuZ2V0T2Zmc2V0T3BlbkRvbWFpbigpLnkvMjtcbiAgICAgICAgV1hTdWJEb21haW4uaW5zdGFuY2Uuc2V0T3BlblZpZXcodGhpcy53eE9wZW5EYXRhVmlldyk7XG4gICAgICAgIFxuICAgICAgICB0aGlzLndvcmxkUmFua0xpc3QgPSBub2RlLmdldENoaWxkQnlOYW1lKFwid29ybGRSYW5rTGlzdFwiKSBhcyBMYXlhLkxpc3Q7XG4gICAgICAgIHRoaXMud29ybGRSYW5rTGlzdC5hcnJheSA9IFtdO1xuICAgICAgICB0aGlzLndvcmxkUmFua0xpc3QuaXRlbVJlbmRlciA9IFJhbmtJdGVtO1xuICAgICAgICB0aGlzLndvcmxkUmFua0xpc3QucmVuZGVySGFuZGxlciA9IG5ldyBMYXlhLkhhbmRsZXIodGhpcywgdGhpcy5vblJlbmRlcik7XG4gICAgICAgIHRoaXMud29ybGRSYW5rTGlzdC52U2Nyb2xsQmFyU2tpbiA9IFwiXCI7XG5cbiAgICAgICAgdGhpcy5zZWxmUmFua0lUZW0gPSBub2RlLmdldENoaWxkQnlOYW1lKFwic2VsZlJhbmtJdGVtXCIpLmFkZENvbXBvbmVudChSYW5rSXRlbSk7XG5cbiAgICAgICAgTXlVdGlscy5hdXRvU2NyZWVuU2l6ZShbdGhpcy5jbG9zZUJ0bl0pO1xuICAgIH1cblxuICAgIHNldE15UmFua0luZm8oKXtcbiAgICAgICAgdGhpcy5zZWxmUmFua0lUZW0udXBkYXRlSXRlbSh0aGlzLnNlbGZSYW5rRGF0YSk7XG4gICAgfVxuXG4gICAgb25SZW5kZXIoY2VsbDogUmFua0l0ZW0sIGluZGV4OiBudW1iZXIpOiBhbnkge1xuICAgICAgICBjZWxsLnVwZGF0ZUl0ZW0oY2VsbC5kYXRhU291cmNlKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYWRkRXZlbnQoKSB7XG4gICAgICAgIHRoaXMuY2xvc2VCdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5jbG9zZVZpZXcpO1xuICAgICAgICB0aGlzLndvcmxkQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMud29ybGRSYW5rQ2xpY2spO1xuICAgICAgICB0aGlzLmZyaWVuZEJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLmZyaWVuZFJhbmtDbGljayk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRXb3JsZERhdGEoKXtcbiAgICAgICAgSHR0cE1nci5pbnN0YW5jZS5nZXRXb3JsZFJhbmsoe1xuICAgICAgICAgICAgc3VjY2VzczoocmVzKT0+e1xuICAgICAgICAgICAgICAgIHRoaXMud29ybGREYXRhID0gcmVzLnJhbms7XG4gICAgICAgICAgICAgICAgdGhpcy5zZWxmUmFua0RhdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgIGluZGV4IDogcmVzLm15SW5kZXgsXG4gICAgICAgICAgICAgICAgICAgIHVzZXJfbmlja25hbWU6VXNlckRhdGEubmlja05hbWUsXG4gICAgICAgICAgICAgICAgICAgIGhlYWRJbWFnZTpVc2VyRGF0YS5hdmF0YXJVcmwsXG4gICAgICAgICAgICAgICAgICAgIHNjb3JlOlVzZXJEYXRhLnNjb3JlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmKHJlcy5teUluZGV4ICYmIHJlcy5teUluZGV4IDw9IHRoaXMud29ybGREYXRhLmxlbmd0aCl7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZlJhbmtEYXRhID0gdGhpcy53b3JsZERhdGFbcmVzLm15SW5kZXhdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwcml2YXRlIHNldFdvcmxkUmFua0R0YSgpe1xuICAgICAgICB0aGlzLndvcmxkUmFua0xpc3QuYXJyYXkgPSB0aGlzLndvcmxkRGF0YTtcbiAgICAgICAgdGhpcy53b3JsZFJhbmtMaXN0LnJlZnJlc2goKTtcbiAgICB9XG5cbiAgICB3b3JsZFJhbmtDbGljaygpOiBhbnkge1xuICAgICAgICBpZiAodGhpcy53b3JsZFJhbmsuYWN0aXZlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLndvcmxkUmFuay5hY3RpdmUgPSB0cnVlO1xuICAgICAgICB0aGlzLnd4T3BlbkRhdGFWaWV3LmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICBXWFN1YkRvbWFpbi5pbnN0YW5jZS5jbG9zZUZyaWVuZFJhbmsoKTtcbiAgICAgICAgaWYodGhpcy53b3JsZERhdGEpe1xuICAgICAgICAgICAgdGhpcy5zZXRXb3JsZFJhbmtEdGEoKTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICB0aGlzLmdldFdvcmxkRGF0YSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnJpZW5kUmFua0NsaWNrKCk6IGFueSB7XG4gICAgICAgIGlmICghTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUgfHwgdGhpcy53eE9wZW5EYXRhVmlldy5hY3RpdmUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMud3hPcGVuRGF0YVZpZXcuYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy53b3JsZFJhbmsuYWN0aXZlID0gZmFsc2U7XG4gICAgICAgIC8v5omT5byA5a2Q5Z+f5o6S6KGM5qacIFRPRE9cbiAgICAgICAgV1hTdWJEb21haW4uaW5zdGFuY2Uub3BlbkZyaWVuZFJhbmsoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVtb3ZlRXZlbnQoKSB7XG4gICAgICAgIHRoaXMuY2xvc2VCdG4ub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuY2xvc2VWaWV3KTtcbiAgICAgICAgdGhpcy53b3JsZEJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy53b3JsZFJhbmtDbGljayk7XG4gICAgICAgIHRoaXMuZnJpZW5kQnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLmZyaWVuZFJhbmtDbGljayk7XG4gICAgICAgIHN1cGVyLnJlbW92ZUV2ZW50KCk7XG4gICAgfVxuICAgIFxuICAgIHB1YmxpYyBjbG9zZVZpZXcoKXtcbiAgICAgICAgdGhpcy53b3JsZERhdGEgPSBudWxsO1xuICAgICAgICBzdXBlci5jbG9zZVZpZXcoKTtcbiAgICB9XG59Il19
