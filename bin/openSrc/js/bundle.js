var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
Object.defineProperty(exports, "__esModule", { value: true });
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
    };
    GameConfig.width = 560;
    GameConfig.height = 668;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "FriendRank.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var FriendRankView_1 = require("./script/FriendRankView");
var CommonData_1 = require("./script/CommonData");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        Laya.isWXOpenDataContext = true;
        Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, false);
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        Laya.alertGlobalError = true;
        this.onConfigLoaded();
    }
    Main.prototype.onConfigLoaded = function () {
        if (!Laya.Browser.onMiniGame)
            return;
        window["wx"].getUserInfo({
            openIdList: ['selfOpenId'],
            lang: 'zh_CN',
            success: function (res) {
                var data = res.data;
                if (data[0].openId == "selfOpenId") {
                    CommonData_1.default.avatarUrl = data[0].avatarUrl;
                    CommonData_1.default.nickName = data[0].nickName;
                }
            }
        });
        // CommonData.GetFriends(null, null);
        var self = this;
        Laya.Browser.window.wx.onMessage(function (message) {
            if (message.url == "res/atlas/rank.atlas") {
                Laya.loader.load("res/atlas/rank.atlas", Laya.Handler.create(this, function () {
                    console.log("res/atlas/rank.atlas加载完成");
                }));
            }
            else if (message.url == "res/json/config.json") {
                Laya.loader.load("res/json/config.json", Laya.Handler.create(this, function () {
                    console.log("res/json/config.json加载完成");
                    CommonData_1.default.config = Laya.loader.getRes("res/json/config.json");
                }));
            }
            else if (message.url == "common/common.atlas") {
                Laya.loader.load("common/common.atlas", Laya.Handler.create(this, function () {
                    console.log("common/common.atlas加载完成");
                }));
            }
            switch (message['type']) {
                case "openFriendList": //主界面排行榜-好友排行
                    self.closeOtherView();
                    self.friendRank = new FriendRankView_1.FriendRankView();
                    Laya.stage.addChild(self.friendRank);
                    CommonData_1.default.GetFriends(self, function () {
                        self.friendRank.drawRankList(CommonData_1.default.friends);
                    });
                    break;
                case "closeRankUI": //主界面排行榜UI关闭
                    if (self.friendRank) {
                        self.friendRank.close();
                        self.friendRank = null;
                        Laya.loader.clearUnLoaded();
                    }
                    break;
                case "upScore": //更新子域分数显示
                    CommonData_1.default.UpdateSelfScore(message.data);
                    break;
            }
        }.bind(this));
    };
    Main.prototype.closeOtherView = function () {
        if (this.friendRank) {
            this.friendRank.close();
            this.friendRank = null;
        }
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./script/CommonData":3,"./script/FriendRankView":4}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CommonData = /** @class */ (function () {
    function CommonData() {
    }
    //好友数据
    CommonData.GetFriends = function (caller, callback) {
        var _this = this;
        if (this.NeedRefresh(CommonData.preFriendsTime)) {
            window["wx"].getFriendCloudStorage({
                keyList: ["level", "skin"],
                success: function (res) {
                    CommonData.preFriendsTime = Laya.Browser.now();
                    CommonData.friends = [];
                    res.data.forEach(function (v) {
                        if (v.KVDataList.length > 0) {
                            var _score = 0;
                            var _skinId = 101;
                            for (var i = 0; i < v.KVDataList.length; i++) {
                                if (v.KVDataList[i].key == "level") {
                                    _score = parseInt(v.KVDataList[i].value);
                                }
                                else if (v.KVDataList[i].key == "skin") {
                                    _skinId = v.KVDataList[i].value;
                                }
                            }
                            CommonData.friends.push({
                                nickname: v.nickname,
                                avatarUrl: v.avatarUrl,
                                score: _score,
                                viewId: _skinId
                            });
                            // if(!CommonData.avatarCache[v.avatarUrl] && _score > 1){
                            //     let txt = new Laya.Texture();
                            //     txt.load(v.avatarUrl.replace("/132","/46"));
                            //     CommonData.avatarCache[v.avatarUrl] = txt;
                            // }
                        }
                    });
                    _this.SortScore(CommonData.friends);
                    if (callback)
                        callback.call(caller, CommonData.friends);
                }
            });
        }
        else {
            if (callback)
                callback.call(caller, CommonData.friends);
        }
    };
    CommonData.NeedRefresh = function (pre) {
        return Laya.Browser.now() - pre > CommonData.refreshTime;
    };
    CommonData.UpdateSelfScore = function (score) {
        for (var i = 0; i < CommonData.friends.length; i++) {
            if (CommonData.friends[i].avatarUrl == CommonData.avatarUrl) {
                CommonData.friends[i].score = score;
                break;
            }
        }
        this.SortScore(CommonData.friends);
    };
    CommonData.SortScore = function (data) {
        data = data.sort(function (a, b) {
            if (a.score > b.score)
                return -1;
            if (a.score < b.score)
                return 1;
            return 1;
        });
    };
    //一小时刷新一次好友数据
    CommonData.refreshTime = 1 * 60 * 60 * 1000;
    /**我自己的头像url */
    CommonData.avatarUrl = "";
    CommonData.nickName = "";
    CommonData.avatarUrlGroup = "";
    CommonData.nickNameGroup = "";
    //好友数据
    CommonData.preFriendsTime = 0;
    CommonData.friends = [];
    //缓存头像
    CommonData.avatarCache = {};
    CommonData.config = {};
    return CommonData;
}());
exports.default = CommonData;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var CommonData_1 = require("./CommonData");
var FriendRankView = /** @class */ (function (_super) {
    __extends(FriendRankView, _super);
    function FriendRankView() {
        var _this = _super.call(this) || this;
        _this.init();
        return _this;
    }
    FriendRankView.prototype.init = function () {
        this.rankList.array = [];
        this.rankList.renderHandler = new Laya.Handler(this, this.onRender);
        this.rankList.vScrollBarSkin = "";
        this.noRank.visible = false;
        this.selfRank.visible = false;
    };
    FriendRankView.prototype.drawRankList = function (data) {
        this.rankList.scrollTo(0);
        var findMe = false;
        // this.selfHead.skin = (CommonData.avatarUrl == "" || CommonData.avatarUrl == null) ? "rank/toux@2x.png" : CommonData.avatarUrl;
        if (CommonData_1.default.avatarUrl == "" || CommonData_1.default.avatarUrl == null) {
            this.selfHead.skin = "rank/toux@2x.png";
        }
        else {
            var avatarUrl = CommonData_1.default.avatarUrl.replace("/132", "/46");
            this.selfHead.skin = avatarUrl;
        }
        this.selfName.text = CommonData_1.default.nickName;
        data.forEach(function (v) {
            if (v.avatarUrl == CommonData_1.default.avatarUrl) {
                findMe = true;
            }
        });
        this.rankList.repeatY = data.length;
        this.rankList.array = data;
        this.rankList.refresh();
        var index = -1;
        var skins = CommonData_1.default.config["skin"];
        if (findMe) {
            for (var i = 0; i < data.length; i++) {
                if (data[i].avatarUrl == CommonData_1.default.avatarUrl) {
                    this.selfRank.visible = true;
                    index = i;
                    this.selfScore.text = data[i].score + "关";
                    this.SetRankStyle(this.selfRankLbl, this.selfRankIcon, i + 1);
                    if (data[i].viewId) {
                        // this.selfSkin.skin = "skin/"+data[i].viewId+".png";
                        var ski = skins[data[i].viewId];
                        var skinPath = "common/wa" + ski.model + "-" + ski.skin + "@2x.png";
                        this.selfSkin.skin = skinPath;
                    }
                    else {
                        // this.selfSkin.skin = "skin/3001.png";
                    }
                    break;
                }
            }
        }
        this.selfRankLbl.visible = true;
        if (index == -1) {
            this.selfScore.text = "1关";
            this.SetRankStyle(this.selfRankLbl, this.selfRankIcon, -1, true);
            this.selfSkin.skin = "common/wa1-frog_01@2x.png";
        }
    };
    FriendRankView.prototype.onRender = function (cell, index) {
        var data = this.rankList.array[index];
        var cellBg = cell.getChildByName("bg");
        cellBg.getChildByName("img_hand").skin = "rank/toux@2x.png";
        if (data.avatarUrl && data.avatarUrl.length > 4) {
            var avatarUrl = data.avatarUrl.replace("/132", "/46");
            cellBg.getChildByName("img_hand").skin = avatarUrl;
        }
        cellBg.getChildByName("lbl_nickName").text = data.nickname;
        cellBg.getChildByName("lbl_pass").text = data.score + "关";
        var skins = CommonData_1.default.config["skin"];
        if (data.viewId) {
            var ski = skins[data.viewId];
            var skinPath = "common/wa" + ski.model + "-" + ski.skin + "@2x.png";
            cellBg.getChildByName("img_ski").skin = skinPath;
        }
        else {
            cellBg.getChildByName("img_ski").skin = "common/wa1-frog_01@2x.png";
        }
        var label = cellBg.getChildByName("lbl_rankIndex");
        var image = cellBg.getChildByName("img_rank");
        this.SetRankStyle(label, image, index + 1);
    };
    FriendRankView.prototype.SetRankStyle = function (label, image, rank, isSelf) {
        if (rank == 1) {
            label.text = "";
            image.skin = "rank/1@2x.png";
        }
        else if (rank == 2) {
            label.text = "";
            image.skin = "rank/2@2x.png";
        }
        else if (rank == 3) {
            label.text = "";
            image.skin = "rank/3@2x.png";
        }
        else {
            image.skin = null;
            // if (rank == -1&&isSelf){
            //     this.noRank.visible = true;
            //     this.noRank.text = "100+";
            //     label.visible = false;
            // }
            // else
            label.text = rank.toString();
        }
    };
    FriendRankView.prototype.close = function () {
        this.destroy();
    };
    return FriendRankView;
}(layaMaxUI_1.ui.FriendRankUI));
exports.FriendRankView = FriendRankView;
},{"../ui/layaMaxUI":5,"./CommonData":3}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ui;
(function (ui) {
    var FriendRankUI = /** @class */ (function (_super) {
        __extends(FriendRankUI, _super);
        function FriendRankUI() {
            return _super.call(this) || this;
        }
        FriendRankUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(FriendRankUI.uiView);
        };
        FriendRankUI.uiView = { "type": "View", "props": { "width": 560, "height": 668 }, "compId": 2, "child": [{ "type": "Image", "props": { "width": 561, "var": "anchorS", "height": 791 }, "compId": 3, "child": [{ "type": "List", "props": { "y": 0, "x": 0, "width": 560, "var": "rankList", "spaceY": 18, "repeatX": 1, "height": 688, "elasticEnabled": false }, "compId": 4, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "renderType": "render" }, "compId": 21, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 560, "skin": "rank/kuan-phb-1@2x.png", "sizeGrid": "12,13,12,12", "name": "bg", "height": 82 }, "compId": 5, "child": [{ "type": "Image", "props": { "y": 4.5, "x": 9, "width": 61, "skin": "rank/1@2x.png", "name": "img_rank", "height": 73 }, "compId": 6 }, { "type": "Image", "props": { "y": 7, "x": 80, "width": 68, "name": "img_hand", "height": 68 }, "compId": 7 }, { "type": "Image", "props": { "y": 16, "x": 382, "width": 46, "name": "img_ski", "height": 48 }, "compId": 8 }, { "type": "Label", "props": { "y": 34, "x": 164, "width": 110, "overflow": "hidden", "name": "lbl_nickName", "height": 24, "fontSize": 24, "color": "#004c4f" }, "compId": 9 }, { "type": "Label", "props": { "y": 41, "x": 42, "width": 76, "valign": "middle", "text": "1", "strokeColor": "#2c11f1", "stroke": 2, "overflow": "visible", "name": "lbl_rankIndex", "height": 40, "fontSize": 32, "color": "#ffffff", "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 10 }, { "type": "Label", "props": { "y": 41, "x": 429, "width": 109, "valign": "middle", "text": "1", "overflow": "visible", "name": "lbl_pass", "height": 40, "fontSize": 36, "color": "#004c4f", "anchorY": 0.5, "anchorX": 0, "align": "right" }, "compId": 11 }] }] }] }, { "type": "Image", "props": { "y": 700, "x": 0, "width": 560, "visible": false, "var": "selfRank", "skin": "rank/kuan-phb-2@2x.png", "sizeGrid": "12,13,12,12", "height": 82 }, "compId": 13, "child": [{ "type": "Image", "props": { "y": 4.5, "x": 9, "width": 61, "var": "selfRankIcon", "skin": "rank/1@2x.png", "height": 73 }, "compId": 14 }, { "type": "Image", "props": { "y": 7, "x": 80, "width": 68, "var": "selfHead", "name": "img_hand", "height": 68 }, "compId": 15 }, { "type": "Image", "props": { "y": 16, "x": 383, "width": 46, "var": "selfSkin", "height": 48 }, "compId": 16 }, { "type": "Label", "props": { "y": 34, "x": 164, "width": 110, "var": "selfName", "overflow": "hidden", "name": "lbl_nickName", "height": 24, "fontSize": 24, "color": "#004c4f" }, "compId": 17 }, { "type": "Label", "props": { "y": 44, "x": 40, "width": 80, "var": "selfRankLbl", "valign": "middle", "text": "1", "strokeColor": "#2c11f1", "stroke": 2, "overflow": "visible", "name": "lbl_rankIndex", "height": 40, "fontSize": 22, "color": "#ffffff", "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 18 }, { "type": "Label", "props": { "y": 41, "x": 429, "width": 109, "var": "selfScore", "valign": "middle", "text": "1", "overflow": "visible", "name": "lbl_pass", "height": 40, "fontSize": 36, "color": "#004c4f", "anchorY": 0.5, "anchorX": 0, "align": "right" }, "compId": 19 }, { "type": "Label", "props": { "y": 46, "x": 42, "width": 76, "visible": false, "var": "noRank", "valign": "middle", "text": "100+", "strokeColor": "#2c11f1", "stroke": 2, "overflow": "visible", "name": "noRank", "height": 40, "fontSize": 30, "color": "#ffffff", "bold": false, "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 20 }] }] }], "loadList": ["rank/kuan-phb-1@2x.png", "rank/1@2x.png", "rank/kuan-phb-2@2x.png"], "loadList3D": [] };
        return FriendRankUI;
    }(Laya.View));
    ui.FriendRankUI = FriendRankUI;
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
